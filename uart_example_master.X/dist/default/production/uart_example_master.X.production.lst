

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 26 19:54:54 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 18/08/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0006                     _PORTB	set	6
   167     0019                     _TXREG	set	25
   168     00C4                     _CREN	set	196
   169     00C7                     _SPEN	set	199
   170     0086                     _TRISB	set	134
   171     0099                     _SPBRG	set	153
   172     040F                     _nRBPU	set	1039
   173     04C1                     _TRMT	set	1217
   174     04C5                     _TXEN	set	1221
   175     043E                     _TRISC6	set	1086
   176     043F                     _TRISC7	set	1087
   177     04C4                     _SYNC	set	1220
   178     04C2                     _BRGH	set	1218
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2FE1   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_UART_basla:
   195     0070                     ??_UART_basla:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ?_UART_yaz:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_UART_yaz:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     UART_yaz@veri:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212     0070                     	ds	1
   213     0071                     ??_main:
   214                           
   215                           ; 1 bytes @ 0x1
   216     0071                     	ds	2
   217                           
   218                           	psect	maintext
   219     07E1                     __pmaintext:	
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   222 ;;
   223 ;; *************** function _main *****************
   224 ;; Defined at:
   225 ;;		line 79 in file "newmain.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, pclath, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0
   241 ;;      Temps:          2       0       0       0       0
   242 ;;      Totals:         2       0       0       0       0
   243 ;;Total ram usage:        2 bytes
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_UART_basla
   247 ;;		_UART_yaz
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     07E1                     _main:	
   254                           ;psect for function _main
   255                           
   256                           
   257                           ;newmain.c: 81: TRISB = 0xFF;
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261     07E1  30FF               	movlw	255
   262     07E2  1683               	bsf	3,5	;RP0=1, select bank1
   263     07E3  0086               	movwf	6	;volatile
   264                           
   265                           ;newmain.c: 82: nRBPU = 0;
   266     07E4  1381               	bcf	1,7	;volatile
   267                           
   268                           ;newmain.c: 83: UART_basla();
   269     07E5  120A  118A  27D3  120A  118A  	fcall	_UART_basla
   270     07EA                     l630:
   271                           
   272                           ;newmain.c: 85: {;newmain.c: 86: UART_yaz(PORTB);
   273     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   274     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   275     07EC  0806               	movf	6,w	;volatile
   276     07ED  120A  118A  27CB  120A  118A  	fcall	_UART_yaz
   277                           
   278                           ;newmain.c: 87: _delay((unsigned long)((100)*(4000000/4000.0)));
   279     07F2  3082               	movlw	130
   280     07F3  00F2               	movwf	??_main+1
   281     07F4  30DD               	movlw	221
   282     07F5  00F1               	movwf	??_main
   283     07F6                     u27:
   284     07F6  0BF1               	decfsz	??_main,f
   285     07F7  2FF6               	goto	u27
   286     07F8  0BF2               	decfsz	??_main+1,f
   287     07F9  2FF6               	goto	u27
   288     07FA  2FFB               	nop2
   289     07FB  2FEA               	goto	l630
   290     07FC                     __end_of_main:
   291                           
   292                           	psect	text1
   293     07CB                     __ptext1:	
   294 ;; *************** function _UART_yaz *****************
   295 ;; Defined at:
   296 ;;		line 63 in file "newmain.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  veri            1    wreg     unsigned char 
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  veri            1    0[COMMON] unsigned char 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg
   305 ;; Tracked objects:
   306 ;;		On entry : 300/0
   307 ;;		On exit  : 300/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         1       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         1       0       0       0       0
   314 ;;Total ram usage:        1 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323     07CB                     _UART_yaz:	
   324                           ;psect for function _UART_yaz
   325                           
   326                           
   327                           ;incstack = 0
   328                           ; Regs used in _UART_yaz: [wreg]
   329                           ;UART_yaz@veri stored from wreg
   330     07CB  00F0               	movwf	UART_yaz@veri
   331     07CC                     l56:	
   332                           ;newmain.c: 66: ;
   333                           
   334     07CC  1683               	bsf	3,5	;RP0=1, select bank1
   335     07CD  1C98               	btfss	24,1	;volatile
   336     07CE  2FCC               	goto	l56
   337                           
   338                           ;newmain.c: 67: TXREG = veri;
   339     07CF  0870               	movf	UART_yaz@veri,w
   340     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   341     07D1  0099               	movwf	25	;volatile
   342     07D2  0008               	return
   343     07D3                     __end_of_UART_yaz:
   344                           
   345                           	psect	text2
   346     07D3                     __ptext2:	
   347 ;; *************** function _UART_basla *****************
   348 ;; Defined at:
   349 ;;		line 22 in file "newmain.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg
   358 ;; Tracked objects:
   359 ;;		On entry : B00/100
   360 ;;		On exit  : B00/100
   361 ;;		Unchanged: 800/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used: 1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376     07D3                     _UART_basla:	
   377                           ;psect for function _UART_basla
   378                           
   379                           
   380                           ;newmain.c: 24: BRGH = 1;
   381                           
   382                           ;incstack = 0
   383                           ; Regs used in _UART_basla: [wreg]
   384     07D3  1518               	bsf	24,2	;volatile
   385                           
   386                           ;newmain.c: 25: SPBRG = 25;
   387     07D4  3019               	movlw	25
   388     07D5  0099               	movwf	25	;volatile
   389                           
   390                           ;newmain.c: 26: SYNC = 0;
   391     07D6  1218               	bcf	24,4	;volatile
   392                           
   393                           ;newmain.c: 27: SPEN = 1;
   394     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   395     07D8  1798               	bsf	24,7	;volatile
   396                           
   397                           ;newmain.c: 28: TRISC7 = 1;
   398     07D9  1683               	bsf	3,5	;RP0=1, select bank1
   399     07DA  1787               	bsf	7,7	;volatile
   400                           
   401                           ;newmain.c: 29: TRISC6 = 0;
   402     07DB  1307               	bcf	7,6	;volatile
   403                           
   404                           ;newmain.c: 30: CREN = 1;
   405     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   406     07DD  1618               	bsf	24,4	;volatile
   407                           
   408                           ;newmain.c: 31: TXEN = 1;
   409     07DE  1683               	bsf	3,5	;RP0=1, select bank1
   410     07DF  1698               	bsf	24,5	;volatile
   411     07E0  0008               	return
   412     07E1                     __end_of_UART_basla:
   413     007E                     btemp	set	126	;btemp
   414     007E                     wtemp0	set	126
   415                           
   416                           	psect	config
   417                           
   418                           ;Config register CONFIG @ 0x2007
   419                           ;	Oscillator Selection bits
   420                           ;	FOSC = XT, XT oscillator
   421                           ;	Watchdog Timer Enable bit
   422                           ;	WDTE = OFF, WDT disabled
   423                           ;	Power-up Timer Enable bit
   424                           ;	PWRTE = OFF, PWRT disabled
   425                           ;	Brown-out Reset Enable bit
   426                           ;	BOREN = ON, BOR enabled
   427                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   428                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   429                           ;	Data EEPROM Memory Code Protection bit
   430                           ;	CPD = OFF, Data EEPROM code protection off
   431                           ;	Flash Program Memory Write Enable bits
   432                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   433                           ;	In-Circuit Debugger Mode bit
   434                           ;	DEBUG = 0x1, unprogrammed default
   435                           ;	Flash Program Memory Code Protection bit
   436                           ;	CP = OFF, Code protection off
   437     2007                     	org	8199
   438     2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_yaz

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              1 COMMON     2     2      0
                         _UART_basla
                           _UART_yaz
 ---------------------------------------------------------------------------------
 (1) _UART_yaz                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_basla                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_basla
   _UART_yaz

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 26 19:54:54 2023

                     l56 07CC                       u27 07F6                      l630 07EA  
                   _BRGH 04C2                     _CREN 00C4                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
                   _main 07E1                     btemp 007E                     start 0000  
                  ?_main 0070                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TXREG 0019                    _nRBPU 040F  
            ?_UART_basla 0070         __end_of_UART_yaz 07D3                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071                   _TRISC6 043E                   _TRISC7 043F  
__end_of__initialization 07FC           __pcstackCOMMON 0070                ?_UART_yaz 0070  
             __pmaintext 07E1               ??_UART_yaz 0070             ??_UART_basla 0070  
     __end_of_UART_basla 07E1                  __ptext1 07CB                  __ptext2 07D3  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
               _UART_yaz 07CB             UART_yaz@veri 0070               _UART_basla 07D3  
