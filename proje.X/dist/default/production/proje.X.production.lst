

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 28 12:15:26 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 18/08/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     009F                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     0000                     	;# 
   198     0001                     	;# 
   199     0002                     	;# 
   200     0003                     	;# 
   201     0004                     	;# 
   202     0005                     	;# 
   203     0006                     	;# 
   204     0007                     	;# 
   205     0008                     	;# 
   206     0009                     	;# 
   207     000A                     	;# 
   208     000B                     	;# 
   209     000C                     	;# 
   210     000D                     	;# 
   211     000E                     	;# 
   212     000E                     	;# 
   213     000F                     	;# 
   214     0010                     	;# 
   215     0011                     	;# 
   216     0012                     	;# 
   217     0013                     	;# 
   218     0014                     	;# 
   219     0015                     	;# 
   220     0015                     	;# 
   221     0016                     	;# 
   222     0017                     	;# 
   223     0018                     	;# 
   224     0019                     	;# 
   225     001A                     	;# 
   226     001B                     	;# 
   227     001B                     	;# 
   228     001C                     	;# 
   229     001D                     	;# 
   230     001E                     	;# 
   231     001F                     	;# 
   232     0081                     	;# 
   233     0085                     	;# 
   234     0086                     	;# 
   235     0087                     	;# 
   236     0088                     	;# 
   237     0089                     	;# 
   238     008C                     	;# 
   239     008D                     	;# 
   240     008E                     	;# 
   241     0091                     	;# 
   242     0092                     	;# 
   243     0093                     	;# 
   244     0094                     	;# 
   245     0098                     	;# 
   246     0099                     	;# 
   247     009C                     	;# 
   248     009D                     	;# 
   249     009E                     	;# 
   250     009F                     	;# 
   251     010C                     	;# 
   252     010D                     	;# 
   253     010E                     	;# 
   254     010F                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257                           
   258                           	psect	strings
   259     0800                     __pstrings:
   260     0800                     stringtab:
   261     0800                     __stringtab:
   262                           
   263                           ;	String table - string pointers are 1 byte each
   264     0800  1BFF               	btfsc	btemp+1,7
   265     0801  280A               	ljmp	stringcode
   266     0802  1383               	bcf	3,7
   267     0803  187F               	btfsc	btemp+1,0
   268     0804  1783               	bsf	3,7
   269     0805  0800               	movf	0,w
   270     0806  0A84               	incf	4,f
   271     0807  1903               	skipnz
   272     0808  0AFF               	incf	btemp+1,f
   273     0809  0008               	return
   274     080A                     stringcode:
   275     080A                     stringdir:
   276     080A  3008               	movlw	high stringdir
   277     080B  008A               	movwf	10
   278     080C  0804               	movf	4,w
   279     080D  0A84               	incf	4,f
   280     080E  0782               	addwf	2,f
   281     080F                     __stringbase:
   282     080F  3400               	retlw	0
   283     0810                     __end_of__stringtab:
   284     0810                     __powers_:
   285     0810  3400               	retlw	0
   286     0811  3480               	retlw	128
   287     0812  343F               	retlw	63
   288     0813  3400               	retlw	0
   289     0814  3420               	retlw	32
   290     0815  3441               	retlw	65
   291     0816  3400               	retlw	0
   292     0817  34C8               	retlw	200
   293     0818  3442               	retlw	66
   294     0819  3400               	retlw	0
   295     081A  347A               	retlw	122
   296     081B  3444               	retlw	68
   297     081C  3440               	retlw	64
   298     081D  341C               	retlw	28
   299     081E  3446               	retlw	70
   300     081F  3450               	retlw	80
   301     0820  34C3               	retlw	195
   302     0821  3447               	retlw	71
   303     0822  3424               	retlw	36
   304     0823  3474               	retlw	116
   305     0824  3449               	retlw	73
   306     0825  3497               	retlw	151
   307     0826  3418               	retlw	24
   308     0827  344B               	retlw	75
   309     0828  34BC               	retlw	188
   310     0829  34BE               	retlw	190
   311     082A  344C               	retlw	76
   312     082B  346B               	retlw	107
   313     082C  346E               	retlw	110
   314     082D  344E               	retlw	78
   315     082E  3403               	retlw	3
   316     082F  3415               	retlw	21
   317     0830  3450               	retlw	80
   318     0831  3479               	retlw	121
   319     0832  34AD               	retlw	173
   320     0833  3460               	retlw	96
   321     0834  34F3               	retlw	243
   322     0835  3449               	retlw	73
   323     0836  3471               	retlw	113
   324     0837                     __end_of__powers_:
   325     0837                     __npowers_:
   326     0837  3400               	retlw	0
   327     0838  3480               	retlw	128
   328     0839  343F               	retlw	63
   329     083A  34CD               	retlw	205
   330     083B  34CC               	retlw	204
   331     083C  343D               	retlw	61
   332     083D  34D7               	retlw	215
   333     083E  3423               	retlw	35
   334     083F  343C               	retlw	60
   335     0840  3412               	retlw	18
   336     0841  3483               	retlw	131
   337     0842  343A               	retlw	58
   338     0843  34B7               	retlw	183
   339     0844  34D1               	retlw	209
   340     0845  3438               	retlw	56
   341     0846  34C6               	retlw	198
   342     0847  3427               	retlw	39
   343     0848  3437               	retlw	55
   344     0849  3438               	retlw	56
   345     084A  3486               	retlw	134
   346     084B  3435               	retlw	53
   347     084C  34C0               	retlw	192
   348     084D  34D6               	retlw	214
   349     084E  3433               	retlw	51
   350     084F  34CC               	retlw	204
   351     0850  342B               	retlw	43
   352     0851  3432               	retlw	50
   353     0852  3470               	retlw	112
   354     0853  3489               	retlw	137
   355     0854  3430               	retlw	48
   356     0855  34E7               	retlw	231
   357     0856  34DB               	retlw	219
   358     0857  342E               	retlw	46
   359     0858  34E5               	retlw	229
   360     0859  343C               	retlw	60
   361     085A  341E               	retlw	30
   362     085B  3442               	retlw	66
   363     085C  34A2               	retlw	162
   364     085D  340D               	retlw	13
   365     085E                     __end_of__npowers_:
   366     085E                     _dpowers:
   367     085E  3401               	retlw	1
   368     085F  3400               	retlw	0
   369     0860  3400               	retlw	0
   370     0861  3400               	retlw	0
   371     0862  340A               	retlw	10
   372     0863  3400               	retlw	0
   373     0864  3400               	retlw	0
   374     0865  3400               	retlw	0
   375     0866  3464               	retlw	100
   376     0867  3400               	retlw	0
   377     0868  3400               	retlw	0
   378     0869  3400               	retlw	0
   379     086A  34E8               	retlw	232
   380     086B  3403               	retlw	3
   381     086C  3400               	retlw	0
   382     086D  3400               	retlw	0
   383     086E  3410               	retlw	16
   384     086F  3427               	retlw	39
   385     0870  3400               	retlw	0
   386     0871  3400               	retlw	0
   387     0872  34A0               	retlw	160
   388     0873  3486               	retlw	134
   389     0874  3401               	retlw	1
   390     0875  3400               	retlw	0
   391     0876  3440               	retlw	64
   392     0877  3442               	retlw	66
   393     0878  340F               	retlw	15
   394     0879  3400               	retlw	0
   395     087A  3480               	retlw	128
   396     087B  3496               	retlw	150
   397     087C  3498               	retlw	152
   398     087D  3400               	retlw	0
   399     087E  3400               	retlw	0
   400     087F  34E1               	retlw	225
   401     0880  34F5               	retlw	245
   402     0881  3405               	retlw	5
   403     0882  3400               	retlw	0
   404     0883  34CA               	retlw	202
   405     0884  349A               	retlw	154
   406     0885  343B               	retlw	59
   407     0886                     __end_of_dpowers:
   408     001E                     _ADRESH	set	30
   409     001F                     _ADCON0bits	set	31
   410     0011                     _TMR2	set	17
   411     001F                     _ADCON0	set	31
   412     0017                     _CCP1CON	set	23
   413     0012                     _T2CON	set	18
   414     0008                     _PORTD	set	8
   415     0006                     _PORTB	set	6
   416     0007                     _PORTC	set	7
   417     0005                     _PORTA	set	5
   418     0032                     _RB2	set	50
   419     0030                     _RB0	set	48
   420     0031                     _RB1	set	49
   421     0035                     _RB5	set	53
   422     0036                     _RB6	set	54
   423     003D                     _RC5	set	61
   424     003B                     _RC3	set	59
   425     003E                     _RC6	set	62
   426     003C                     _RC4	set	60
   427     0037                     _RB7	set	55
   428     009E                     _ADRESL	set	158
   429     0092                     _PR2	set	146
   430     009F                     _ADCON1	set	159
   431     0088                     _TRISD	set	136
   432     0087                     _TRISC	set	135
   433     0086                     _TRISB	set	134
   434     0085                     _TRISA	set	133
   435     0886                     STR_1:
   436     0886  3446               	retlw	70	;'F'
   437     0887  3475               	retlw	117	;'u'
   438     0888  3472               	retlw	114	;'r'
   439     0889  346B               	retlw	107	;'k'
   440     088A  3461               	retlw	97	;'a'
   441     088B  346E               	retlw	110	;'n'
   442     088C  3420               	retlw	32	;' '
   443     088D  3454               	retlw	84	;'T'
   444     088E  342E               	retlw	46	;'.'
   445     088F  3442               	retlw	66	;'B'
   446     0890  3461               	retlw	97	;'a'
   447     0891  3464               	retlw	100	;'d'
   448     0892  3465               	retlw	101	;'e'
   449     0893  346D               	retlw	109	;'m'
   450     0894  3463               	retlw	99	;'c'
   451     0895  3469               	retlw	105	;'i'
   452     0896  3400               	retlw	0
   453     0897                     STR_2:
   454     0897  3447               	retlw	71	;'G'
   455     0898  3432               	retlw	50	;'2'
   456     0899  3431               	retlw	49	;'1'
   457     089A  3430               	retlw	48	;'0'
   458     089B  3431               	retlw	49	;'1'
   459     089C  3430               	retlw	48	;'0'
   460     089D  3434               	retlw	52	;'4'
   461     089E  3430               	retlw	48	;'0'
   462     089F  3431               	retlw	49	;'1'
   463     08A0  3436               	retlw	54	;'6'
   464     08A1  3400               	retlw	0
   465     08A2                     STR_4:
   466     08A2  3459               	retlw	89	;'Y'
   467     08A3  344F               	retlw	79	;'O'
   468     08A4  344E               	retlw	78	;'N'
   469     08A5  343A               	retlw	58	;':'
   470     08A6  3453               	retlw	83	;'S'
   471     08A7  3441               	retlw	65	;'A'
   472     08A8  3447               	retlw	71	;'G'
   473     08A9  3400               	retlw	0
   474     08AA                     STR_3:
   475     08AA  3459               	retlw	89	;'Y'
   476     08AB  344F               	retlw	79	;'O'
   477     08AC  344E               	retlw	78	;'N'
   478     08AD  343A               	retlw	58	;':'
   479     08AE  3453               	retlw	83	;'S'
   480     08AF  344F               	retlw	79	;'O'
   481     08B0  344C               	retlw	76	;'L'
   482     08B1  3400               	retlw	0
   483     08B2                     STR_5:
   484     08B2  3459               	retlw	89	;'Y'
   485     08B3  344F               	retlw	79	;'O'
   486     08B4  344E               	retlw	78	;'N'
   487     08B5  343A               	retlw	58	;':'
   488     08B6  3444               	retlw	68	;'D'
   489     08B7  3455               	retlw	85	;'U'
   490     08B8  3452               	retlw	82	;'R'
   491     08B9  3400               	retlw	0
   492     08BA                     STR_7:
   493     08BA  3448               	retlw	72	;'H'
   494     08BB  3449               	retlw	73	;'I'
   495     08BC  345A               	retlw	90	;'Z'
   496     08BD  343A               	retlw	58	;':'
   497     08BE  3400               	retlw	0
   498     08BF                     STR_6:
   499     08BF  3425               	retlw	37	;'%'
   500     08C0  342E               	retlw	46	;'.'
   501     08C1  3432               	retlw	50	;'2'
   502     08C2  3466               	retlw	102	;'f'
   503     08C3  3400               	retlw	0
   504                           
   505                           	psect	cinit
   506     07FC                     start_initialization:	
   507                           ; #config settings
   508                           
   509     07FC                     __initialization:
   510     07FC                     end_of_initialization:	
   511                           ;End of C runtime variable initialization code
   512                           
   513     07FC                     __end_of__initialization:
   514     07FC  0183               	clrf	3
   515     07FD  120A  158A  2DE4   	ljmp	_main	;jump to C main() function
   516                           
   517                           	psect	cstackBANK1
   518     00A0                     __pcstackBANK1:
   519     00A0                     ??_main:
   520                           
   521                           ; 1 bytes @ 0x0
   522     00A0                     	ds	2
   523     00A2                     main@voltaj_deger_char:
   524                           
   525                           ; 10 bytes @ 0x2
   526     00A2                     	ds	10
   527     00AC                     main@voltaj_deger:
   528                           
   529                           ; 3 bytes @ 0xC
   530     00AC                     	ds	3
   531     00AF                     main@adc_deger:
   532                           
   533                           ; 2 bytes @ 0xF
   534     00AF                     	ds	2
   535                           
   536                           	psect	cstackCOMMON
   537     0070                     __pcstackCOMMON:
   538     0070                     ?_isdigit:
   539     0070                     ?___ftge:	
   540                           ; 1 bit 
   541                           
   542     0070                     ?_kutuphaneyi_baslat:	
   543                           ; 1 bit 
   544                           
   545     0070                     ?_ekran_temizle:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_bekle_milisaniye:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ??_isdigit:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_main:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_komut_calistir:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_komut_gonder:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?___lbmod:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?___wmul:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?___awmod:	
   570                           ; 2 bytes @ 0x0
   571                           
   572     0070                     ?___ftpack:	
   573                           ; 2 bytes @ 0x0
   574                           
   575     0070                     ?___ftneg:	
   576                           ; 3 bytes @ 0x0
   577                           
   578     0070                     ?__tdiv_to_l_:	
   579                           ; 3 bytes @ 0x0
   580                           
   581     0070                     ?__div_to_l_:	
   582                           ; 4 bytes @ 0x0
   583                           
   584     0070                     ?___lldiv:	
   585                           ; 4 bytes @ 0x0
   586                           
   587     0070                     ?___llmod:	
   588                           ; 4 bytes @ 0x0
   589                           
   590     0070                     ___lbmod@divisor:	
   591                           ; 4 bytes @ 0x0
   592                           
   593     0070                     _isdigit$621:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     bekle_milisaniye@milisaniye:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ___wmul@multiplier:	
   600                           ; 2 bytes @ 0x0
   601                           
   602     0070                     ___awmod@divisor:	
   603                           ; 2 bytes @ 0x0
   604                           
   605     0070                     __div_to_l_@f1:	
   606                           ; 2 bytes @ 0x0
   607                           
   608     0070                     ___ftpack@arg:	
   609                           ; 3 bytes @ 0x0
   610                           
   611     0070                     __tdiv_to_l_@f1:	
   612                           ; 3 bytes @ 0x0
   613                           
   614     0070                     ___ftge@ff1:	
   615                           ; 3 bytes @ 0x0
   616                           
   617     0070                     ___ftneg@f1:	
   618                           ; 3 bytes @ 0x0
   619                           
   620     0070                     ___lldiv@divisor:	
   621                           ; 3 bytes @ 0x0
   622                           
   623     0070                     ___llmod@divisor:	
   624                           ; 4 bytes @ 0x0
   625                           
   626                           
   627                           ; 4 bytes @ 0x0
   628     0070                     	ds	1
   629     0071                     ??___lbmod:
   630     0071                     isdigit@c:	
   631                           ; 1 bytes @ 0x1
   632                           
   633                           
   634                           ; 1 bytes @ 0x1
   635     0071                     	ds	1
   636     0072                     ??_bekle_milisaniye:
   637     0072                     ___wmul@multiplicand:	
   638                           ; 1 bytes @ 0x2
   639                           
   640     0072                     ___awmod@dividend:	
   641                           ; 2 bytes @ 0x2
   642                           
   643                           
   644                           ; 2 bytes @ 0x2
   645     0072                     	ds	1
   646     0073                     ??___ftneg:
   647     0073                     ___ftpack@exp:	
   648                           ; 1 bytes @ 0x3
   649                           
   650     0073                     ___lbmod@dividend:	
   651                           ; 1 bytes @ 0x3
   652                           
   653     0073                     bekle_milisaniye@i:	
   654                           ; 1 bytes @ 0x3
   655                           
   656     0073                     __div_to_l_@f2:	
   657                           ; 2 bytes @ 0x3
   658                           
   659     0073                     __tdiv_to_l_@f2:	
   660                           ; 3 bytes @ 0x3
   661                           
   662     0073                     ___ftge@ff2:	
   663                           ; 3 bytes @ 0x3
   664                           
   665                           
   666                           ; 3 bytes @ 0x3
   667     0073                     	ds	1
   668     0074                     ??___wmul:
   669     0074                     ??___awmod:	
   670                           ; 1 bytes @ 0x4
   671                           
   672     0074                     ___awmod@counter:	
   673                           ; 1 bytes @ 0x4
   674                           
   675     0074                     ___ftpack@sign:	
   676                           ; 1 bytes @ 0x4
   677                           
   678     0074                     ___lbmod@counter:	
   679                           ; 1 bytes @ 0x4
   680                           
   681     0074                     ___wmul@product:	
   682                           ; 1 bytes @ 0x4
   683                           
   684     0074                     ___lldiv@dividend:	
   685                           ; 2 bytes @ 0x4
   686                           
   687     0074                     ___llmod@dividend:	
   688                           ; 4 bytes @ 0x4
   689                           
   690                           
   691                           ; 4 bytes @ 0x4
   692     0074                     	ds	1
   693     0075                     ?_metin_yaz:
   694     0075                     ??___ftpack:	
   695                           ; 1 bytes @ 0x5
   696                           
   697     0075                     ??_komut_calistir:	
   698                           ; 1 bytes @ 0x5
   699                           
   700     0075                     ___awmod@sign:	
   701                           ; 1 bytes @ 0x5
   702                           
   703     0075                     ___lbmod@rem:	
   704                           ; 1 bytes @ 0x5
   705                           
   706     0075                     metin_yaz@metin:	
   707                           ; 1 bytes @ 0x5
   708                           
   709                           
   710                           ; 2 bytes @ 0x5
   711     0075                     	ds	1
   712     0076                     ??__tdiv_to_l_:
   713     0076                     ??__div_to_l_:	
   714                           ; 1 bytes @ 0x6
   715                           
   716     0076                     ??___ftge:	
   717                           ; 1 bytes @ 0x6
   718                           
   719     0076                     ?___lbdiv:	
   720                           ; 1 bytes @ 0x6
   721                           
   722     0076                     ?___awdiv:	
   723                           ; 1 bytes @ 0x6
   724                           
   725     0076                     komut_calistir@komut:	
   726                           ; 2 bytes @ 0x6
   727                           
   728     0076                     ___lbdiv@divisor:	
   729                           ; 1 bytes @ 0x6
   730                           
   731     0076                     ___awdiv@divisor:	
   732                           ; 1 bytes @ 0x6
   733                           
   734                           
   735                           ; 2 bytes @ 0x6
   736     0076                     	ds	1
   737     0077                     ??_metin_yaz:
   738     0077                     ??_komut_gonder:	
   739                           ; 1 bytes @ 0x7
   740                           
   741     0077                     ??___lbdiv:	
   742                           ; 1 bytes @ 0x7
   743                           
   744     0077                     komut_gonder@komut:	
   745                           ; 1 bytes @ 0x7
   746                           
   747     0077                     ___lbdiv@dividend:	
   748                           ; 1 bytes @ 0x7
   749                           
   750                           
   751                           ; 1 bytes @ 0x7
   752     0077                     	ds	1
   753     0078                     ??_kutuphaneyi_baslat:
   754     0078                     ??_ekran_temizle:	
   755                           ; 1 bytes @ 0x8
   756                           
   757     0078                     ?_imleci_ayarla:	
   758                           ; 1 bytes @ 0x8
   759                           
   760     0078                     ??___lldiv:	
   761                           ; 1 bytes @ 0x8
   762                           
   763     0078                     ??___llmod:	
   764                           ; 1 bytes @ 0x8
   765                           
   766     0078                     ?___awtoft:	
   767                           ; 1 bytes @ 0x8
   768                           
   769     0078                     ?___lltoft:	
   770                           ; 3 bytes @ 0x8
   771                           
   772     0078                     imleci_ayarla@y:	
   773                           ; 3 bytes @ 0x8
   774                           
   775     0078                     ___lbdiv@counter:	
   776                           ; 1 bytes @ 0x8
   777                           
   778     0078                     ___awdiv@dividend:	
   779                           ; 1 bytes @ 0x8
   780                           
   781     0078                     ___awtoft@c:	
   782                           ; 2 bytes @ 0x8
   783                           
   784     0078                     ___lltoft@c:	
   785                           ; 2 bytes @ 0x8
   786                           
   787                           
   788                           ; 4 bytes @ 0x8
   789     0078                     	ds	1
   790     0079                     ??_imleci_ayarla:
   791     0079                     imleci_ayarla@x:	
   792                           ; 1 bytes @ 0x9
   793                           
   794     0079                     ___lbdiv@quotient:	
   795                           ; 1 bytes @ 0x9
   796                           
   797     0079                     ___llmod@counter:	
   798                           ; 1 bytes @ 0x9
   799                           
   800     0079                     ___lldiv@quotient:	
   801                           ; 1 bytes @ 0x9
   802                           
   803                           
   804                           ; 4 bytes @ 0x9
   805     0079                     	ds	1
   806     007A                     ??___awdiv:
   807     007A                     ___awdiv@counter:	
   808                           ; 1 bytes @ 0xA
   809                           
   810                           
   811                           ; 1 bytes @ 0xA
   812     007A                     	ds	1
   813     007B                     ??___awtoft:
   814     007B                     ___awdiv@sign:	
   815                           ; 1 bytes @ 0xB
   816                           
   817     007B                     ___awtoft@sign:	
   818                           ; 1 bytes @ 0xB
   819                           
   820                           
   821                           ; 1 bytes @ 0xB
   822     007B                     	ds	1
   823     007C                     ??___lltoft:
   824     007C                     ___lltoft@exp:	
   825                           ; 1 bytes @ 0xC
   826                           
   827     007C                     ___awdiv@quotient:	
   828                           ; 1 bytes @ 0xC
   829                           
   830                           
   831                           ; 2 bytes @ 0xC
   832     007C                     	ds	1
   833     007D                     ___lldiv@counter:
   834                           
   835                           ; 1 bytes @ 0xD
   836     007D                     	ds	1
   837     007E                     ??_fround:
   838     007E                     ??_scale:	
   839                           ; 1 bytes @ 0xE
   840                           
   841     007E                     ??___bmul:	
   842                           ; 1 bytes @ 0xE
   843                           
   844     007E                     ??___ftsub:	
   845                           ; 1 bytes @ 0xE
   846                           
   847                           
   848                           	psect	cstackBANK0
   849     0020                     __pcstackBANK0:	
   850                           ; 1 bytes @ 0xE
   851                           
   852     0020                     ?___bmul:
   853     0020                     ___bmul@multiplicand:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0020                     __div_to_l_@quot:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0020                     __tdiv_to_l_@quot:	
   860                           ; 4 bytes @ 0x0
   861                           
   862                           
   863                           ; 4 bytes @ 0x0
   864     0020                     	ds	1
   865     0021                     ___bmul@product:
   866                           
   867                           ; 1 bytes @ 0x1
   868     0021                     	ds	1
   869     0022                     ___bmul@multiplier:
   870                           
   871                           ; 1 bytes @ 0x2
   872     0022                     	ds	1
   873     0023                     ?___ftmul:
   874     0023                     ___ftmul@f1:	
   875                           ; 3 bytes @ 0x3
   876                           
   877                           
   878                           ; 3 bytes @ 0x3
   879     0023                     	ds	1
   880     0024                     __div_to_l_@cntr:
   881     0024                     __tdiv_to_l_@cntr:	
   882                           ; 1 bytes @ 0x4
   883                           
   884                           
   885                           ; 1 bytes @ 0x4
   886     0024                     	ds	1
   887     0025                     __div_to_l_@exp1:
   888     0025                     __tdiv_to_l_@exp1:	
   889                           ; 1 bytes @ 0x5
   890                           
   891                           
   892                           ; 1 bytes @ 0x5
   893     0025                     	ds	1
   894     0026                     ___ftmul@f2:
   895                           
   896                           ; 3 bytes @ 0x6
   897     0026                     	ds	3
   898     0029                     ??___ftmul:
   899                           
   900                           ; 1 bytes @ 0x9
   901     0029                     	ds	3
   902     002C                     ___ftmul@exp:
   903                           
   904                           ; 1 bytes @ 0xC
   905     002C                     	ds	1
   906     002D                     ___ftmul@f3_as_product:
   907                           
   908                           ; 3 bytes @ 0xD
   909     002D                     	ds	3
   910     0030                     ___ftmul@cntr:
   911                           
   912                           ; 1 bytes @ 0x10
   913     0030                     	ds	1
   914     0031                     ___ftmul@sign:
   915                           
   916                           ; 1 bytes @ 0x11
   917     0031                     	ds	1
   918     0032                     ?_fround:
   919     0032                     ?_scale:	
   920                           ; 3 bytes @ 0x12
   921                           
   922                           
   923                           ; 3 bytes @ 0x12
   924     0032                     	ds	3
   925     0035                     _fround$810:
   926     0035                     _scale$811:	
   927                           ; 3 bytes @ 0x15
   928                           
   929                           
   930                           ; 3 bytes @ 0x15
   931     0035                     	ds	3
   932     0038                     scale@scl:
   933     0038                     _fround$809:	
   934                           ; 1 bytes @ 0x18
   935                           
   936                           
   937                           ; 3 bytes @ 0x18
   938     0038                     	ds	1
   939     0039                     ?___fttol:
   940     0039                     ___fttol@f1:	
   941                           ; 4 bytes @ 0x19
   942                           
   943                           
   944                           ; 3 bytes @ 0x19
   945     0039                     	ds	2
   946     003B                     fround@prec:
   947                           
   948                           ; 1 bytes @ 0x1B
   949     003B                     	ds	1
   950     003C                     ?___ftadd:
   951     003C                     ___ftadd@f1:	
   952                           ; 3 bytes @ 0x1C
   953                           
   954                           
   955                           ; 3 bytes @ 0x1C
   956     003C                     	ds	1
   957     003D                     ??___fttol:
   958                           
   959                           ; 1 bytes @ 0x1D
   960     003D                     	ds	2
   961     003F                     ___ftadd@f2:
   962                           
   963                           ; 3 bytes @ 0x1F
   964     003F                     	ds	1
   965     0040                     ___fttol@sign1:
   966                           
   967                           ; 1 bytes @ 0x20
   968     0040                     	ds	1
   969     0041                     ___fttol@lval:
   970                           
   971                           ; 4 bytes @ 0x21
   972     0041                     	ds	1
   973     0042                     ??___ftadd:
   974                           
   975                           ; 1 bytes @ 0x22
   976     0042                     	ds	3
   977     0045                     ___ftadd@sign:
   978     0045                     ___fttol@exp1:	
   979                           ; 1 bytes @ 0x25
   980                           
   981                           
   982                           ; 1 bytes @ 0x25
   983     0045                     	ds	1
   984     0046                     ___ftadd@exp2:
   985                           
   986                           ; 1 bytes @ 0x26
   987     0046                     	ds	1
   988     0047                     ___ftadd@exp1:
   989                           
   990                           ; 1 bytes @ 0x27
   991     0047                     	ds	1
   992     0048                     ?___ftsub:
   993     0048                     ___ftsub@f2:	
   994                           ; 3 bytes @ 0x28
   995                           
   996                           
   997                           ; 3 bytes @ 0x28
   998     0048                     	ds	3
   999     004B                     ___ftsub@f1:
  1000                           
  1001                           ; 3 bytes @ 0x2B
  1002     004B                     	ds	3
  1003     004E                     ?_sprintf:
  1004     004E                     sprintf@f:	
  1005                           ; 2 bytes @ 0x2E
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0x2E
  1009     004E                     	ds	4
  1010     0052                     ??_sprintf:
  1011                           
  1012                           ; 1 bytes @ 0x32
  1013     0052                     	ds	6
  1014     0058                     _sprintf$812:
  1015                           
  1016                           ; 3 bytes @ 0x38
  1017     0058                     	ds	3
  1018     005B                     sprintf@ap:
  1019                           
  1020                           ; 1 bytes @ 0x3B
  1021     005B                     	ds	1
  1022     005C                     sprintf@flag:
  1023                           
  1024                           ; 2 bytes @ 0x3C
  1025     005C                     	ds	2
  1026     005E                     sprintf@val:
  1027                           
  1028                           ; 4 bytes @ 0x3E
  1029     005E                     	ds	4
  1030     0062                     sprintf@eexp:
  1031                           
  1032                           ; 2 bytes @ 0x42
  1033     0062                     	ds	2
  1034     0064                     sprintf@tmpval:
  1035                           
  1036                           ; 4 bytes @ 0x44
  1037     0064                     	ds	4
  1038     0068                     sprintf@sp:
  1039                           
  1040                           ; 1 bytes @ 0x48
  1041     0068                     	ds	1
  1042     0069                     sprintf@prec:
  1043                           
  1044                           ; 2 bytes @ 0x49
  1045     0069                     	ds	2
  1046     006B                     sprintf@fval:
  1047                           
  1048                           ; 3 bytes @ 0x4B
  1049     006B                     	ds	3
  1050     006E                     sprintf@c:
  1051                           
  1052                           ; 1 bytes @ 0x4E
  1053     006E                     	ds	1
  1054                           
  1055                           	psect	maintext
  1056     0DE4                     __pmaintext:	
  1057 ;;
  1058 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1059 ;;
  1060 ;; *************** function _main *****************
  1061 ;; Defined at:
  1062 ;;		line 12 in file "main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  voltaj_deger   10    2[BANK1 ] unsigned char [10]
  1067 ;;  voltaj_deger    3   12[BANK1 ] float 
  1068 ;;  adc_deger       2   15[BANK1 ] int 
  1069 ;;  hiz             2    0        int 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : B00/0
  1076 ;;		On exit  : 300/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       0      15       0       0
  1081 ;;      Temps:          0       0       2       0       0
  1082 ;;      Totals:         0       0      17       0       0
  1083 ;;Total ram usage:       17 bytes
  1084 ;; Hardware stack levels required when called: 5
  1085 ;; This function calls:
  1086 ;;		___awtoft
  1087 ;;		___ftmul
  1088 ;;		_bekle_milisaniye
  1089 ;;		_ekran_temizle
  1090 ;;		_imleci_ayarla
  1091 ;;		_kutuphaneyi_baslat
  1092 ;;		_metin_yaz
  1093 ;;		_sprintf
  1094 ;; This function is called by:
  1095 ;;		Startup code after reset
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099     0DE4                     _main:	
  1100                           ;psect for function _main
  1101                           
  1102                           
  1103                           ;main.c: 16: int adc_deger;;main.c: 17: float voltaj_deger;;main.c: 18: char voltaj_dege
      +                          r_char[10];;main.c: 19: TRISA = 1;
  1104                           
  1105                           ;incstack = 0
  1106                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1107     0DE4  3001               	movlw	1
  1108     0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  1109     0DE6  0085               	movwf	5	;volatile
  1110                           
  1111                           ;main.c: 20: TRISB = 0B11100000;
  1112     0DE7  30E0               	movlw	224
  1113     0DE8  0086               	movwf	6	;volatile
  1114                           
  1115                           ;main.c: 21: TRISC = 0;
  1116     0DE9  0187               	clrf	7	;volatile
  1117                           
  1118                           ;main.c: 22: TRISD = 0;
  1119     0DEA  0188               	clrf	8	;volatile
  1120                           
  1121                           ;main.c: 23: PORTA = 0;
  1122     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  1123     0DEC  0185               	clrf	5	;volatile
  1124                           
  1125                           ;main.c: 24: PORTC = 0;
  1126     0DED  0187               	clrf	7	;volatile
  1127                           
  1128                           ;main.c: 25: PORTB = 0;
  1129     0DEE  0186               	clrf	6	;volatile
  1130                           
  1131                           ;main.c: 26: PORTD = 0;
  1132     0DEF  0188               	clrf	8	;volatile
  1133                           
  1134                           ;main.c: 28: T2CON = 0B00000101;
  1135     0DF0  3005               	movlw	5
  1136     0DF1  0092               	movwf	18	;volatile
  1137                           
  1138                           ;main.c: 29: CCP1CON = 0B00001111;
  1139     0DF2  300F               	movlw	15
  1140     0DF3  0097               	movwf	23	;volatile
  1141                           
  1142                           ;main.c: 30: ADCON1 = 0b11000000;
  1143     0DF4  30C0               	movlw	192
  1144     0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  1145     0DF6  009F               	movwf	31	;volatile
  1146                           
  1147                           ;main.c: 31: ADCON0 = 0b00010001;
  1148     0DF7  3011               	movlw	17
  1149     0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  1150     0DF9  009F               	movwf	31	;volatile
  1151                           
  1152                           ;main.c: 32: TMR2 = 0;
  1153     0DFA  0191               	clrf	17	;volatile
  1154                           
  1155                           ;main.c: 34: PR2 = 49;
  1156     0DFB  3031               	movlw	49
  1157     0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  1158     0DFD  0092               	movwf	18	;volatile
  1159                           
  1160                           ;main.c: 36: kutuphaneyi_baslat();
  1161     0DFE  120A  158A  20DF  120A  158A  	fcall	_kutuphaneyi_baslat
  1162                           
  1163                           ;main.c: 37: ekran_temizle();
  1164     0E03  160A  118A  26A5  120A  158A  	fcall	_ekran_temizle
  1165                           
  1166                           ;main.c: 38: metin_yaz("Furkan T.Bademci");
  1167     0E08  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1168     0E09  00F5               	movwf	metin_yaz@metin
  1169     0E0A  3080               	movlw	128
  1170     0E0B  00F6               	movwf	metin_yaz@metin+1
  1171     0E0C  120A  158A  21B1  120A  158A  	fcall	_metin_yaz
  1172                           
  1173                           ;main.c: 39: imleci_ayarla(2, 1);
  1174     0E11  01F8               	clrf	imleci_ayarla@y
  1175     0E12  0AF8               	incf	imleci_ayarla@y,f
  1176     0E13  3002               	movlw	2
  1177     0E14  160A  118A  26D2  120A  158A  	fcall	_imleci_ayarla
  1178                           
  1179                           ;main.c: 40: metin_yaz("G210104016");
  1180     0E19  3088               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1181     0E1A  00F5               	movwf	metin_yaz@metin
  1182     0E1B  3080               	movlw	128
  1183     0E1C  00F6               	movwf	metin_yaz@metin+1
  1184     0E1D  120A  158A  21B1  120A  158A  	fcall	_metin_yaz
  1185                           
  1186                           ;main.c: 41: bekle_milisaniye(1000);
  1187     0E22  30E8               	movlw	232
  1188     0E23  00F0               	movwf	bekle_milisaniye@milisaniye
  1189     0E24  3003               	movlw	3
  1190     0E25  00F1               	movwf	bekle_milisaniye@milisaniye+1
  1191     0E26  120A  158A  20C7  120A  158A  	fcall	_bekle_milisaniye
  1192                           
  1193                           ;main.c: 42: ekran_temizle();
  1194     0E2B  160A  118A  26A5  120A  158A  	fcall	_ekran_temizle
  1195     0E30                     l2747:
  1196                           
  1197                           ;main.c: 45: {;main.c: 46: if (RB7 == 1)
  1198     0E30  1283               	bcf	3,5	;RP0=0, select bank0
  1199     0E31  1303               	bcf	3,6	;RP1=0, select bank0
  1200     0E32  1F86               	btfss	6,7	;volatile
  1201     0E33  2E49               	goto	l2755
  1202                           
  1203                           ;main.c: 47: {;main.c: 48: RC4 = 1;
  1204     0E34  1607               	bsf	7,4	;volatile
  1205                           
  1206                           ;main.c: 49: RC6 = 1;
  1207     0E35  1707               	bsf	7,6	;volatile
  1208                           
  1209                           ;main.c: 51: RC3 = 0;
  1210     0E36  1187               	bcf	7,3	;volatile
  1211                           
  1212                           ;main.c: 52: RC5 = 0;
  1213     0E37  1287               	bcf	7,5	;volatile
  1214                           
  1215                           ;main.c: 53: imleci_ayarla(2, 5);
  1216     0E38  3005               	movlw	5
  1217     0E39  00F8               	movwf	imleci_ayarla@y
  1218     0E3A  3002               	movlw	2
  1219     0E3B  160A  118A  26D2  120A  158A  	fcall	_imleci_ayarla
  1220                           
  1221                           ;main.c: 54: metin_yaz("YON:SOL");
  1222     0E40  309B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1223     0E41  00F5               	movwf	metin_yaz@metin
  1224     0E42  3080               	movlw	128
  1225     0E43  00F6               	movwf	metin_yaz@metin+1
  1226     0E44  120A  158A  21B1  120A  158A  	fcall	_metin_yaz
  1227     0E49                     l2755:
  1228                           
  1229                           ;main.c: 55: };main.c: 56: if (RB6 == 1)
  1230     0E49  1F06               	btfss	6,6	;volatile
  1231     0E4A  2E60               	goto	l2763
  1232                           
  1233                           ;main.c: 57: {;main.c: 58: RC3 = 1;
  1234     0E4B  1587               	bsf	7,3	;volatile
  1235                           
  1236                           ;main.c: 59: RC5 = 1;
  1237     0E4C  1687               	bsf	7,5	;volatile
  1238                           
  1239                           ;main.c: 61: RC4 = 0;
  1240     0E4D  1207               	bcf	7,4	;volatile
  1241                           
  1242                           ;main.c: 62: RC6 = 0;
  1243     0E4E  1307               	bcf	7,6	;volatile
  1244                           
  1245                           ;main.c: 63: imleci_ayarla(2, 5);
  1246     0E4F  3005               	movlw	5
  1247     0E50  00F8               	movwf	imleci_ayarla@y
  1248     0E51  3002               	movlw	2
  1249     0E52  160A  118A  26D2  120A  158A  	fcall	_imleci_ayarla
  1250                           
  1251                           ;main.c: 64: metin_yaz("YON:SAG");
  1252     0E57  3093               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1253     0E58  00F5               	movwf	metin_yaz@metin
  1254     0E59  3080               	movlw	128
  1255     0E5A  00F6               	movwf	metin_yaz@metin+1
  1256     0E5B  120A  158A  21B1  120A  158A  	fcall	_metin_yaz
  1257     0E60                     l2763:
  1258                           
  1259                           ;main.c: 65: };main.c: 66: if (RB5 == 1)
  1260     0E60  1E86               	btfss	6,5	;volatile
  1261     0E61  2E77               	goto	l2771
  1262                           
  1263                           ;main.c: 67: {;main.c: 68: RC3 = 0;
  1264     0E62  1187               	bcf	7,3	;volatile
  1265                           
  1266                           ;main.c: 69: RC5 = 0;
  1267     0E63  1287               	bcf	7,5	;volatile
  1268                           
  1269                           ;main.c: 70: RC4 = 0;
  1270     0E64  1207               	bcf	7,4	;volatile
  1271                           
  1272                           ;main.c: 71: RC6 = 0;
  1273     0E65  1307               	bcf	7,6	;volatile
  1274                           
  1275                           ;main.c: 72: imleci_ayarla(2, 5);
  1276     0E66  3005               	movlw	5
  1277     0E67  00F8               	movwf	imleci_ayarla@y
  1278     0E68  3002               	movlw	2
  1279     0E69  160A  118A  26D2  120A  158A  	fcall	_imleci_ayarla
  1280                           
  1281                           ;main.c: 73: metin_yaz("YON:DUR");
  1282     0E6E  30A3               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1283     0E6F  00F5               	movwf	metin_yaz@metin
  1284     0E70  3080               	movlw	128
  1285     0E71  00F6               	movwf	metin_yaz@metin+1
  1286     0E72  120A  158A  21B1  120A  158A  	fcall	_metin_yaz
  1287     0E77                     l2771:
  1288                           
  1289                           ;main.c: 74: };main.c: 76: _delay((unsigned long)((100)*(4000000/4000.0)));
  1290     0E77  3082               	movlw	130
  1291     0E78  1683               	bsf	3,5	;RP0=1, select bank1
  1292     0E79  1303               	bcf	3,6	;RP1=0, select bank1
  1293     0E7A  00A1               	movwf	(??_main^(0+128)+1)
  1294     0E7B  30DD               	movlw	221
  1295     0E7C  00A0               	movwf	??_main^(0+128)
  1296     0E7D                     u3817:
  1297     0E7D  0BA0               	decfsz	??_main^(0+128),f
  1298     0E7E  2E7D               	goto	u3817
  1299     0E7F  0BA1               	decfsz	(??_main^(0+128)+1),f
  1300     0E80  2E7D               	goto	u3817
  1301                           
  1302                           ;main.c: 77: ADCON0bits.CHS2 = 0;
  1303     0E81  1283               	bcf	3,5	;RP0=0, select bank0
  1304     0E82  1303               	bcf	3,6	;RP1=0, select bank0
  1305     0E83  129F               	bcf	31,5	;volatile
  1306                           
  1307                           ;main.c: 78: ADCON0bits.CHS1 = 1;
  1308     0E84  161F               	bsf	31,4	;volatile
  1309                           
  1310                           ;main.c: 79: ADCON0bits.CHS0 = 0;
  1311     0E85  119F               	bcf	31,3	;volatile
  1312                           
  1313                           ;main.c: 80: ADCON0bits.GO = 1;
  1314     0E86  151F               	bsf	31,2	;volatile
  1315     0E87                     l80:	
  1316                           ;main.c: 82: ;
  1317                           
  1318     0E87  191F               	btfsc	31,2	;volatile
  1319     0E88  2E87               	goto	l80
  1320                           
  1321                           ;main.c: 83: adc_deger = ADRESH * 256 + ADRESL;
  1322     0E89  081E               	movf	30,w	;volatile
  1323     0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  1324     0E8B  00B0               	movwf	(main@adc_deger+1)^(0+128)
  1325     0E8C  081E               	movf	30,w	;volatile
  1326     0E8D  00AF               	movwf	main@adc_deger^(0+128)
  1327                           
  1328                           ;main.c: 85: voltaj_deger = adc_deger * 0.0048;
  1329     0E8E  3049               	movlw	73
  1330     0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  1331     0E90  00A3               	movwf	___ftmul@f1
  1332     0E91  309D               	movlw	157
  1333     0E92  00A4               	movwf	___ftmul@f1+1
  1334     0E93  303B               	movlw	59
  1335     0E94  00A5               	movwf	___ftmul@f1+2
  1336     0E95  1683               	bsf	3,5	;RP0=1, select bank1
  1337     0E96  0830               	movf	(main@adc_deger+1)^(0+128),w
  1338     0E97  00F9               	movwf	___awtoft@c+1
  1339     0E98  082F               	movf	main@adc_deger^(0+128),w
  1340     0E99  00F8               	movwf	___awtoft@c
  1341     0E9A  160A  118A  26E6  120A  158A  	fcall	___awtoft
  1342     0E9F  0878               	movf	?___awtoft,w
  1343     0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  1344     0EA1  00A6               	movwf	___ftmul@f2
  1345     0EA2  0879               	movf	?___awtoft+1,w
  1346     0EA3  00A7               	movwf	___ftmul@f2+1
  1347     0EA4  087A               	movf	?___awtoft+2,w
  1348     0EA5  00A8               	movwf	___ftmul@f2+2
  1349     0EA6  120A  158A  2442  120A  158A  	fcall	___ftmul
  1350     0EAB  0823               	movf	?___ftmul,w
  1351     0EAC  1683               	bsf	3,5	;RP0=1, select bank1
  1352     0EAD  00AC               	movwf	main@voltaj_deger^(0+128)
  1353     0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  1354     0EAF  0824               	movf	?___ftmul+1,w
  1355     0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  1356     0EB1  00AD               	movwf	(main@voltaj_deger+1)^(0+128)
  1357     0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  1358     0EB3  0825               	movf	?___ftmul+2,w
  1359     0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  1360     0EB5  00AE               	movwf	(main@voltaj_deger+2)^(0+128)
  1361                           
  1362                           ;main.c: 86: sprintf(voltaj_deger_char, "%.2f", voltaj_deger);
  1363     0EB6  30B0               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1364     0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  1365     0EB8  00CE               	movwf	sprintf@f
  1366     0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  1367     0EBA  082C               	movf	main@voltaj_deger^(0+128),w
  1368     0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  1369     0EBC  00CF               	movwf	?_sprintf+1
  1370     0EBD  1683               	bsf	3,5	;RP0=1, select bank1
  1371     0EBE  082D               	movf	(main@voltaj_deger+1)^(0+128),w
  1372     0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  1373     0EC0  00D0               	movwf	?_sprintf+2
  1374     0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  1375     0EC2  082E               	movf	(main@voltaj_deger+2)^(0+128),w
  1376     0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  1377     0EC4  00D1               	movwf	?_sprintf+3
  1378     0EC5  30A2               	movlw	(low (main@voltaj_deger_char| 0))& (0+255)
  1379     0EC6  120A  118A  239B  120A  158A  	fcall	_sprintf
  1380                           
  1381                           ;main.c: 88: imleci_ayarla(1, 5);
  1382     0ECB  3005               	movlw	5
  1383     0ECC  00F8               	movwf	imleci_ayarla@y
  1384     0ECD  3001               	movlw	1
  1385     0ECE  160A  118A  26D2  120A  158A  	fcall	_imleci_ayarla
  1386                           
  1387                           ;main.c: 89: metin_yaz("HIZ:");
  1388     0ED3  30AB               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1389     0ED4  00F5               	movwf	metin_yaz@metin
  1390     0ED5  3080               	movlw	128
  1391     0ED6  00F6               	movwf	metin_yaz@metin+1
  1392     0ED7  120A  158A  21B1  120A  158A  	fcall	_metin_yaz
  1393                           
  1394                           ;main.c: 90: imleci_ayarla(1, 9);
  1395     0EDC  3009               	movlw	9
  1396     0EDD  00F8               	movwf	imleci_ayarla@y
  1397     0EDE  3001               	movlw	1
  1398     0EDF  160A  118A  26D2  120A  158A  	fcall	_imleci_ayarla
  1399                           
  1400                           ;main.c: 91: metin_yaz(voltaj_deger_char);
  1401     0EE4  30A2               	movlw	(low (main@voltaj_deger_char| 0))& (0+255)
  1402     0EE5  00F5               	movwf	metin_yaz@metin
  1403     0EE6  3000               	movlw	0
  1404     0EE7  00F6               	movwf	metin_yaz@metin+1
  1405     0EE8  120A  158A  21B1  120A  158A  	fcall	_metin_yaz
  1406     0EED  2E30               	goto	l2747
  1407     0EEE                     __end_of_main:
  1408                           
  1409                           	psect	text1
  1410     039B                     __ptext1:	
  1411 ;; *************** function _sprintf *****************
  1412 ;; Defined at:
  1413 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  sp              1    wreg     PTR unsigned char 
  1416 ;;		 -> main@voltaj_deger_char(10), 
  1417 ;;  f               1   46[BANK0 ] PTR const unsigned char 
  1418 ;;		 -> STR_6(5), 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  sp              1   72[BANK0 ] PTR unsigned char 
  1421 ;;		 -> main@voltaj_deger_char(10), 
  1422 ;;  tmpval          4   68[BANK0 ] struct .
  1423 ;;  val             4   62[BANK0 ] unsigned long 
  1424 ;;  fval            3   75[BANK0 ] unsigned long 
  1425 ;;  prec            2   73[BANK0 ] int 
  1426 ;;  eexp            2   66[BANK0 ] int 
  1427 ;;  flag            2   60[BANK0 ] unsigned short 
  1428 ;;  cp              2    0        PTR const unsigned char 
  1429 ;;  len             2    0        unsigned int 
  1430 ;;  width           2    0        int 
  1431 ;;  c               1   78[BANK0 ] unsigned char 
  1432 ;;  ap              1   59[BANK0 ] PTR void [1]
  1433 ;;		 -> ?_sprintf(2), 
  1434 ;;  d               1    0        unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2   46[BANK0 ] int 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 300/0
  1441 ;;		On exit  : B00/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       4       0       0       0
  1445 ;;      Locals:         0      23       0       0       0
  1446 ;;      Temps:          0       6       0       0       0
  1447 ;;      Totals:         0      33       0       0       0
  1448 ;;Total ram usage:       33 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 3
  1451 ;; This function calls:
  1452 ;;		___awdiv
  1453 ;;		___ftadd
  1454 ;;		___ftge
  1455 ;;		___ftmul
  1456 ;;		___ftneg
  1457 ;;		___ftsub
  1458 ;;		___fttol
  1459 ;;		___lldiv
  1460 ;;		___llmod
  1461 ;;		___lltoft
  1462 ;;		___wmul
  1463 ;;		__div_to_l_
  1464 ;;		__tdiv_to_l_
  1465 ;;		_fround
  1466 ;;		_isdigit
  1467 ;;		_scale
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473     039B                     _sprintf:	
  1474                           ;psect for function _sprintf
  1475                           
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1479                           ;sprintf@sp stored from wreg
  1480     039B  00E8               	movwf	sprintf@sp
  1481                           
  1482                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1483     039C  304F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1484     039D  00DB               	movwf	sprintf@ap
  1485     039E                     l2699:	
  1486                           ;doprnt.c: 553: while((c = *f++)) {
  1487                           
  1488     039E  3001               	movlw	1
  1489     039F  07CE               	addwf	sprintf@f,f
  1490     03A0  30FF               	movlw	-1
  1491     03A1  074E               	addwf	sprintf@f,w
  1492     03A2  0084               	movwf	4
  1493     03A3  120A  158A  200A  120A  118A  	fcall	stringdir
  1494     03A8  00EE               	movwf	sprintf@c
  1495     03A9  086E               	movf	sprintf@c,w
  1496     03AA  1903               	btfsc	3,2
  1497     03AB  2FF7               	goto	l2701
  1498                           
  1499                           ;doprnt.c: 555: if(c != '%')
  1500     03AC  3025               	movlw	37
  1501     03AD  066E               	xorwf	sprintf@c,w
  1502     03AE  1903               	btfsc	3,2
  1503     03AF  2BB4               	goto	l2507
  1504                           
  1505                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1506     03B0  0868               	movf	sprintf@sp,w
  1507     03B1  0084               	movwf	4
  1508     03B2  086E               	movf	sprintf@c,w
  1509     03B3  2FF0               	goto	L5
  1510     03B4                     l2507:	
  1511                           ;doprnt.c: 559: continue;
  1512                           
  1513                           
  1514                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1515     03B4  01DC               	clrf	sprintf@flag
  1516     03B5  01DD               	clrf	sprintf@flag+1
  1517                           
  1518                           ;doprnt.c: 628: if(*f == '.') {
  1519     03B6  084E               	movf	sprintf@f,w
  1520     03B7  0084               	movwf	4
  1521     03B8  120A  158A  200A  120A  118A  	fcall	stringdir
  1522     03BD  3A2E               	xorlw	46
  1523     03BE  1D03               	skipz
  1524     03BF  2BFE               	goto	l2525
  1525                           
  1526                           ;doprnt.c: 629: flag |= 0x4000;
  1527     03C0  175D               	bsf	sprintf@flag+1,6
  1528                           
  1529                           ;doprnt.c: 630: f++;
  1530     03C1  3001               	movlw	1
  1531     03C2  00FF               	movwf	127
  1532     03C3  087F               	movf	127,w
  1533     03C4  07CE               	addwf	sprintf@f,f
  1534                           
  1535                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1536     03C5  01E9               	clrf	sprintf@prec
  1537     03C6  01EA               	clrf	sprintf@prec+1
  1538     03C7                     l2523:	
  1539                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1540                           
  1541     03C7  084E               	movf	sprintf@f,w
  1542     03C8  0084               	movwf	4
  1543     03C9  120A  158A  200A  120A  118A  	fcall	stringdir
  1544     03CE  160A  118A  26B3  120A  118A  	fcall	_isdigit
  1545     03D3  1C03               	btfss	3,0
  1546     03D4  2C04               	goto	l2531
  1547                           
  1548                           ;doprnt.c: 647: prec *= 10;
  1549     03D5  300A               	movlw	10
  1550     03D6  00F0               	movwf	___wmul@multiplier
  1551     03D7  3000               	movlw	0
  1552     03D8  00F1               	movwf	___wmul@multiplier+1
  1553     03D9  086A               	movf	sprintf@prec+1,w
  1554     03DA  00F3               	movwf	___wmul@multiplicand+1
  1555     03DB  0869               	movf	sprintf@prec,w
  1556     03DC  00F2               	movwf	___wmul@multiplicand
  1557     03DD  160A  118A  273F  120A  118A  	fcall	___wmul
  1558     03E2  0871               	movf	?___wmul+1,w
  1559     03E3  00EA               	movwf	sprintf@prec+1
  1560     03E4  0870               	movf	?___wmul,w
  1561     03E5  00E9               	movwf	sprintf@prec
  1562                           
  1563                           ;doprnt.c: 648: prec += *f++ - '0';
  1564     03E6  084E               	movf	sprintf@f,w
  1565     03E7  0084               	movwf	4
  1566     03E8  120A  158A  200A  120A  118A  	fcall	stringdir
  1567     03ED  3ED0               	addlw	208
  1568     03EE  00D2               	movwf	??_sprintf
  1569     03EF  30FF               	movlw	255
  1570     03F0  1803               	skipnc
  1571     03F1  3000               	movlw	0
  1572     03F2  00D3               	movwf	??_sprintf+1
  1573     03F3  0852               	movf	??_sprintf,w
  1574     03F4  07E9               	addwf	sprintf@prec,f
  1575     03F5  1803               	skipnc
  1576     03F6  0AEA               	incf	sprintf@prec+1,f
  1577     03F7  0853               	movf	??_sprintf+1,w
  1578     03F8  07EA               	addwf	sprintf@prec+1,f
  1579     03F9  3001               	movlw	1
  1580     03FA  00FF               	movwf	127
  1581     03FB  087F               	movf	127,w
  1582     03FC  07CE               	addwf	sprintf@f,f
  1583     03FD  2BC7               	goto	l2523
  1584     03FE                     l2525:
  1585                           
  1586                           ;doprnt.c: 652: prec = 0;
  1587     03FE  01E9               	clrf	sprintf@prec
  1588     03FF  01EA               	clrf	sprintf@prec+1
  1589                           
  1590                           ;doprnt.c: 654: flag |= 0x1000;
  1591     0400  165D               	bsf	sprintf@flag+1,4
  1592     0401  2C04               	goto	l2531
  1593     0402                     l252:	
  1594                           ;doprnt.c: 688: case 'f':
  1595                           
  1596                           
  1597                           ;doprnt.c: 689: flag |= 0x400;
  1598     0402  155D               	bsf	sprintf@flag+1,2
  1599                           
  1600                           ;doprnt.c: 690: break;
  1601     0403  2C16               	goto	l2533
  1602     0404                     l2531:
  1603     0404  3001               	movlw	1
  1604     0405  07CE               	addwf	sprintf@f,f
  1605     0406  30FF               	movlw	-1
  1606     0407  074E               	addwf	sprintf@f,w
  1607     0408  0084               	movwf	4
  1608     0409  120A  158A  200A  120A  118A  	fcall	stringdir
  1609     040E  00EE               	movwf	sprintf@c
  1610                           
  1611                           ; Switch size 1, requested type "simple"
  1612                           ; Number of cases is 2, Range of values is 0 to 102
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte            7     4 (average)
  1616                           ; jumptable            260     6 (fixed)
  1617                           ;	Chosen strategy is simple_byte
  1618     040F  3A00               	xorlw	0	; case 0
  1619     0410  1903               	skipnz
  1620     0411  2FF7               	goto	l2701
  1621     0412  3A66               	xorlw	102	; case 102
  1622     0413  1903               	skipnz
  1623     0414  2C02               	goto	l252
  1624     0415  2B9E               	goto	l2699
  1625     0416                     l2533:
  1626                           
  1627                           ;doprnt.c: 851: if(flag & (0x700)) {
  1628     0416  3000               	movlw	0
  1629     0417  055C               	andwf	sprintf@flag,w
  1630     0418  00D2               	movwf	??_sprintf
  1631     0419  3007               	movlw	7
  1632     041A  055D               	andwf	sprintf@flag+1,w
  1633     041B  00D3               	movwf	??_sprintf+1
  1634     041C  0852               	movf	??_sprintf,w
  1635     041D  0453               	iorwf	??_sprintf+1,w
  1636     041E  1903               	btfsc	3,2
  1637     041F  2FC1               	goto	l2681
  1638                           
  1639                           ;doprnt.c: 853: if(flag & 0x1000)
  1640     0420  1E5D               	btfss	sprintf@flag+1,4
  1641     0421  2C26               	goto	l2539
  1642                           
  1643                           ;doprnt.c: 855: prec = 6;
  1644     0422  3006               	movlw	6
  1645     0423  00E9               	movwf	sprintf@prec
  1646     0424  3000               	movlw	0
  1647     0425  00EA               	movwf	sprintf@prec+1
  1648     0426                     l2539:
  1649                           
  1650                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1651     0426  085B               	movf	sprintf@ap,w
  1652     0427  0084               	movwf	4
  1653     0428  1383               	bcf	3,7	;select IRP bank0
  1654     0429  0800               	movf	0,w
  1655     042A  00EB               	movwf	sprintf@fval
  1656     042B  0A84               	incf	4,f
  1657     042C  0800               	movf	0,w
  1658     042D  00EC               	movwf	sprintf@fval+1
  1659     042E  0A84               	incf	4,f
  1660     042F  0800               	movf	0,w
  1661     0430  00ED               	movwf	sprintf@fval+2
  1662     0431  3003               	movlw	3
  1663     0432  00FF               	movwf	127
  1664     0433  087F               	movf	127,w
  1665     0434  07DB               	addwf	sprintf@ap,f
  1666                           
  1667                           ;doprnt.c: 857: if(fval < 0.0) {
  1668     0435  086B               	movf	sprintf@fval,w
  1669     0436  00F0               	movwf	___ftge@ff1
  1670     0437  086C               	movf	sprintf@fval+1,w
  1671     0438  00F1               	movwf	___ftge@ff1+1
  1672     0439  086D               	movf	sprintf@fval+2,w
  1673     043A  00F2               	movwf	___ftge@ff1+2
  1674     043B  3000               	movlw	0
  1675     043C  00F3               	movwf	___ftge@ff2
  1676     043D  3000               	movlw	0
  1677     043E  00F4               	movwf	___ftge@ff2+1
  1678     043F  3000               	movlw	0
  1679     0440  00F5               	movwf	___ftge@ff2+2
  1680     0441  160A  118A  27D3  120A  118A  	fcall	___ftge
  1681     0446  1803               	btfsc	3,0
  1682     0447  2C5D               	goto	l2549
  1683                           
  1684                           ;doprnt.c: 858: fval = -fval;
  1685     0448  086B               	movf	sprintf@fval,w
  1686     0449  00F0               	movwf	___ftneg@f1
  1687     044A  086C               	movf	sprintf@fval+1,w
  1688     044B  00F1               	movwf	___ftneg@f1+1
  1689     044C  086D               	movf	sprintf@fval+2,w
  1690     044D  00F2               	movwf	___ftneg@f1+2
  1691     044E  160A  118A  269D  120A  118A  	fcall	___ftneg
  1692     0453  0870               	movf	?___ftneg,w
  1693     0454  00EB               	movwf	sprintf@fval
  1694     0455  0871               	movf	?___ftneg+1,w
  1695     0456  00EC               	movwf	sprintf@fval+1
  1696     0457  0872               	movf	?___ftneg+2,w
  1697     0458  00ED               	movwf	sprintf@fval+2
  1698                           
  1699                           ;doprnt.c: 859: flag |= 0x03;
  1700     0459  3003               	movlw	3
  1701     045A  04DC               	iorwf	sprintf@flag,f
  1702     045B  3000               	movlw	0
  1703     045C  04DD               	iorwf	sprintf@flag+1,f
  1704     045D                     l2549:
  1705                           
  1706                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1707     045D  01E2               	clrf	sprintf@eexp
  1708     045E  01E3               	clrf	sprintf@eexp+1
  1709                           
  1710                           ;doprnt.c: 862: if( fval!=0) {
  1711     045F  086D               	movf	sprintf@fval+2,w
  1712     0460  046C               	iorwf	sprintf@fval+1,w
  1713     0461  046B               	iorwf	sprintf@fval,w
  1714     0462  1903               	skipnz
  1715     0463  2D0F               	goto	l2577
  1716                           
  1717                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1718     0464  306B               	movlw	low (sprintf@fval| 0)
  1719     0465  0084               	movwf	4
  1720     0466  1383               	bcf	3,7	;select IRP bank0
  1721     0467  0800               	movf	0,w
  1722     0468  00D2               	movwf	??_sprintf
  1723     0469  0A84               	incf	4,f
  1724     046A  0800               	movf	0,w
  1725     046B  00D3               	movwf	??_sprintf+1
  1726     046C  0A84               	incf	4,f
  1727     046D  0800               	movf	0,w
  1728     046E  00D4               	movwf	??_sprintf+2
  1729     046F  0A84               	incf	4,f
  1730     0470  0800               	movf	0,w
  1731     0471  00D5               	movwf	??_sprintf+3
  1732     0472  300F               	movlw	15
  1733     0473                     u3475:
  1734     0473  1003               	clrc
  1735     0474  0CD5               	rrf	??_sprintf+3,f
  1736     0475  0CD4               	rrf	??_sprintf+2,f
  1737     0476  0CD3               	rrf	??_sprintf+1,f
  1738     0477  0CD2               	rrf	??_sprintf,f
  1739     0478  3EFF               	addlw	-1
  1740     0479  1D03               	skipz
  1741     047A  2C73               	goto	u3475
  1742     047B  30FF               	movlw	255
  1743     047C  0552               	andwf	??_sprintf,w
  1744     047D  00D6               	movwf	??_sprintf+4
  1745     047E  3000               	movlw	0
  1746     047F  0553               	andwf	??_sprintf+1,w
  1747     0480  00D7               	movwf	??_sprintf+5
  1748     0481  0856               	movf	??_sprintf+4,w
  1749     0482  3E82               	addlw	130
  1750     0483  00E2               	movwf	sprintf@eexp
  1751     0484  0857               	movf	??_sprintf+5,w
  1752     0485  1803               	skipnc
  1753     0486  3E01               	addlw	1
  1754     0487  3EFF               	addlw	255
  1755     0488  00E3               	movwf	sprintf@eexp+1
  1756                           
  1757                           ;doprnt.c: 864: eexp--;
  1758     0489  30FF               	movlw	255
  1759     048A  07E2               	addwf	sprintf@eexp,f
  1760     048B  1803               	skipnc
  1761     048C  0AE3               	incf	sprintf@eexp+1,f
  1762     048D  30FF               	movlw	255
  1763     048E  07E3               	addwf	sprintf@eexp+1,f
  1764                           
  1765                           ;doprnt.c: 865: eexp *= 3;
  1766     048F  3003               	movlw	3
  1767     0490  00F0               	movwf	___wmul@multiplier
  1768     0491  3000               	movlw	0
  1769     0492  00F1               	movwf	___wmul@multiplier+1
  1770     0493  0863               	movf	sprintf@eexp+1,w
  1771     0494  00F3               	movwf	___wmul@multiplicand+1
  1772     0495  0862               	movf	sprintf@eexp,w
  1773     0496  00F2               	movwf	___wmul@multiplicand
  1774     0497  160A  118A  273F  120A  118A  	fcall	___wmul
  1775     049C  0871               	movf	?___wmul+1,w
  1776     049D  00E3               	movwf	sprintf@eexp+1
  1777     049E  0870               	movf	?___wmul,w
  1778     049F  00E2               	movwf	sprintf@eexp
  1779                           
  1780                           ;doprnt.c: 866: eexp /= 10;
  1781     04A0  300A               	movlw	10
  1782     04A1  00F6               	movwf	___awdiv@divisor
  1783     04A2  3000               	movlw	0
  1784     04A3  00F7               	movwf	___awdiv@divisor+1
  1785     04A4  0863               	movf	sprintf@eexp+1,w
  1786     04A5  00F9               	movwf	___awdiv@dividend+1
  1787     04A6  0862               	movf	sprintf@eexp,w
  1788     04A7  00F8               	movwf	___awdiv@dividend
  1789     04A8  120A  158A  2207  120A  118A  	fcall	___awdiv
  1790     04AD  0877               	movf	?___awdiv+1,w
  1791     04AE  00E3               	movwf	sprintf@eexp+1
  1792     04AF  0876               	movf	?___awdiv,w
  1793     04B0  00E2               	movwf	sprintf@eexp
  1794                           
  1795                           ;doprnt.c: 867: if(eexp < 0)
  1796     04B1  1FE3               	btfss	sprintf@eexp+1,7
  1797     04B2  2CB9               	goto	l2565
  1798                           
  1799                           ;doprnt.c: 868: eexp--;
  1800     04B3  30FF               	movlw	255
  1801     04B4  07E2               	addwf	sprintf@eexp,f
  1802     04B5  1803               	skipnc
  1803     04B6  0AE3               	incf	sprintf@eexp+1,f
  1804     04B7  30FF               	movlw	255
  1805     04B8  07E3               	addwf	sprintf@eexp+1,f
  1806     04B9                     l2565:
  1807                           
  1808                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1809     04B9  0362               	decf	sprintf@eexp,w
  1810     04BA  3AFF               	xorlw	255
  1811     04BB  120A  118A  2144  120A  118A  	fcall	_scale
  1812     04C0  0832               	movf	?_scale,w
  1813     04C1  00E4               	movwf	sprintf@tmpval
  1814     04C2  0833               	movf	?_scale+1,w
  1815     04C3  00E5               	movwf	sprintf@tmpval+1
  1816     04C4  0834               	movf	?_scale+2,w
  1817     04C5  00E6               	movwf	sprintf@tmpval+2
  1818                           
  1819                           ;doprnt.c: 873: tmpval.integ *= fval;
  1820     04C6  086B               	movf	sprintf@fval,w
  1821     04C7  00A3               	movwf	___ftmul@f1
  1822     04C8  086C               	movf	sprintf@fval+1,w
  1823     04C9  00A4               	movwf	___ftmul@f1+1
  1824     04CA  086D               	movf	sprintf@fval+2,w
  1825     04CB  00A5               	movwf	___ftmul@f1+2
  1826     04CC  0864               	movf	sprintf@tmpval,w
  1827     04CD  00A6               	movwf	___ftmul@f2
  1828     04CE  0865               	movf	sprintf@tmpval+1,w
  1829     04CF  00A7               	movwf	___ftmul@f2+1
  1830     04D0  0866               	movf	sprintf@tmpval+2,w
  1831     04D1  00A8               	movwf	___ftmul@f2+2
  1832     04D2  120A  158A  2442  120A  118A  	fcall	___ftmul
  1833     04D7  0823               	movf	?___ftmul,w
  1834     04D8  00E4               	movwf	sprintf@tmpval
  1835     04D9  0824               	movf	?___ftmul+1,w
  1836     04DA  00E5               	movwf	sprintf@tmpval+1
  1837     04DB  0825               	movf	?___ftmul+2,w
  1838     04DC  00E6               	movwf	sprintf@tmpval+2
  1839                           
  1840                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1841     04DD  0864               	movf	sprintf@tmpval,w
  1842     04DE  00F0               	movwf	___ftge@ff1
  1843     04DF  0865               	movf	sprintf@tmpval+1,w
  1844     04E0  00F1               	movwf	___ftge@ff1+1
  1845     04E1  0866               	movf	sprintf@tmpval+2,w
  1846     04E2  00F2               	movwf	___ftge@ff1+2
  1847     04E3  3000               	movlw	0
  1848     04E4  00F3               	movwf	___ftge@ff2
  1849     04E5  3080               	movlw	128
  1850     04E6  00F4               	movwf	___ftge@ff2+1
  1851     04E7  303F               	movlw	63
  1852     04E8  00F5               	movwf	___ftge@ff2+2
  1853     04E9  160A  118A  27D3  120A  118A  	fcall	___ftge
  1854     04EE  1803               	btfsc	3,0
  1855     04EF  2CF6               	goto	l2573
  1856                           
  1857                           ;doprnt.c: 875: eexp--;
  1858     04F0  30FF               	movlw	255
  1859     04F1  07E2               	addwf	sprintf@eexp,f
  1860     04F2  1803               	skipnc
  1861     04F3  0AE3               	incf	sprintf@eexp+1,f
  1862     04F4  30FF               	movlw	255
  1863     04F5  2D0E               	goto	L1
  1864     04F6                     l2573:
  1865                           
  1866                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1867     04F6  0864               	movf	sprintf@tmpval,w
  1868     04F7  00F0               	movwf	___ftge@ff1
  1869     04F8  0865               	movf	sprintf@tmpval+1,w
  1870     04F9  00F1               	movwf	___ftge@ff1+1
  1871     04FA  0866               	movf	sprintf@tmpval+2,w
  1872     04FB  00F2               	movwf	___ftge@ff1+2
  1873     04FC  3000               	movlw	0
  1874     04FD  00F3               	movwf	___ftge@ff2
  1875     04FE  3020               	movlw	32
  1876     04FF  00F4               	movwf	___ftge@ff2+1
  1877     0500  3041               	movlw	65
  1878     0501  00F5               	movwf	___ftge@ff2+2
  1879     0502  160A  118A  27D3  120A  118A  	fcall	___ftge
  1880     0507  1C03               	btfss	3,0
  1881     0508  2D0F               	goto	l2577
  1882                           
  1883                           ;doprnt.c: 877: eexp++;
  1884     0509  3001               	movlw	1
  1885     050A  07E2               	addwf	sprintf@eexp,f
  1886     050B  1803               	skipnc
  1887     050C  0AE3               	incf	sprintf@eexp+1,f
  1888     050D  3000               	movlw	0
  1889     050E                     L1:
  1890     050E  07E3               	addwf	sprintf@eexp+1,f
  1891     050F                     l2577:
  1892                           
  1893                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1894     050F  086A               	movf	sprintf@prec+1,w
  1895     0510  3A80               	xorlw	128
  1896     0511  00FF               	movwf	127
  1897     0512  3080               	movlw	128
  1898     0513  027F               	subwf	127,w
  1899     0514  1D03               	skipz
  1900     0515  2D18               	goto	u3515
  1901     0516  300D               	movlw	13
  1902     0517  0269               	subwf	sprintf@prec,w
  1903     0518                     u3515:
  1904     0518  1803               	skipnc
  1905     0519  2D39               	goto	l2581
  1906                           
  1907                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1908     051A  1283               	bcf	3,5	;RP0=0, select bank0
  1909     051B  1303               	bcf	3,6	;RP1=0, select bank0
  1910     051C  0869               	movf	sprintf@prec,w
  1911     051D  120A  118A  2006  120A  118A  	fcall	_fround
  1912     0522  0832               	movf	?_fround,w
  1913     0523  00BC               	movwf	___ftadd@f1
  1914     0524  0833               	movf	?_fround+1,w
  1915     0525  00BD               	movwf	___ftadd@f1+1
  1916     0526  0834               	movf	?_fround+2,w
  1917     0527  00BE               	movwf	___ftadd@f1+2
  1918     0528  086B               	movf	sprintf@fval,w
  1919     0529  00BF               	movwf	___ftadd@f2
  1920     052A  086C               	movf	sprintf@fval+1,w
  1921     052B  00C0               	movwf	___ftadd@f2+1
  1922     052C  086D               	movf	sprintf@fval+2,w
  1923     052D  00C1               	movwf	___ftadd@f2+2
  1924     052E  120A  158A  24E8  120A  118A  	fcall	___ftadd
  1925     0533  083C               	movf	?___ftadd,w
  1926     0534  00EB               	movwf	sprintf@fval
  1927     0535  083D               	movf	?___ftadd+1,w
  1928     0536  00EC               	movwf	sprintf@fval+1
  1929     0537  083E               	movf	?___ftadd+2,w
  1930     0538  00ED               	movwf	sprintf@fval+2
  1931     0539                     l2581:
  1932                           
  1933                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1934     0539  1283               	bcf	3,5	;RP0=0, select bank0
  1935     053A  1303               	bcf	3,6	;RP1=0, select bank0
  1936     053B  0863               	movf	sprintf@eexp+1,w
  1937     053C  3A80               	xorlw	128
  1938     053D  00FF               	movwf	127
  1939     053E  3080               	movlw	128
  1940     053F  027F               	subwf	127,w
  1941     0540  1D03               	skipz
  1942     0541  2D44               	goto	u3525
  1943     0542  300A               	movlw	10
  1944     0543  0262               	subwf	sprintf@eexp,w
  1945     0544                     u3525:
  1946     0544  1803               	skipnc
  1947     0545  2D69               	goto	l2589
  1948     0546  1283               	bcf	3,5	;RP0=0, select bank0
  1949     0547  1303               	bcf	3,6	;RP1=0, select bank0
  1950     0548  086D               	movf	sprintf@fval+2,w
  1951     0549  046C               	iorwf	sprintf@fval+1,w
  1952     054A  046B               	iorwf	sprintf@fval,w
  1953     054B  1903               	skipnz
  1954     054C  2DB2               	goto	l2603
  1955     054D  086B               	movf	sprintf@fval,w
  1956     054E  00B9               	movwf	___fttol@f1
  1957     054F  086C               	movf	sprintf@fval+1,w
  1958     0550  00BA               	movwf	___fttol@f1+1
  1959     0551  086D               	movf	sprintf@fval+2,w
  1960     0552  00BB               	movwf	___fttol@f1+2
  1961     0553  120A  158A  232A  120A  118A  	fcall	___fttol
  1962     0558  083C               	movf	?___fttol+3,w
  1963     0559  043B               	iorwf	?___fttol+2,w
  1964     055A  043A               	iorwf	?___fttol+1,w
  1965     055B  0439               	iorwf	?___fttol,w
  1966     055C  1D03               	skipz
  1967     055D  2DB2               	goto	l2603
  1968     055E  0863               	movf	sprintf@eexp+1,w
  1969     055F  3A80               	xorlw	128
  1970     0560  00FF               	movwf	127
  1971     0561  3080               	movlw	128
  1972     0562  027F               	subwf	127,w
  1973     0563  1D03               	skipz
  1974     0564  2D67               	goto	u3555
  1975     0565  3002               	movlw	2
  1976     0566  0262               	subwf	sprintf@eexp,w
  1977     0567                     u3555:
  1978     0567  1C03               	skipc
  1979     0568  2DB2               	goto	l2603
  1980     0569                     l2589:
  1981                           
  1982                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1983     0569  1283               	bcf	3,5	;RP0=0, select bank0
  1984     056A  1303               	bcf	3,6	;RP1=0, select bank0
  1985     056B  0864               	movf	sprintf@tmpval,w
  1986     056C  00F0               	movwf	___ftge@ff1
  1987     056D  0865               	movf	sprintf@tmpval+1,w
  1988     056E  00F1               	movwf	___ftge@ff1+1
  1989     056F  0866               	movf	sprintf@tmpval+2,w
  1990     0570  00F2               	movwf	___ftge@ff1+2
  1991     0571  3070               	movlw	112
  1992     0572  00F3               	movwf	___ftge@ff2
  1993     0573  3089               	movlw	137
  1994     0574  00F4               	movwf	___ftge@ff2+1
  1995     0575  3040               	movlw	64
  1996     0576  00F5               	movwf	___ftge@ff2+2
  1997     0577  160A  118A  27D3  120A  118A  	fcall	___ftge
  1998     057C  1803               	btfsc	3,0
  1999     057D  2D80               	goto	l2593
  2000                           
  2001                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2002     057E  30F7               	movlw	247
  2003     057F  2D81               	goto	L2
  2004     0580                     l2593:	
  2005                           ;doprnt.c: 1148: }else{
  2006                           
  2007                           
  2008                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2009     0580  30F8               	movlw	248
  2010     0581                     L2:
  2011     0581  07E2               	addwf	sprintf@eexp,f
  2012     0582  1803               	skipnc
  2013     0583  0AE3               	incf	sprintf@eexp+1,f
  2014     0584  30FF               	movlw	255
  2015     0585  07E3               	addwf	sprintf@eexp+1,f
  2016                           
  2017                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  2018     0586  0862               	movf	sprintf@eexp,w
  2019     0587  120A  118A  2144  120A  118A  	fcall	_scale
  2020     058C  0832               	movf	?_scale,w
  2021     058D  00E4               	movwf	sprintf@tmpval
  2022     058E  0833               	movf	?_scale+1,w
  2023     058F  00E5               	movwf	sprintf@tmpval+1
  2024     0590  0834               	movf	?_scale+2,w
  2025     0591  00E6               	movwf	sprintf@tmpval+2
  2026                           
  2027                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2028     0592  086B               	movf	sprintf@fval,w
  2029     0593  00F0               	movwf	__tdiv_to_l_@f1
  2030     0594  086C               	movf	sprintf@fval+1,w
  2031     0595  00F1               	movwf	__tdiv_to_l_@f1+1
  2032     0596  086D               	movf	sprintf@fval+2,w
  2033     0597  00F2               	movwf	__tdiv_to_l_@f1+2
  2034     0598  0864               	movf	sprintf@tmpval,w
  2035     0599  00F3               	movwf	__tdiv_to_l_@f2
  2036     059A  0865               	movf	sprintf@tmpval+1,w
  2037     059B  00F4               	movwf	__tdiv_to_l_@f2+1
  2038     059C  0866               	movf	sprintf@tmpval+2,w
  2039     059D  00F5               	movwf	__tdiv_to_l_@f2+2
  2040     059E  120A  158A  23A1  120A  118A  	fcall	__tdiv_to_l_
  2041     05A3  0873               	movf	?__tdiv_to_l_+3,w
  2042     05A4  00E1               	movwf	sprintf@val+3
  2043     05A5  0872               	movf	?__tdiv_to_l_+2,w
  2044     05A6  00E0               	movwf	sprintf@val+2
  2045     05A7  0871               	movf	?__tdiv_to_l_+1,w
  2046     05A8  00DF               	movwf	sprintf@val+1
  2047     05A9  0870               	movf	?__tdiv_to_l_,w
  2048     05AA  00DE               	movwf	sprintf@val
  2049                           
  2050                           ;doprnt.c: 1155: fval = 0.0;
  2051     05AB  3000               	movlw	0
  2052     05AC  00EB               	movwf	sprintf@fval
  2053     05AD  3000               	movlw	0
  2054     05AE  00EC               	movwf	sprintf@fval+1
  2055     05AF  3000               	movlw	0
  2056     05B0  00ED               	movwf	sprintf@fval+2
  2057                           
  2058                           ;doprnt.c: 1156: } else {
  2059     05B1  2DEE               	goto	l2607
  2060     05B2                     l2603:
  2061                           
  2062                           ;doprnt.c: 1157: val = (unsigned long)fval;
  2063     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  2064     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  2065     05B4  086B               	movf	sprintf@fval,w
  2066     05B5  00B9               	movwf	___fttol@f1
  2067     05B6  086C               	movf	sprintf@fval+1,w
  2068     05B7  00BA               	movwf	___fttol@f1+1
  2069     05B8  086D               	movf	sprintf@fval+2,w
  2070     05B9  00BB               	movwf	___fttol@f1+2
  2071     05BA  120A  158A  232A  120A  118A  	fcall	___fttol
  2072     05BF  083C               	movf	?___fttol+3,w
  2073     05C0  00E1               	movwf	sprintf@val+3
  2074     05C1  083B               	movf	?___fttol+2,w
  2075     05C2  00E0               	movwf	sprintf@val+2
  2076     05C3  083A               	movf	?___fttol+1,w
  2077     05C4  00DF               	movwf	sprintf@val+1
  2078     05C5  0839               	movf	?___fttol,w
  2079     05C6  00DE               	movwf	sprintf@val
  2080                           
  2081                           ;doprnt.c: 1158: fval -= (double)val;
  2082     05C7  0861               	movf	sprintf@val+3,w
  2083     05C8  00FB               	movwf	___lltoft@c+3
  2084     05C9  0860               	movf	sprintf@val+2,w
  2085     05CA  00FA               	movwf	___lltoft@c+2
  2086     05CB  085F               	movf	sprintf@val+1,w
  2087     05CC  00F9               	movwf	___lltoft@c+1
  2088     05CD  085E               	movf	sprintf@val,w
  2089     05CE  00F8               	movwf	___lltoft@c
  2090     05CF  160A  118A  2781  120A  118A  	fcall	___lltoft
  2091     05D4  0878               	movf	?___lltoft,w
  2092     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2093     05D6  00C8               	movwf	___ftsub@f2
  2094     05D7  0879               	movf	?___lltoft+1,w
  2095     05D8  00C9               	movwf	___ftsub@f2+1
  2096     05D9  087A               	movf	?___lltoft+2,w
  2097     05DA  00CA               	movwf	___ftsub@f2+2
  2098     05DB  086B               	movf	sprintf@fval,w
  2099     05DC  00CB               	movwf	___ftsub@f1
  2100     05DD  086C               	movf	sprintf@fval+1,w
  2101     05DE  00CC               	movwf	___ftsub@f1+1
  2102     05DF  086D               	movf	sprintf@fval+2,w
  2103     05E0  00CD               	movwf	___ftsub@f1+2
  2104     05E1  160A  118A  2703  120A  118A  	fcall	___ftsub
  2105     05E6  0848               	movf	?___ftsub,w
  2106     05E7  00EB               	movwf	sprintf@fval
  2107     05E8  0849               	movf	?___ftsub+1,w
  2108     05E9  00EC               	movwf	sprintf@fval+1
  2109     05EA  084A               	movf	?___ftsub+2,w
  2110     05EB  00ED               	movwf	sprintf@fval+2
  2111                           
  2112                           ;doprnt.c: 1159: eexp = 0;
  2113     05EC  01E2               	clrf	sprintf@eexp
  2114     05ED  01E3               	clrf	sprintf@eexp+1
  2115     05EE                     l2607:
  2116                           
  2117                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2118     05EE  01EE               	clrf	sprintf@c
  2119     05EF  0AEE               	incf	sprintf@c,f
  2120     05F0                     l2613:
  2121                           
  2122                           ;doprnt.c: 1163: if(val < dpowers[c])
  2123     05F0  086E               	movf	sprintf@c,w
  2124     05F1  00D2               	movwf	??_sprintf
  2125     05F2  3001               	movlw	1
  2126     05F3                     u3575:
  2127     05F3  1003               	clrc
  2128     05F4  0DD2               	rlf	??_sprintf,f
  2129     05F5  3EFF               	addlw	-1
  2130     05F6  1D03               	skipz
  2131     05F7  2DF3               	goto	u3575
  2132     05F8  1003               	clrc
  2133     05F9  0D52               	rlf	??_sprintf,w
  2134     05FA  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2135     05FB  0084               	movwf	4
  2136     05FC  120A  158A  200A  120A  118A  	fcall	stringdir
  2137     0601  00D3               	movwf	??_sprintf+1
  2138     0602  120A  158A  200A  120A  118A  	fcall	stringdir
  2139     0607  00D4               	movwf	??_sprintf+2
  2140     0608  120A  158A  200A  120A  118A  	fcall	stringdir
  2141     060D  00D5               	movwf	??_sprintf+3
  2142     060E  120A  158A  200A  120A  118A  	fcall	stringdir
  2143     0613  00D6               	movwf	??_sprintf+4
  2144     0614  0856               	movf	??_sprintf+4,w
  2145     0615  0261               	subwf	sprintf@val+3,w
  2146     0616  1D03               	skipz
  2147     0617  2E22               	goto	u3585
  2148     0618  0855               	movf	??_sprintf+3,w
  2149     0619  0260               	subwf	sprintf@val+2,w
  2150     061A  1D03               	skipz
  2151     061B  2E22               	goto	u3585
  2152     061C  0854               	movf	??_sprintf+2,w
  2153     061D  025F               	subwf	sprintf@val+1,w
  2154     061E  1D03               	skipz
  2155     061F  2E22               	goto	u3585
  2156     0620  0853               	movf	??_sprintf+1,w
  2157     0621  025E               	subwf	sprintf@val,w
  2158     0622                     u3585:
  2159     0622  1C03               	btfss	3,0
  2160     0623  2E2C               	goto	l2621
  2161     0624  3001               	movlw	1
  2162     0625  00FF               	movwf	127
  2163     0626  087F               	movf	127,w
  2164     0627  07EE               	addwf	sprintf@c,f
  2165     0628  300A               	movlw	10
  2166     0629  066E               	xorwf	sprintf@c,w
  2167     062A  1D03               	btfss	3,2
  2168     062B  2DF0               	goto	l2613
  2169     062C                     l2621:
  2170                           
  2171                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  2172     062C  085C               	movf	sprintf@flag,w
  2173     062D  3903               	andlw	3
  2174     062E  1903               	btfsc	3,2
  2175     062F  2E39               	goto	l2635
  2176                           
  2177                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  2178     0630  0868               	movf	sprintf@sp,w
  2179     0631  0084               	movwf	4
  2180     0632  302D               	movlw	45
  2181     0633                     L6:
  2182     0633  1383               	bcf	3,7	;select IRP bank0
  2183     0634  0080               	movwf	0
  2184     0635  3001               	movlw	1
  2185     0636  00FF               	movwf	127
  2186     0637  087F               	movf	127,w
  2187     0638  07E8               	addwf	sprintf@sp,f
  2188     0639                     l2635:
  2189     0639  3001               	movlw	1
  2190     063A  02EE               	subwf	sprintf@c,f
  2191     063B  0A6E               	incf	sprintf@c,w
  2192     063C  1903               	btfsc	3,2
  2193     063D  2EAA               	goto	l2643
  2194                           
  2195                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  2196     063E  086E               	movf	sprintf@c,w
  2197     063F  00D2               	movwf	??_sprintf
  2198     0640  3001               	movlw	1
  2199     0641                     u3615:
  2200     0641  1003               	clrc
  2201     0642  0DD2               	rlf	??_sprintf,f
  2202     0643  3EFF               	addlw	-1
  2203     0644  1D03               	skipz
  2204     0645  2E41               	goto	u3615
  2205     0646  1003               	clrc
  2206     0647  0D52               	rlf	??_sprintf,w
  2207     0648  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2208     0649  0084               	movwf	4
  2209     064A  120A  158A  200A  120A  118A  	fcall	stringdir
  2210     064F  00F0               	movwf	___lldiv@divisor
  2211     0650  120A  158A  200A  120A  118A  	fcall	stringdir
  2212     0655  00F1               	movwf	___lldiv@divisor+1
  2213     0656  120A  158A  200A  120A  118A  	fcall	stringdir
  2214     065B  00F2               	movwf	___lldiv@divisor+2
  2215     065C  120A  158A  200A  120A  118A  	fcall	stringdir
  2216     0661  00F3               	movwf	___lldiv@divisor+3
  2217     0662  0861               	movf	sprintf@val+3,w
  2218     0663  00F7               	movwf	___lldiv@dividend+3
  2219     0664  0860               	movf	sprintf@val+2,w
  2220     0665  00F6               	movwf	___lldiv@dividend+2
  2221     0666  085F               	movf	sprintf@val+1,w
  2222     0667  00F5               	movwf	___lldiv@dividend+1
  2223     0668  085E               	movf	sprintf@val,w
  2224     0669  00F4               	movwf	___lldiv@dividend
  2225     066A  120A  158A  2260  120A  118A  	fcall	___lldiv
  2226     066F  0873               	movf	?___lldiv+3,w
  2227     0670  00E7               	movwf	sprintf@tmpval+3
  2228     0671  0872               	movf	?___lldiv+2,w
  2229     0672  00E6               	movwf	sprintf@tmpval+2
  2230     0673  0871               	movf	?___lldiv+1,w
  2231     0674  00E5               	movwf	sprintf@tmpval+1
  2232     0675  0870               	movf	?___lldiv,w
  2233     0676  00E4               	movwf	sprintf@tmpval
  2234                           
  2235                           ;doprnt.c: 1228: tmpval.vd %= 10;
  2236     0677  3000               	movlw	0
  2237     0678  00F3               	movwf	___llmod@divisor+3
  2238     0679  3000               	movlw	0
  2239     067A  00F2               	movwf	___llmod@divisor+2
  2240     067B  3000               	movlw	0
  2241     067C  00F1               	movwf	___llmod@divisor+1
  2242     067D  300A               	movlw	10
  2243     067E  00F0               	movwf	___llmod@divisor
  2244     067F  0867               	movf	sprintf@tmpval+3,w
  2245     0680  00F7               	movwf	___llmod@dividend+3
  2246     0681  0866               	movf	sprintf@tmpval+2,w
  2247     0682  00F6               	movwf	___llmod@dividend+2
  2248     0683  0865               	movf	sprintf@tmpval+1,w
  2249     0684  00F5               	movwf	___llmod@dividend+1
  2250     0685  0864               	movf	sprintf@tmpval,w
  2251     0686  00F4               	movwf	___llmod@dividend
  2252     0687  120A  158A  2165  120A  118A  	fcall	___llmod
  2253     068C  0873               	movf	?___llmod+3,w
  2254     068D  00E7               	movwf	sprintf@tmpval+3
  2255     068E  0872               	movf	?___llmod+2,w
  2256     068F  00E6               	movwf	sprintf@tmpval+2
  2257     0690  0871               	movf	?___llmod+1,w
  2258     0691  00E5               	movwf	sprintf@tmpval+1
  2259     0692  0870               	movf	?___llmod,w
  2260     0693  00E4               	movwf	sprintf@tmpval
  2261                           
  2262                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  2263     0694  0868               	movf	sprintf@sp,w
  2264     0695  0084               	movwf	4
  2265     0696  0864               	movf	sprintf@tmpval,w
  2266     0697  3E30               	addlw	48
  2267     0698  2E33               	goto	L6
  2268     0699                     l2637:
  2269                           
  2270                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  2271     0699  1283               	bcf	3,5	;RP0=0, select bank0
  2272     069A  1303               	bcf	3,6	;RP1=0, select bank0
  2273     069B  0868               	movf	sprintf@sp,w
  2274     069C  0084               	movwf	4
  2275     069D  3030               	movlw	48
  2276     069E  1383               	bcf	3,7	;select IRP bank0
  2277     069F  0080               	movwf	0
  2278     06A0  3001               	movlw	1
  2279     06A1  00FF               	movwf	127
  2280     06A2  087F               	movf	127,w
  2281     06A3  07E8               	addwf	sprintf@sp,f
  2282                           
  2283                           ;doprnt.c: 1235: eexp--;
  2284     06A4  30FF               	movlw	255
  2285     06A5  07E2               	addwf	sprintf@eexp,f
  2286     06A6  1803               	skipnc
  2287     06A7  0AE3               	incf	sprintf@eexp+1,f
  2288     06A8  30FF               	movlw	255
  2289     06A9  07E3               	addwf	sprintf@eexp+1,f
  2290     06AA                     l2643:
  2291     06AA  0863               	movf	sprintf@eexp+1,w
  2292     06AB  3A80               	xorlw	128
  2293     06AC  00FF               	movwf	127
  2294     06AD  3080               	movlw	128
  2295     06AE  027F               	subwf	127,w
  2296     06AF  1D03               	skipz
  2297     06B0  2EB3               	goto	u3635
  2298     06B1  3001               	movlw	1
  2299     06B2  0262               	subwf	sprintf@eexp,w
  2300     06B3                     u3635:
  2301     06B3  1803               	skipnc
  2302     06B4  2E99               	goto	l2637
  2303                           
  2304                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2305     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  2306     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  2307     06B7  086A               	movf	sprintf@prec+1,w
  2308     06B8  3A80               	xorlw	128
  2309     06B9  00FF               	movwf	127
  2310     06BA  3080               	movlw	128
  2311     06BB  027F               	subwf	127,w
  2312     06BC  1D03               	skipz
  2313     06BD  2EC0               	goto	u3645
  2314     06BE  3009               	movlw	9
  2315     06BF  0269               	subwf	sprintf@prec,w
  2316     06C0                     u3645:
  2317     06C0  1C03               	skipc
  2318     06C1  2EC6               	goto	l2649
  2319                           
  2320                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2321     06C2  3008               	movlw	8
  2322     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2323     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2324     06C5  2EC9               	goto	L3
  2325     06C6                     l2649:
  2326                           
  2327                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  2328     06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2329     06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2330     06C8  0869               	movf	sprintf@prec,w
  2331     06C9                     L3:
  2332     06C9  00EE               	movwf	sprintf@c
  2333                           
  2334                           ;doprnt.c: 1241: prec -= (int)c;
  2335     06CA  086E               	movf	sprintf@c,w
  2336     06CB  00D2               	movwf	??_sprintf
  2337     06CC  01D3               	clrf	??_sprintf+1
  2338     06CD  0852               	movf	??_sprintf,w
  2339     06CE  02E9               	subwf	sprintf@prec,f
  2340     06CF  0853               	movf	??_sprintf+1,w
  2341     06D0  1C03               	skipc
  2342     06D1  03EA               	decf	sprintf@prec+1,f
  2343     06D2  02EA               	subwf	sprintf@prec+1,f
  2344                           
  2345                           ;doprnt.c: 1245: if(c)
  2346     06D3  086E               	movf	sprintf@c,w
  2347     06D4  1903               	btfsc	3,2
  2348     06D5  2EDF               	goto	l2657
  2349                           
  2350                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  2351     06D6  0868               	movf	sprintf@sp,w
  2352     06D7  0084               	movwf	4
  2353     06D8  302E               	movlw	46
  2354     06D9  1383               	bcf	3,7	;select IRP bank0
  2355     06DA  0080               	movwf	0
  2356     06DB  3001               	movlw	1
  2357     06DC  00FF               	movwf	127
  2358     06DD  087F               	movf	127,w
  2359     06DE  07E8               	addwf	sprintf@sp,f
  2360     06DF                     l2657:
  2361                           
  2362                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2363     06DF  086E               	movf	sprintf@c,w
  2364     06E0  120A  118A  2144  120A  118A  	fcall	_scale
  2365     06E5  0832               	movf	?_scale,w
  2366     06E6  00D8               	movwf	_sprintf$812
  2367     06E7  0833               	movf	?_scale+1,w
  2368     06E8  00D9               	movwf	_sprintf$812+1
  2369     06E9  0834               	movf	?_scale+2,w
  2370     06EA  00DA               	movwf	_sprintf$812+2
  2371                           
  2372                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2373     06EB  0858               	movf	_sprintf$812,w
  2374     06EC  00A6               	movwf	___ftmul@f2
  2375     06ED  0859               	movf	_sprintf$812+1,w
  2376     06EE  00A7               	movwf	___ftmul@f2+1
  2377     06EF  085A               	movf	_sprintf$812+2,w
  2378     06F0  00A8               	movwf	___ftmul@f2+2
  2379     06F1  086B               	movf	sprintf@fval,w
  2380     06F2  00A3               	movwf	___ftmul@f1
  2381     06F3  086C               	movf	sprintf@fval+1,w
  2382     06F4  00A4               	movwf	___ftmul@f1+1
  2383     06F5  086D               	movf	sprintf@fval+2,w
  2384     06F6  00A5               	movwf	___ftmul@f1+2
  2385     06F7  120A  158A  2442  120A  118A  	fcall	___ftmul
  2386     06FC  0823               	movf	?___ftmul,w
  2387     06FD  00B9               	movwf	___fttol@f1
  2388     06FE  0824               	movf	?___ftmul+1,w
  2389     06FF  00BA               	movwf	___fttol@f1+1
  2390     0700  0825               	movf	?___ftmul+2,w
  2391     0701  00BB               	movwf	___fttol@f1+2
  2392     0702  120A  158A  232A  120A  118A  	fcall	___fttol
  2393     0707  083C               	movf	?___fttol+3,w
  2394     0708  00E1               	movwf	sprintf@val+3
  2395     0709  083B               	movf	?___fttol+2,w
  2396     070A  00E0               	movwf	sprintf@val+2
  2397     070B  083A               	movf	?___fttol+1,w
  2398     070C  00DF               	movwf	sprintf@val+1
  2399     070D  0839               	movf	?___fttol,w
  2400     070E                     L4:
  2401     070E  00DE               	movwf	sprintf@val
  2402     070F  3001               	movlw	1
  2403     0710  02EE               	subwf	sprintf@c,f
  2404     0711  0A6E               	incf	sprintf@c,w
  2405     0712  1903               	btfsc	3,2
  2406     0713  2FBC               	goto	l2679
  2407                           
  2408                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  2409                           
  2410                           ;doprnt.c: 1254: while(c--) {
  2411     0714  086E               	movf	sprintf@c,w
  2412     0715  00D2               	movwf	??_sprintf
  2413     0716  3001               	movlw	1
  2414     0717                     u3665:
  2415     0717  1003               	clrc
  2416     0718  0DD2               	rlf	??_sprintf,f
  2417     0719  3EFF               	addlw	-1
  2418     071A  1D03               	skipz
  2419     071B  2F17               	goto	u3665
  2420     071C  1003               	clrc
  2421     071D  0D52               	rlf	??_sprintf,w
  2422     071E  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2423     071F  0084               	movwf	4
  2424     0720  120A  158A  200A  120A  118A  	fcall	stringdir
  2425     0725  00F0               	movwf	___lldiv@divisor
  2426     0726  120A  158A  200A  120A  118A  	fcall	stringdir
  2427     072B  00F1               	movwf	___lldiv@divisor+1
  2428     072C  120A  158A  200A  120A  118A  	fcall	stringdir
  2429     0731  00F2               	movwf	___lldiv@divisor+2
  2430     0732  120A  158A  200A  120A  118A  	fcall	stringdir
  2431     0737  00F3               	movwf	___lldiv@divisor+3
  2432     0738  0861               	movf	sprintf@val+3,w
  2433     0739  00F7               	movwf	___lldiv@dividend+3
  2434     073A  0860               	movf	sprintf@val+2,w
  2435     073B  00F6               	movwf	___lldiv@dividend+2
  2436     073C  085F               	movf	sprintf@val+1,w
  2437     073D  00F5               	movwf	___lldiv@dividend+1
  2438     073E  085E               	movf	sprintf@val,w
  2439     073F  00F4               	movwf	___lldiv@dividend
  2440     0740  120A  158A  2260  120A  118A  	fcall	___lldiv
  2441     0745  0873               	movf	?___lldiv+3,w
  2442     0746  00E7               	movwf	sprintf@tmpval+3
  2443     0747  0872               	movf	?___lldiv+2,w
  2444     0748  00E6               	movwf	sprintf@tmpval+2
  2445     0749  0871               	movf	?___lldiv+1,w
  2446     074A  00E5               	movwf	sprintf@tmpval+1
  2447     074B  0870               	movf	?___lldiv,w
  2448     074C  00E4               	movwf	sprintf@tmpval
  2449                           
  2450                           ;doprnt.c: 1256: tmpval.vd %= 10;
  2451     074D  3000               	movlw	0
  2452     074E  00F3               	movwf	___llmod@divisor+3
  2453     074F  3000               	movlw	0
  2454     0750  00F2               	movwf	___llmod@divisor+2
  2455     0751  3000               	movlw	0
  2456     0752  00F1               	movwf	___llmod@divisor+1
  2457     0753  300A               	movlw	10
  2458     0754  00F0               	movwf	___llmod@divisor
  2459     0755  0867               	movf	sprintf@tmpval+3,w
  2460     0756  00F7               	movwf	___llmod@dividend+3
  2461     0757  0866               	movf	sprintf@tmpval+2,w
  2462     0758  00F6               	movwf	___llmod@dividend+2
  2463     0759  0865               	movf	sprintf@tmpval+1,w
  2464     075A  00F5               	movwf	___llmod@dividend+1
  2465     075B  0864               	movf	sprintf@tmpval,w
  2466     075C  00F4               	movwf	___llmod@dividend
  2467     075D  120A  158A  2165  120A  118A  	fcall	___llmod
  2468     0762  0873               	movf	?___llmod+3,w
  2469     0763  00E7               	movwf	sprintf@tmpval+3
  2470     0764  0872               	movf	?___llmod+2,w
  2471     0765  00E6               	movwf	sprintf@tmpval+2
  2472     0766  0871               	movf	?___llmod+1,w
  2473     0767  00E5               	movwf	sprintf@tmpval+1
  2474     0768  0870               	movf	?___llmod,w
  2475     0769  00E4               	movwf	sprintf@tmpval
  2476                           
  2477                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2478     076A  0868               	movf	sprintf@sp,w
  2479     076B  0084               	movwf	4
  2480     076C  0864               	movf	sprintf@tmpval,w
  2481     076D  3E30               	addlw	48
  2482     076E  1383               	bcf	3,7	;select IRP bank0
  2483     076F  0080               	movwf	0
  2484     0770  3001               	movlw	1
  2485     0771  00FF               	movwf	127
  2486     0772  087F               	movf	127,w
  2487     0773  07E8               	addwf	sprintf@sp,f
  2488                           
  2489                           ;doprnt.c: 1258: val %= dpowers[c];
  2490     0774  086E               	movf	sprintf@c,w
  2491     0775  00D2               	movwf	??_sprintf
  2492     0776  3001               	movlw	1
  2493     0777                     u3675:
  2494     0777  1003               	clrc
  2495     0778  0DD2               	rlf	??_sprintf,f
  2496     0779  3EFF               	addlw	-1
  2497     077A  1D03               	skipz
  2498     077B  2F77               	goto	u3675
  2499     077C  1003               	clrc
  2500     077D  0D52               	rlf	??_sprintf,w
  2501     077E  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2502     077F  0084               	movwf	4
  2503     0780  120A  158A  200A  120A  118A  	fcall	stringdir
  2504     0785  00F0               	movwf	___llmod@divisor
  2505     0786  120A  158A  200A  120A  118A  	fcall	stringdir
  2506     078B  00F1               	movwf	___llmod@divisor+1
  2507     078C  120A  158A  200A  120A  118A  	fcall	stringdir
  2508     0791  00F2               	movwf	___llmod@divisor+2
  2509     0792  120A  158A  200A  120A  118A  	fcall	stringdir
  2510     0797  00F3               	movwf	___llmod@divisor+3
  2511     0798  0861               	movf	sprintf@val+3,w
  2512     0799  00F7               	movwf	___llmod@dividend+3
  2513     079A  0860               	movf	sprintf@val+2,w
  2514     079B  00F6               	movwf	___llmod@dividend+2
  2515     079C  085F               	movf	sprintf@val+1,w
  2516     079D  00F5               	movwf	___llmod@dividend+1
  2517     079E  085E               	movf	sprintf@val,w
  2518     079F  00F4               	movwf	___llmod@dividend
  2519     07A0  120A  158A  2165  120A  118A  	fcall	___llmod
  2520     07A5  0873               	movf	?___llmod+3,w
  2521     07A6  00E1               	movwf	sprintf@val+3
  2522     07A7  0872               	movf	?___llmod+2,w
  2523     07A8  00E0               	movwf	sprintf@val+2
  2524     07A9  0871               	movf	?___llmod+1,w
  2525     07AA  00DF               	movwf	sprintf@val+1
  2526     07AB  0870               	movf	?___llmod,w
  2527     07AC  2F0E               	goto	L4
  2528     07AD                     l2673:
  2529                           
  2530                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  2531     07AD  0868               	movf	sprintf@sp,w
  2532     07AE  0084               	movwf	4
  2533     07AF  3030               	movlw	48
  2534     07B0  1383               	bcf	3,7	;select IRP bank0
  2535     07B1  0080               	movwf	0
  2536     07B2  3001               	movlw	1
  2537     07B3  00FF               	movwf	127
  2538     07B4  087F               	movf	127,w
  2539     07B5  07E8               	addwf	sprintf@sp,f
  2540                           
  2541                           ;doprnt.c: 1263: prec--;
  2542     07B6  30FF               	movlw	255
  2543     07B7  07E9               	addwf	sprintf@prec,f
  2544     07B8  1803               	skipnc
  2545     07B9  0AEA               	incf	sprintf@prec+1,f
  2546     07BA  30FF               	movlw	255
  2547     07BB  07EA               	addwf	sprintf@prec+1,f
  2548     07BC                     l2679:
  2549     07BC  0869               	movf	sprintf@prec,w
  2550     07BD  046A               	iorwf	sprintf@prec+1,w
  2551     07BE  1903               	btfsc	3,2
  2552     07BF  2B9E               	goto	l2699
  2553     07C0  2FAD               	goto	l2673
  2554     07C1                     l2681:
  2555                           
  2556                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  2557     07C1  0869               	movf	sprintf@prec,w
  2558     07C2  046A               	iorwf	sprintf@prec+1,w
  2559     07C3  1D03               	btfss	3,2
  2560     07C4  2FD1               	goto	l293
  2561     07C5  0861               	movf	sprintf@val+3,w
  2562     07C6  0460               	iorwf	sprintf@val+2,w
  2563     07C7  045F               	iorwf	sprintf@val+1,w
  2564     07C8  045E               	iorwf	sprintf@val,w
  2565     07C9  1D03               	skipz
  2566     07CA  2FD1               	goto	l293
  2567                           
  2568                           ;doprnt.c: 1317: prec++;
  2569     07CB  3001               	movlw	1
  2570     07CC  07E9               	addwf	sprintf@prec,f
  2571     07CD  1803               	skipnc
  2572     07CE  0AEA               	incf	sprintf@prec+1,f
  2573     07CF  3000               	movlw	0
  2574     07D0  07EA               	addwf	sprintf@prec+1,f
  2575     07D1                     l293:
  2576                           
  2577                           ;doprnt.c: 1365: if(c < prec)
  2578     07D1  086A               	movf	sprintf@prec+1,w
  2579     07D2  3A80               	xorlw	128
  2580     07D3  3C80               	sublw	128
  2581     07D4  1D03               	skipz
  2582     07D5  2FD8               	goto	u3725
  2583     07D6  0869               	movf	sprintf@prec,w
  2584     07D7  026E               	subwf	sprintf@c,w
  2585     07D8                     u3725:
  2586     07D8  1C03               	btfss	3,0
  2587     07D9  2FE7               	goto	l2693
  2588                           
  2589                           ;doprnt.c: 1367: else if(prec < c)
  2590     07DA  1283               	bcf	3,5	;RP0=0, select bank0
  2591     07DB  1303               	bcf	3,6	;RP1=0, select bank0
  2592     07DC  086A               	movf	sprintf@prec+1,w
  2593     07DD  3A80               	xorlw	128
  2594     07DE  00D2               	movwf	??_sprintf
  2595     07DF  3080               	movlw	128
  2596     07E0  0252               	subwf	??_sprintf,w
  2597     07E1  1D03               	skipz
  2598     07E2  2FE5               	goto	u3735
  2599     07E3  086E               	movf	sprintf@c,w
  2600     07E4  0269               	subwf	sprintf@prec,w
  2601     07E5                     u3735:
  2602     07E5  1C03               	btfss	3,0
  2603     07E6  2FE7               	goto	l2693
  2604     07E7                     l2693:
  2605                           
  2606                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2607     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  2608     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  2609     07E9  085C               	movf	sprintf@flag,w
  2610     07EA  3903               	andlw	3
  2611     07EB  1903               	btfsc	3,2
  2612     07EC  2B9E               	goto	l2699
  2613                           
  2614                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2615     07ED  0868               	movf	sprintf@sp,w
  2616     07EE  0084               	movwf	4
  2617     07EF  302D               	movlw	45
  2618     07F0                     L5:
  2619     07F0  1383               	bcf	3,7	;select IRP bank0
  2620     07F1  0080               	movwf	0
  2621     07F2  3001               	movlw	1
  2622     07F3  00FF               	movwf	127
  2623     07F4  087F               	movf	127,w
  2624     07F5  07E8               	addwf	sprintf@sp,f
  2625     07F6  2B9E               	goto	l2699
  2626     07F7                     l2701:
  2627                           
  2628                           ;doprnt.c: 1564: *sp = 0;
  2629     07F7  0868               	movf	sprintf@sp,w
  2630     07F8  0084               	movwf	4
  2631     07F9  1383               	bcf	3,7	;select IRP bank0
  2632     07FA  0180               	clrf	0
  2633     07FB  0008               	return
  2634     07FC                     __end_of_sprintf:
  2635                           
  2636                           	psect	text2
  2637     0144                     __ptext2:	
  2638 ;; *************** function _scale *****************
  2639 ;; Defined at:
  2640 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  scl             1    wreg     char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  scl             1   24[BANK0 ] char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  3   18[BANK0 ] char 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 300/0
  2651 ;;		On exit  : 300/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       3       0       0       0
  2655 ;;      Locals:         0       4       0       0       0
  2656 ;;      Temps:          0       0       0       0       0
  2657 ;;      Totals:         0       7       0       0       0
  2658 ;;Total ram usage:        7 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 2
  2661 ;; This function calls:
  2662 ;;		___awdiv
  2663 ;;		___awmod
  2664 ;;		___bmul
  2665 ;;		___ftmul
  2666 ;; This function is called by:
  2667 ;;		_sprintf
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671     0144                     _scale:	
  2672                           ;psect for function _scale
  2673                           
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2677                           ;scale@scl stored from wreg
  2678     0144  00B8               	movwf	scale@scl
  2679                           
  2680                           ;doprnt.c: 436: if(scl < 0) {
  2681     0145  1FB8               	btfss	scale@scl,7
  2682     0146  2A72               	goto	l2175
  2683                           
  2684                           ;doprnt.c: 437: scl = -scl;
  2685     0147  09B8               	comf	scale@scl,f
  2686     0148  0AB8               	incf	scale@scl,f
  2687                           
  2688                           ;doprnt.c: 438: if(scl>=110)
  2689     0149  0838               	movf	scale@scl,w
  2690     014A  3A80               	xorlw	128
  2691     014B  3E12               	addlw	-238
  2692     014C  1C03               	skipc
  2693     014D  29F4               	goto	l2165
  2694                           
  2695                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2696     014E  3003               	movlw	3
  2697     014F  00A0               	movwf	___bmul@multiplicand
  2698     0150  0838               	movf	scale@scl,w
  2699     0151  00F2               	movwf	___awmod@dividend
  2700     0152  01F3               	clrf	___awmod@dividend+1
  2701     0153  1BF2               	btfsc	___awmod@dividend,7
  2702     0154  03F3               	decf	___awmod@dividend+1,f
  2703     0155  3064               	movlw	100
  2704     0156  00F0               	movwf	___awmod@divisor
  2705     0157  3000               	movlw	0
  2706     0158  00F1               	movwf	___awmod@divisor+1
  2707     0159  120A  158A  211A  120A  118A  	fcall	___awmod
  2708     015E  0871               	movf	?___awmod+1,w
  2709     015F  00F9               	movwf	___awdiv@dividend+1
  2710     0160  0870               	movf	?___awmod,w
  2711     0161  00F8               	movwf	___awdiv@dividend
  2712     0162  300A               	movlw	10
  2713     0163  00F6               	movwf	___awdiv@divisor
  2714     0164  3000               	movlw	0
  2715     0165  00F7               	movwf	___awdiv@divisor+1
  2716     0166  120A  158A  2207  120A  118A  	fcall	___awdiv
  2717     016B  0876               	movf	?___awdiv,w
  2718     016C  160A  118A  26C1  120A  118A  	fcall	___bmul
  2719     0171  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2720     0172  0084               	movwf	4
  2721     0173  120A  158A  200A  120A  118A  	fcall	stringdir
  2722     0178  00A3               	movwf	___ftmul@f1
  2723     0179  120A  158A  200A  120A  118A  	fcall	stringdir
  2724     017E  00A4               	movwf	___ftmul@f1+1
  2725     017F  120A  158A  200A  120A  118A  	fcall	stringdir
  2726     0184  00A5               	movwf	___ftmul@f1+2
  2727     0185  3003               	movlw	3
  2728     0186  00A0               	movwf	___bmul@multiplicand
  2729     0187  0838               	movf	scale@scl,w
  2730     0188  00F8               	movwf	___awdiv@dividend
  2731     0189  01F9               	clrf	___awdiv@dividend+1
  2732     018A  1BF8               	btfsc	___awdiv@dividend,7
  2733     018B  03F9               	decf	___awdiv@dividend+1,f
  2734     018C  3064               	movlw	100
  2735     018D  00F6               	movwf	___awdiv@divisor
  2736     018E  3000               	movlw	0
  2737     018F  00F7               	movwf	___awdiv@divisor+1
  2738     0190  120A  158A  2207  120A  118A  	fcall	___awdiv
  2739     0195  0876               	movf	?___awdiv,w
  2740     0196  160A  118A  26C1  120A  118A  	fcall	___bmul
  2741     019B  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2742     019C  0084               	movwf	4
  2743     019D  120A  158A  200A  120A  118A  	fcall	stringdir
  2744     01A2  00A6               	movwf	___ftmul@f2
  2745     01A3  120A  158A  200A  120A  118A  	fcall	stringdir
  2746     01A8  00A7               	movwf	___ftmul@f2+1
  2747     01A9  120A  158A  200A  120A  118A  	fcall	stringdir
  2748     01AE  00A8               	movwf	___ftmul@f2+2
  2749     01AF  120A  158A  2442  120A  118A  	fcall	___ftmul
  2750     01B4  0823               	movf	?___ftmul,w
  2751     01B5  00B5               	movwf	_scale$811
  2752     01B6  0824               	movf	?___ftmul+1,w
  2753     01B7  00B6               	movwf	_scale$811+1
  2754     01B8  0825               	movf	?___ftmul+2,w
  2755     01B9  00B7               	movwf	_scale$811+2
  2756                           
  2757                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2758     01BA  3003               	movlw	3
  2759     01BB  00A0               	movwf	___bmul@multiplicand
  2760     01BC  0838               	movf	scale@scl,w
  2761     01BD  00F2               	movwf	___awmod@dividend
  2762     01BE  01F3               	clrf	___awmod@dividend+1
  2763     01BF  1BF2               	btfsc	___awmod@dividend,7
  2764     01C0  03F3               	decf	___awmod@dividend+1,f
  2765     01C1  300A               	movlw	10
  2766     01C2  00F0               	movwf	___awmod@divisor
  2767     01C3  3000               	movlw	0
  2768     01C4  00F1               	movwf	___awmod@divisor+1
  2769     01C5  120A  158A  211A  120A  118A  	fcall	___awmod
  2770     01CA  0870               	movf	?___awmod,w
  2771     01CB  160A  118A  26C1  120A  118A  	fcall	___bmul
  2772     01D0  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2773     01D1  0084               	movwf	4
  2774     01D2  120A  158A  200A  120A  118A  	fcall	stringdir
  2775     01D7  00A3               	movwf	___ftmul@f1
  2776     01D8  120A  158A  200A  120A  118A  	fcall	stringdir
  2777     01DD  00A4               	movwf	___ftmul@f1+1
  2778     01DE  120A  158A  200A  120A  118A  	fcall	stringdir
  2779     01E3  00A5               	movwf	___ftmul@f1+2
  2780     01E4  0835               	movf	_scale$811,w
  2781     01E5  00A6               	movwf	___ftmul@f2
  2782     01E6  0836               	movf	_scale$811+1,w
  2783     01E7  00A7               	movwf	___ftmul@f2+1
  2784     01E8  0837               	movf	_scale$811+2,w
  2785     01E9  00A8               	movwf	___ftmul@f2+2
  2786     01EA  120A  158A  2442   	fcall	___ftmul
  2787     01ED  0823               	movf	?___ftmul,w
  2788     01EE  00B2               	movwf	?_scale
  2789     01EF  0824               	movf	?___ftmul+1,w
  2790     01F0  00B3               	movwf	?_scale+1
  2791     01F1  0825               	movf	?___ftmul+2,w
  2792     01F2  00B4               	movwf	?_scale+2
  2793     01F3  0008               	return
  2794     01F4                     l2165:
  2795                           
  2796                           ;doprnt.c: 440: else if(scl > 10)
  2797     01F4  0838               	movf	scale@scl,w
  2798     01F5  3A80               	xorlw	128
  2799     01F6  3E75               	addlw	-139
  2800     01F7  1C03               	skipc
  2801     01F8  2A57               	goto	l2171
  2802                           
  2803                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2804     01F9  3003               	movlw	3
  2805     01FA  00A0               	movwf	___bmul@multiplicand
  2806     01FB  0838               	movf	scale@scl,w
  2807     01FC  00F2               	movwf	___awmod@dividend
  2808     01FD  01F3               	clrf	___awmod@dividend+1
  2809     01FE  1BF2               	btfsc	___awmod@dividend,7
  2810     01FF  03F3               	decf	___awmod@dividend+1,f
  2811     0200  300A               	movlw	10
  2812     0201  00F0               	movwf	___awmod@divisor
  2813     0202  3000               	movlw	0
  2814     0203  00F1               	movwf	___awmod@divisor+1
  2815     0204  120A  158A  211A  120A  118A  	fcall	___awmod
  2816     0209  0870               	movf	?___awmod,w
  2817     020A  160A  118A  26C1  120A  118A  	fcall	___bmul
  2818     020F  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2819     0210  0084               	movwf	4
  2820     0211  120A  158A  200A  120A  118A  	fcall	stringdir
  2821     0216  00A3               	movwf	___ftmul@f1
  2822     0217  120A  158A  200A  120A  118A  	fcall	stringdir
  2823     021C  00A4               	movwf	___ftmul@f1+1
  2824     021D  120A  158A  200A  120A  118A  	fcall	stringdir
  2825     0222  00A5               	movwf	___ftmul@f1+2
  2826     0223  3003               	movlw	3
  2827     0224  00A0               	movwf	___bmul@multiplicand
  2828     0225  0838               	movf	scale@scl,w
  2829     0226  00F8               	movwf	___awdiv@dividend
  2830     0227  01F9               	clrf	___awdiv@dividend+1
  2831     0228  1BF8               	btfsc	___awdiv@dividend,7
  2832     0229  03F9               	decf	___awdiv@dividend+1,f
  2833     022A  300A               	movlw	10
  2834     022B  00F6               	movwf	___awdiv@divisor
  2835     022C  3000               	movlw	0
  2836     022D  00F7               	movwf	___awdiv@divisor+1
  2837     022E  120A  158A  2207  120A  118A  	fcall	___awdiv
  2838     0233  0876               	movf	?___awdiv,w
  2839     0234  160A  118A  26C1  120A  118A  	fcall	___bmul
  2840     0239  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2841     023A  0084               	movwf	4
  2842     023B  120A  158A  200A  120A  118A  	fcall	stringdir
  2843     0240  00A6               	movwf	___ftmul@f2
  2844     0241  120A  158A  200A  120A  118A  	fcall	stringdir
  2845     0246  00A7               	movwf	___ftmul@f2+1
  2846     0247  120A  158A  200A  120A  118A  	fcall	stringdir
  2847     024C  00A8               	movwf	___ftmul@f2+2
  2848     024D  120A  158A  2442   	fcall	___ftmul
  2849     0250  0823               	movf	?___ftmul,w
  2850     0251  00B2               	movwf	?_scale
  2851     0252  0824               	movf	?___ftmul+1,w
  2852     0253  00B3               	movwf	?_scale+1
  2853     0254  0825               	movf	?___ftmul+2,w
  2854     0255  00B4               	movwf	?_scale+2
  2855     0256  0008               	return
  2856     0257                     l2171:
  2857                           
  2858                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2859     0257  3003               	movlw	3
  2860     0258  00A0               	movwf	___bmul@multiplicand
  2861     0259  0838               	movf	scale@scl,w
  2862     025A  160A  118A  26C1  120A  118A  	fcall	___bmul
  2863     025F  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2864     0260  0084               	movwf	4
  2865     0261  120A  158A  200A  120A  118A  	fcall	stringdir
  2866     0266  00B2               	movwf	?_scale
  2867     0267  120A  158A  200A  120A  118A  	fcall	stringdir
  2868     026C  00B3               	movwf	?_scale+1
  2869     026D  120A  158A  200A   	fcall	stringdir
  2870     0270  00B4               	movwf	?_scale+2
  2871     0271  0008               	return
  2872     0272                     l2175:
  2873                           
  2874                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2875     0272  0838               	movf	scale@scl,w
  2876     0273  3A80               	xorlw	128
  2877     0274  3E12               	addlw	-238
  2878     0275  1C03               	skipc
  2879     0276  2B1D               	goto	l2183
  2880                           
  2881                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2882     0277  3003               	movlw	3
  2883     0278  00A0               	movwf	___bmul@multiplicand
  2884     0279  0838               	movf	scale@scl,w
  2885     027A  00F2               	movwf	___awmod@dividend
  2886     027B  01F3               	clrf	___awmod@dividend+1
  2887     027C  1BF2               	btfsc	___awmod@dividend,7
  2888     027D  03F3               	decf	___awmod@dividend+1,f
  2889     027E  3064               	movlw	100
  2890     027F  00F0               	movwf	___awmod@divisor
  2891     0280  3000               	movlw	0
  2892     0281  00F1               	movwf	___awmod@divisor+1
  2893     0282  120A  158A  211A  120A  118A  	fcall	___awmod
  2894     0287  0871               	movf	?___awmod+1,w
  2895     0288  00F9               	movwf	___awdiv@dividend+1
  2896     0289  0870               	movf	?___awmod,w
  2897     028A  00F8               	movwf	___awdiv@dividend
  2898     028B  300A               	movlw	10
  2899     028C  00F6               	movwf	___awdiv@divisor
  2900     028D  3000               	movlw	0
  2901     028E  00F7               	movwf	___awdiv@divisor+1
  2902     028F  120A  158A  2207  120A  118A  	fcall	___awdiv
  2903     0294  0876               	movf	?___awdiv,w
  2904     0295  160A  118A  26C1  120A  118A  	fcall	___bmul
  2905     029A  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2906     029B  0084               	movwf	4
  2907     029C  120A  158A  200A  120A  118A  	fcall	stringdir
  2908     02A1  00A3               	movwf	___ftmul@f1
  2909     02A2  120A  158A  200A  120A  118A  	fcall	stringdir
  2910     02A7  00A4               	movwf	___ftmul@f1+1
  2911     02A8  120A  158A  200A  120A  118A  	fcall	stringdir
  2912     02AD  00A5               	movwf	___ftmul@f1+2
  2913     02AE  3003               	movlw	3
  2914     02AF  00A0               	movwf	___bmul@multiplicand
  2915     02B0  0838               	movf	scale@scl,w
  2916     02B1  00F8               	movwf	___awdiv@dividend
  2917     02B2  01F9               	clrf	___awdiv@dividend+1
  2918     02B3  1BF8               	btfsc	___awdiv@dividend,7
  2919     02B4  03F9               	decf	___awdiv@dividend+1,f
  2920     02B5  3064               	movlw	100
  2921     02B6  00F6               	movwf	___awdiv@divisor
  2922     02B7  3000               	movlw	0
  2923     02B8  00F7               	movwf	___awdiv@divisor+1
  2924     02B9  120A  158A  2207  120A  118A  	fcall	___awdiv
  2925     02BE  0876               	movf	?___awdiv,w
  2926     02BF  160A  118A  26C1  120A  118A  	fcall	___bmul
  2927     02C4  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2928     02C5  0084               	movwf	4
  2929     02C6  120A  158A  200A  120A  118A  	fcall	stringdir
  2930     02CB  00A6               	movwf	___ftmul@f2
  2931     02CC  120A  158A  200A  120A  118A  	fcall	stringdir
  2932     02D1  00A7               	movwf	___ftmul@f2+1
  2933     02D2  120A  158A  200A  120A  118A  	fcall	stringdir
  2934     02D7  00A8               	movwf	___ftmul@f2+2
  2935     02D8  120A  158A  2442  120A  118A  	fcall	___ftmul
  2936     02DD  0823               	movf	?___ftmul,w
  2937     02DE  00B5               	movwf	_scale$811
  2938     02DF  0824               	movf	?___ftmul+1,w
  2939     02E0  00B6               	movwf	_scale$811+1
  2940     02E1  0825               	movf	?___ftmul+2,w
  2941     02E2  00B7               	movwf	_scale$811+2
  2942                           
  2943                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2944     02E3  3003               	movlw	3
  2945     02E4  00A0               	movwf	___bmul@multiplicand
  2946     02E5  0838               	movf	scale@scl,w
  2947     02E6  00F2               	movwf	___awmod@dividend
  2948     02E7  01F3               	clrf	___awmod@dividend+1
  2949     02E8  1BF2               	btfsc	___awmod@dividend,7
  2950     02E9  03F3               	decf	___awmod@dividend+1,f
  2951     02EA  300A               	movlw	10
  2952     02EB  00F0               	movwf	___awmod@divisor
  2953     02EC  3000               	movlw	0
  2954     02ED  00F1               	movwf	___awmod@divisor+1
  2955     02EE  120A  158A  211A  120A  118A  	fcall	___awmod
  2956     02F3  0870               	movf	?___awmod,w
  2957     02F4  160A  118A  26C1  120A  118A  	fcall	___bmul
  2958     02F9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2959     02FA  0084               	movwf	4
  2960     02FB  120A  158A  200A  120A  118A  	fcall	stringdir
  2961     0300  00A3               	movwf	___ftmul@f1
  2962     0301  120A  158A  200A  120A  118A  	fcall	stringdir
  2963     0306  00A4               	movwf	___ftmul@f1+1
  2964     0307  120A  158A  200A  120A  118A  	fcall	stringdir
  2965     030C  00A5               	movwf	___ftmul@f1+2
  2966     030D  0835               	movf	_scale$811,w
  2967     030E  00A6               	movwf	___ftmul@f2
  2968     030F  0836               	movf	_scale$811+1,w
  2969     0310  00A7               	movwf	___ftmul@f2+1
  2970     0311  0837               	movf	_scale$811+2,w
  2971     0312  00A8               	movwf	___ftmul@f2+2
  2972     0313  120A  158A  2442   	fcall	___ftmul
  2973     0316  0823               	movf	?___ftmul,w
  2974     0317  00B2               	movwf	?_scale
  2975     0318  0824               	movf	?___ftmul+1,w
  2976     0319  00B3               	movwf	?_scale+1
  2977     031A  0825               	movf	?___ftmul+2,w
  2978     031B  00B4               	movwf	?_scale+2
  2979     031C  0008               	return
  2980     031D                     l2183:
  2981                           
  2982                           ;doprnt.c: 446: else if(scl > 10)
  2983     031D  0838               	movf	scale@scl,w
  2984     031E  3A80               	xorlw	128
  2985     031F  3E75               	addlw	-139
  2986     0320  1C03               	skipc
  2987     0321  2B80               	goto	l2189
  2988                           
  2989                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  2990     0322  3003               	movlw	3
  2991     0323  00A0               	movwf	___bmul@multiplicand
  2992     0324  0838               	movf	scale@scl,w
  2993     0325  00F2               	movwf	___awmod@dividend
  2994     0326  01F3               	clrf	___awmod@dividend+1
  2995     0327  1BF2               	btfsc	___awmod@dividend,7
  2996     0328  03F3               	decf	___awmod@dividend+1,f
  2997     0329  300A               	movlw	10
  2998     032A  00F0               	movwf	___awmod@divisor
  2999     032B  3000               	movlw	0
  3000     032C  00F1               	movwf	___awmod@divisor+1
  3001     032D  120A  158A  211A  120A  118A  	fcall	___awmod
  3002     0332  0870               	movf	?___awmod,w
  3003     0333  160A  118A  26C1  120A  118A  	fcall	___bmul
  3004     0338  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3005     0339  0084               	movwf	4
  3006     033A  120A  158A  200A  120A  118A  	fcall	stringdir
  3007     033F  00A3               	movwf	___ftmul@f1
  3008     0340  120A  158A  200A  120A  118A  	fcall	stringdir
  3009     0345  00A4               	movwf	___ftmul@f1+1
  3010     0346  120A  158A  200A  120A  118A  	fcall	stringdir
  3011     034B  00A5               	movwf	___ftmul@f1+2
  3012     034C  3003               	movlw	3
  3013     034D  00A0               	movwf	___bmul@multiplicand
  3014     034E  0838               	movf	scale@scl,w
  3015     034F  00F8               	movwf	___awdiv@dividend
  3016     0350  01F9               	clrf	___awdiv@dividend+1
  3017     0351  1BF8               	btfsc	___awdiv@dividend,7
  3018     0352  03F9               	decf	___awdiv@dividend+1,f
  3019     0353  300A               	movlw	10
  3020     0354  00F6               	movwf	___awdiv@divisor
  3021     0355  3000               	movlw	0
  3022     0356  00F7               	movwf	___awdiv@divisor+1
  3023     0357  120A  158A  2207  120A  118A  	fcall	___awdiv
  3024     035C  0876               	movf	?___awdiv,w
  3025     035D  160A  118A  26C1  120A  118A  	fcall	___bmul
  3026     0362  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3027     0363  0084               	movwf	4
  3028     0364  120A  158A  200A  120A  118A  	fcall	stringdir
  3029     0369  00A6               	movwf	___ftmul@f2
  3030     036A  120A  158A  200A  120A  118A  	fcall	stringdir
  3031     036F  00A7               	movwf	___ftmul@f2+1
  3032     0370  120A  158A  200A  120A  118A  	fcall	stringdir
  3033     0375  00A8               	movwf	___ftmul@f2+2
  3034     0376  120A  158A  2442   	fcall	___ftmul
  3035     0379  0823               	movf	?___ftmul,w
  3036     037A  00B2               	movwf	?_scale
  3037     037B  0824               	movf	?___ftmul+1,w
  3038     037C  00B3               	movwf	?_scale+1
  3039     037D  0825               	movf	?___ftmul+2,w
  3040     037E  00B4               	movwf	?_scale+2
  3041     037F  0008               	return
  3042     0380                     l2189:
  3043                           
  3044                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3045     0380  3003               	movlw	3
  3046     0381  00A0               	movwf	___bmul@multiplicand
  3047     0382  0838               	movf	scale@scl,w
  3048     0383  160A  118A  26C1  120A  118A  	fcall	___bmul
  3049     0388  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3050     0389  0084               	movwf	4
  3051     038A  120A  158A  200A  120A  118A  	fcall	stringdir
  3052     038F  00B2               	movwf	?_scale
  3053     0390  120A  158A  200A  120A  118A  	fcall	stringdir
  3054     0395  00B3               	movwf	?_scale+1
  3055     0396  120A  158A  200A   	fcall	stringdir
  3056     0399  00B4               	movwf	?_scale+2
  3057     039A  0008               	return
  3058     039B                     __end_of_scale:
  3059                           
  3060                           	psect	text3
  3061     091A                     __ptext3:	
  3062 ;; *************** function ___awmod *****************
  3063 ;; Defined at:
  3064 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awmod.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  divisor         2    0[COMMON] int 
  3067 ;;  dividend        2    2[COMMON] int 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  sign            1    5[COMMON] unsigned char 
  3070 ;;  counter         1    4[COMMON] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  2    0[COMMON] int 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, btemp+1
  3075 ;; Tracked objects:
  3076 ;;		On entry : 300/0
  3077 ;;		On exit  : 300/0
  3078 ;;		Unchanged: 300/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         4       0       0       0       0
  3081 ;;      Locals:         2       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0
  3083 ;;      Totals:         6       0       0       0       0
  3084 ;;Total ram usage:        6 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_scale
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093     091A                     ___awmod:	
  3094                           ;psect for function ___awmod
  3095                           
  3096                           
  3097                           ;incstack = 0
  3098                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3099     091A  01F5               	clrf	___awmod@sign
  3100     091B  1FF3               	btfss	___awmod@dividend+1,7
  3101     091C  2924               	goto	l1927
  3102     091D  09F2               	comf	___awmod@dividend,f
  3103     091E  09F3               	comf	___awmod@dividend+1,f
  3104     091F  0AF2               	incf	___awmod@dividend,f
  3105     0920  1903               	skipnz
  3106     0921  0AF3               	incf	___awmod@dividend+1,f
  3107     0922  01F5               	clrf	___awmod@sign
  3108     0923  0AF5               	incf	___awmod@sign,f
  3109     0924                     l1927:
  3110     0924  1FF1               	btfss	___awmod@divisor+1,7
  3111     0925  292B               	goto	l1931
  3112     0926  09F0               	comf	___awmod@divisor,f
  3113     0927  09F1               	comf	___awmod@divisor+1,f
  3114     0928  0AF0               	incf	___awmod@divisor,f
  3115     0929  1903               	skipnz
  3116     092A  0AF1               	incf	___awmod@divisor+1,f
  3117     092B                     l1931:
  3118     092B  0870               	movf	___awmod@divisor,w
  3119     092C  0471               	iorwf	___awmod@divisor+1,w
  3120     092D  1903               	btfsc	3,2
  3121     092E  2958               	goto	l1949
  3122     092F  01F4               	clrf	___awmod@counter
  3123     0930  0AF4               	incf	___awmod@counter,f
  3124     0931                     l1939:
  3125     0931  1BF1               	btfsc	___awmod@divisor+1,7
  3126     0932  293F               	goto	l1941
  3127     0933  3001               	movlw	1
  3128     0934                     u2205:
  3129     0934  1003               	clrc
  3130     0935  0DF0               	rlf	___awmod@divisor,f
  3131     0936  0DF1               	rlf	___awmod@divisor+1,f
  3132     0937  3EFF               	addlw	-1
  3133     0938  1D03               	skipz
  3134     0939  2934               	goto	u2205
  3135     093A  3001               	movlw	1
  3136     093B  00FF               	movwf	127
  3137     093C  087F               	movf	127,w
  3138     093D  07F4               	addwf	___awmod@counter,f
  3139     093E  2931               	goto	l1939
  3140     093F                     l1941:
  3141     093F  0871               	movf	___awmod@divisor+1,w
  3142     0940  0273               	subwf	___awmod@dividend+1,w
  3143     0941  1D03               	skipz
  3144     0942  2945               	goto	u2225
  3145     0943  0870               	movf	___awmod@divisor,w
  3146     0944  0272               	subwf	___awmod@dividend,w
  3147     0945                     u2225:
  3148     0945  1C03               	skipc
  3149     0946  294D               	goto	l1945
  3150     0947  0870               	movf	___awmod@divisor,w
  3151     0948  02F2               	subwf	___awmod@dividend,f
  3152     0949  0871               	movf	___awmod@divisor+1,w
  3153     094A  1C03               	skipc
  3154     094B  03F3               	decf	___awmod@dividend+1,f
  3155     094C  02F3               	subwf	___awmod@dividend+1,f
  3156     094D                     l1945:
  3157     094D  3001               	movlw	1
  3158     094E                     u2235:
  3159     094E  1003               	clrc
  3160     094F  0CF1               	rrf	___awmod@divisor+1,f
  3161     0950  0CF0               	rrf	___awmod@divisor,f
  3162     0951  3EFF               	addlw	-1
  3163     0952  1D03               	skipz
  3164     0953  294E               	goto	u2235
  3165     0954  3001               	movlw	1
  3166     0955  02F4               	subwf	___awmod@counter,f
  3167     0956  1D03               	btfss	3,2
  3168     0957  293F               	goto	l1941
  3169     0958                     l1949:
  3170     0958  0875               	movf	___awmod@sign,w
  3171     0959  1903               	btfsc	3,2
  3172     095A  2960               	goto	l1953
  3173     095B  09F2               	comf	___awmod@dividend,f
  3174     095C  09F3               	comf	___awmod@dividend+1,f
  3175     095D  0AF2               	incf	___awmod@dividend,f
  3176     095E  1903               	skipnz
  3177     095F  0AF3               	incf	___awmod@dividend+1,f
  3178     0960                     l1953:
  3179     0960  0873               	movf	___awmod@dividend+1,w
  3180     0961  00F1               	movwf	?___awmod+1
  3181     0962  0872               	movf	___awmod@dividend,w
  3182     0963  00F0               	movwf	?___awmod
  3183     0964  0008               	return
  3184     0965                     __end_of___awmod:
  3185                           
  3186                           	psect	text4
  3187     0A07                     __ptext4:	
  3188 ;; *************** function ___awdiv *****************
  3189 ;; Defined at:
  3190 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awdiv.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  divisor         2    6[COMMON] int 
  3193 ;;  dividend        2    8[COMMON] int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  quotient        2   12[COMMON] int 
  3196 ;;  sign            1   11[COMMON] unsigned char 
  3197 ;;  counter         1   10[COMMON] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  2    6[COMMON] int 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, btemp+1
  3202 ;; Tracked objects:
  3203 ;;		On entry : 300/0
  3204 ;;		On exit  : 300/0
  3205 ;;		Unchanged: 300/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         4       0       0       0       0
  3208 ;;      Locals:         4       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         8       0       0       0       0
  3211 ;;Total ram usage:        8 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_scale
  3217 ;;		_sprintf
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221     0A07                     ___awdiv:	
  3222                           ;psect for function ___awdiv
  3223                           
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3227     0A07  01FB               	clrf	___awdiv@sign
  3228     0A08  1FF7               	btfss	___awdiv@divisor+1,7
  3229     0A09  2A11               	goto	l1883
  3230     0A0A  09F6               	comf	___awdiv@divisor,f
  3231     0A0B  09F7               	comf	___awdiv@divisor+1,f
  3232     0A0C  0AF6               	incf	___awdiv@divisor,f
  3233     0A0D  1903               	skipnz
  3234     0A0E  0AF7               	incf	___awdiv@divisor+1,f
  3235     0A0F  01FB               	clrf	___awdiv@sign
  3236     0A10  0AFB               	incf	___awdiv@sign,f
  3237     0A11                     l1883:
  3238     0A11  1FF9               	btfss	___awdiv@dividend+1,7
  3239     0A12  2A1C               	goto	l1889
  3240     0A13  09F8               	comf	___awdiv@dividend,f
  3241     0A14  09F9               	comf	___awdiv@dividend+1,f
  3242     0A15  0AF8               	incf	___awdiv@dividend,f
  3243     0A16  1903               	skipnz
  3244     0A17  0AF9               	incf	___awdiv@dividend+1,f
  3245     0A18  3001               	movlw	1
  3246     0A19  00FF               	movwf	127
  3247     0A1A  087F               	movf	127,w
  3248     0A1B  06FB               	xorwf	___awdiv@sign,f
  3249     0A1C                     l1889:
  3250     0A1C  01FC               	clrf	___awdiv@quotient
  3251     0A1D  01FD               	clrf	___awdiv@quotient+1
  3252     0A1E  0876               	movf	___awdiv@divisor,w
  3253     0A1F  0477               	iorwf	___awdiv@divisor+1,w
  3254     0A20  1903               	btfsc	3,2
  3255     0A21  2A53               	goto	l1911
  3256     0A22  01FA               	clrf	___awdiv@counter
  3257     0A23  0AFA               	incf	___awdiv@counter,f
  3258     0A24                     l1899:
  3259     0A24  1BF7               	btfsc	___awdiv@divisor+1,7
  3260     0A25  2A32               	goto	l1901
  3261     0A26  3001               	movlw	1
  3262     0A27                     u2105:
  3263     0A27  1003               	clrc
  3264     0A28  0DF6               	rlf	___awdiv@divisor,f
  3265     0A29  0DF7               	rlf	___awdiv@divisor+1,f
  3266     0A2A  3EFF               	addlw	-1
  3267     0A2B  1D03               	skipz
  3268     0A2C  2A27               	goto	u2105
  3269     0A2D  3001               	movlw	1
  3270     0A2E  00FF               	movwf	127
  3271     0A2F  087F               	movf	127,w
  3272     0A30  07FA               	addwf	___awdiv@counter,f
  3273     0A31  2A24               	goto	l1899
  3274     0A32                     l1901:
  3275     0A32  3001               	movlw	1
  3276     0A33                     u2125:
  3277     0A33  1003               	clrc
  3278     0A34  0DFC               	rlf	___awdiv@quotient,f
  3279     0A35  0DFD               	rlf	___awdiv@quotient+1,f
  3280     0A36  3EFF               	addlw	-1
  3281     0A37  1D03               	skipz
  3282     0A38  2A33               	goto	u2125
  3283     0A39  0877               	movf	___awdiv@divisor+1,w
  3284     0A3A  0279               	subwf	___awdiv@dividend+1,w
  3285     0A3B  1D03               	skipz
  3286     0A3C  2A3F               	goto	u2135
  3287     0A3D  0876               	movf	___awdiv@divisor,w
  3288     0A3E  0278               	subwf	___awdiv@dividend,w
  3289     0A3F                     u2135:
  3290     0A3F  1C03               	skipc
  3291     0A40  2A48               	goto	l1907
  3292     0A41  0876               	movf	___awdiv@divisor,w
  3293     0A42  02F8               	subwf	___awdiv@dividend,f
  3294     0A43  0877               	movf	___awdiv@divisor+1,w
  3295     0A44  1C03               	skipc
  3296     0A45  03F9               	decf	___awdiv@dividend+1,f
  3297     0A46  02F9               	subwf	___awdiv@dividend+1,f
  3298     0A47  147C               	bsf	___awdiv@quotient,0
  3299     0A48                     l1907:
  3300     0A48  3001               	movlw	1
  3301     0A49                     u2145:
  3302     0A49  1003               	clrc
  3303     0A4A  0CF7               	rrf	___awdiv@divisor+1,f
  3304     0A4B  0CF6               	rrf	___awdiv@divisor,f
  3305     0A4C  3EFF               	addlw	-1
  3306     0A4D  1D03               	skipz
  3307     0A4E  2A49               	goto	u2145
  3308     0A4F  3001               	movlw	1
  3309     0A50  02FA               	subwf	___awdiv@counter,f
  3310     0A51  1D03               	btfss	3,2
  3311     0A52  2A32               	goto	l1901
  3312     0A53                     l1911:
  3313     0A53  087B               	movf	___awdiv@sign,w
  3314     0A54  1903               	btfsc	3,2
  3315     0A55  2A5B               	goto	l1915
  3316     0A56  09FC               	comf	___awdiv@quotient,f
  3317     0A57  09FD               	comf	___awdiv@quotient+1,f
  3318     0A58  0AFC               	incf	___awdiv@quotient,f
  3319     0A59  1903               	skipnz
  3320     0A5A  0AFD               	incf	___awdiv@quotient+1,f
  3321     0A5B                     l1915:
  3322     0A5B  087D               	movf	___awdiv@quotient+1,w
  3323     0A5C  00F7               	movwf	?___awdiv+1
  3324     0A5D  087C               	movf	___awdiv@quotient,w
  3325     0A5E  00F6               	movwf	?___awdiv
  3326     0A5F  0008               	return
  3327     0A60                     __end_of___awdiv:
  3328                           
  3329                           	psect	text5
  3330     16B3                     __ptext5:	
  3331 ;; *************** function _isdigit *****************
  3332 ;; Defined at:
  3333 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\isdigit.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  c               1    wreg     unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  c               1    1[COMMON] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 300/0
  3344 ;;		On exit  : 300/0
  3345 ;;		Unchanged: 300/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         2       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         2       0       0       0       0
  3351 ;;Total ram usage:        2 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_sprintf
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360     16B3                     _isdigit:	
  3361                           ;psect for function _isdigit
  3362                           
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3366                           ;isdigit@c stored from wreg
  3367     16B3  00F1               	movwf	isdigit@c
  3368     16B4  01F0               	clrf	_isdigit$621
  3369     16B5  303A               	movlw	58
  3370     16B6  0271               	subwf	isdigit@c,w
  3371     16B7  1803               	skipnc
  3372     16B8  2EBF               	goto	l2201
  3373     16B9  3030               	movlw	48
  3374     16BA  0271               	subwf	isdigit@c,w
  3375     16BB  1C03               	skipc
  3376     16BC  2EBF               	goto	l2201
  3377     16BD  01F0               	clrf	_isdigit$621
  3378     16BE  0AF0               	incf	_isdigit$621,f
  3379     16BF                     l2201:
  3380     16BF  0C70               	rrf	_isdigit$621,w
  3381     16C0  0008               	return
  3382     16C1                     __end_of_isdigit:
  3383                           
  3384                           	psect	text6
  3385     0006                     __ptext6:	
  3386 ;; *************** function _fround *****************
  3387 ;; Defined at:
  3388 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  prec            1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  prec            1   27[BANK0 ] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  3   18[BANK0 ] unsigned char 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 300/0
  3399 ;;		On exit  : 300/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       3       0       0       0
  3403 ;;      Locals:         0       7       0       0       0
  3404 ;;      Temps:          0       0       0       0       0
  3405 ;;      Totals:         0      10       0       0       0
  3406 ;;Total ram usage:       10 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; Hardware stack levels required when called: 2
  3409 ;; This function calls:
  3410 ;;		___bmul
  3411 ;;		___ftmul
  3412 ;;		___lbdiv
  3413 ;;		___lbmod
  3414 ;; This function is called by:
  3415 ;;		_sprintf
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419     0006                     _fround:	
  3420                           ;psect for function _fround
  3421                           
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3425                           ;fround@prec stored from wreg
  3426     0006  00BB               	movwf	fround@prec
  3427                           
  3428                           ;doprnt.c: 421: if(prec>=110)
  3429     0007  306E               	movlw	110
  3430     0008  023B               	subwf	fround@prec,w
  3431     0009  1C03               	skipc
  3432     000A  28AD               	goto	l2141
  3433                           
  3434                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3435     000B  3003               	movlw	3
  3436     000C  00A0               	movwf	___bmul@multiplicand
  3437     000D  300A               	movlw	10
  3438     000E  00F6               	movwf	___lbdiv@divisor
  3439     000F  3064               	movlw	100
  3440     0010  00F0               	movwf	___lbmod@divisor
  3441     0011  083B               	movf	fround@prec,w
  3442     0012  160A  118A  2720  120A  118A  	fcall	___lbmod
  3443     0017  160A  118A  2760  120A  118A  	fcall	___lbdiv
  3444     001C  160A  118A  26C1  120A  118A  	fcall	___bmul
  3445     0021  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3446     0022  0084               	movwf	4
  3447     0023  120A  158A  200A  120A  118A  	fcall	stringdir
  3448     0028  00A3               	movwf	___ftmul@f1
  3449     0029  120A  158A  200A  120A  118A  	fcall	stringdir
  3450     002E  00A4               	movwf	___ftmul@f1+1
  3451     002F  120A  158A  200A  120A  118A  	fcall	stringdir
  3452     0034  00A5               	movwf	___ftmul@f1+2
  3453     0035  3003               	movlw	3
  3454     0036  00A0               	movwf	___bmul@multiplicand
  3455     0037  3064               	movlw	100
  3456     0038  00F6               	movwf	___lbdiv@divisor
  3457     0039  083B               	movf	fround@prec,w
  3458     003A  160A  118A  2760  120A  118A  	fcall	___lbdiv
  3459     003F  160A  118A  26C1  120A  118A  	fcall	___bmul
  3460     0044  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3461     0045  0084               	movwf	4
  3462     0046  120A  158A  200A  120A  118A  	fcall	stringdir
  3463     004B  00A6               	movwf	___ftmul@f2
  3464     004C  120A  158A  200A  120A  118A  	fcall	stringdir
  3465     0051  00A7               	movwf	___ftmul@f2+1
  3466     0052  120A  158A  200A  120A  118A  	fcall	stringdir
  3467     0057  00A8               	movwf	___ftmul@f2+2
  3468     0058  120A  158A  2442  120A  118A  	fcall	___ftmul
  3469     005D  0823               	movf	?___ftmul,w
  3470     005E  00B8               	movwf	_fround$809
  3471     005F  0824               	movf	?___ftmul+1,w
  3472     0060  00B9               	movwf	_fround$809+1
  3473     0061  0825               	movf	?___ftmul+2,w
  3474     0062  00BA               	movwf	_fround$809+2
  3475                           
  3476                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3477     0063  3003               	movlw	3
  3478     0064  00A0               	movwf	___bmul@multiplicand
  3479     0065  300A               	movlw	10
  3480     0066  00F0               	movwf	___lbmod@divisor
  3481     0067  083B               	movf	fround@prec,w
  3482     0068  160A  118A  2720  120A  118A  	fcall	___lbmod
  3483     006D  160A  118A  26C1  120A  118A  	fcall	___bmul
  3484     0072  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3485     0073  0084               	movwf	4
  3486     0074  120A  158A  200A  120A  118A  	fcall	stringdir
  3487     0079  00A3               	movwf	___ftmul@f1
  3488     007A  120A  158A  200A  120A  118A  	fcall	stringdir
  3489     007F  00A4               	movwf	___ftmul@f1+1
  3490     0080  120A  158A  200A  120A  118A  	fcall	stringdir
  3491     0085  00A5               	movwf	___ftmul@f1+2
  3492     0086  0838               	movf	_fround$809,w
  3493     0087  00A6               	movwf	___ftmul@f2
  3494     0088  0839               	movf	_fround$809+1,w
  3495     0089  00A7               	movwf	___ftmul@f2+1
  3496     008A  083A               	movf	_fround$809+2,w
  3497     008B  00A8               	movwf	___ftmul@f2+2
  3498     008C  120A  158A  2442  120A  118A  	fcall	___ftmul
  3499     0091  0823               	movf	?___ftmul,w
  3500     0092  00B5               	movwf	_fround$810
  3501     0093  0824               	movf	?___ftmul+1,w
  3502     0094  00B6               	movwf	_fround$810+1
  3503     0095  0825               	movf	?___ftmul+2,w
  3504     0096  00B7               	movwf	_fround$810+2
  3505                           
  3506                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3507     0097  3000               	movlw	0
  3508     0098  00A3               	movwf	___ftmul@f1
  3509     0099  3000               	movlw	0
  3510     009A  00A4               	movwf	___ftmul@f1+1
  3511     009B  303F               	movlw	63
  3512     009C  00A5               	movwf	___ftmul@f1+2
  3513     009D  0835               	movf	_fround$810,w
  3514     009E  00A6               	movwf	___ftmul@f2
  3515     009F  0836               	movf	_fround$810+1,w
  3516     00A0  00A7               	movwf	___ftmul@f2+1
  3517     00A1  0837               	movf	_fround$810+2,w
  3518     00A2  00A8               	movwf	___ftmul@f2+2
  3519     00A3  120A  158A  2442   	fcall	___ftmul
  3520     00A6  0823               	movf	?___ftmul,w
  3521     00A7  00B2               	movwf	?_fround
  3522     00A8  0824               	movf	?___ftmul+1,w
  3523     00A9  00B3               	movwf	?_fround+1
  3524     00AA  0825               	movf	?___ftmul+2,w
  3525     00AB  00B4               	movwf	?_fround+2
  3526     00AC  0008               	return
  3527     00AD                     l2141:
  3528                           
  3529                           ;doprnt.c: 423: else if(prec > 10)
  3530     00AD  300B               	movlw	11
  3531     00AE  023B               	subwf	fround@prec,w
  3532     00AF  1C03               	skipc
  3533     00B0  2918               	goto	l2149
  3534                           
  3535                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3536     00B1  3003               	movlw	3
  3537     00B2  00A0               	movwf	___bmul@multiplicand
  3538     00B3  300A               	movlw	10
  3539     00B4  00F0               	movwf	___lbmod@divisor
  3540     00B5  083B               	movf	fround@prec,w
  3541     00B6  160A  118A  2720  120A  118A  	fcall	___lbmod
  3542     00BB  160A  118A  26C1  120A  118A  	fcall	___bmul
  3543     00C0  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3544     00C1  0084               	movwf	4
  3545     00C2  120A  158A  200A  120A  118A  	fcall	stringdir
  3546     00C7  00A3               	movwf	___ftmul@f1
  3547     00C8  120A  158A  200A  120A  118A  	fcall	stringdir
  3548     00CD  00A4               	movwf	___ftmul@f1+1
  3549     00CE  120A  158A  200A  120A  118A  	fcall	stringdir
  3550     00D3  00A5               	movwf	___ftmul@f1+2
  3551     00D4  3003               	movlw	3
  3552     00D5  00A0               	movwf	___bmul@multiplicand
  3553     00D6  300A               	movlw	10
  3554     00D7  00F6               	movwf	___lbdiv@divisor
  3555     00D8  083B               	movf	fround@prec,w
  3556     00D9  160A  118A  2760  120A  118A  	fcall	___lbdiv
  3557     00DE  160A  118A  26C1  120A  118A  	fcall	___bmul
  3558     00E3  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3559     00E4  0084               	movwf	4
  3560     00E5  120A  158A  200A  120A  118A  	fcall	stringdir
  3561     00EA  00A6               	movwf	___ftmul@f2
  3562     00EB  120A  158A  200A  120A  118A  	fcall	stringdir
  3563     00F0  00A7               	movwf	___ftmul@f2+1
  3564     00F1  120A  158A  200A  120A  118A  	fcall	stringdir
  3565     00F6  00A8               	movwf	___ftmul@f2+2
  3566     00F7  120A  158A  2442  120A  118A  	fcall	___ftmul
  3567     00FC  0823               	movf	?___ftmul,w
  3568     00FD  00B8               	movwf	_fround$809
  3569     00FE  0824               	movf	?___ftmul+1,w
  3570     00FF  00B9               	movwf	_fround$809+1
  3571     0100  0825               	movf	?___ftmul+2,w
  3572     0101  00BA               	movwf	_fround$809+2
  3573                           
  3574                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3575     0102  3000               	movlw	0
  3576     0103  00A3               	movwf	___ftmul@f1
  3577     0104  3000               	movlw	0
  3578     0105  00A4               	movwf	___ftmul@f1+1
  3579     0106  303F               	movlw	63
  3580     0107  00A5               	movwf	___ftmul@f1+2
  3581     0108  0838               	movf	_fround$809,w
  3582     0109  00A6               	movwf	___ftmul@f2
  3583     010A  0839               	movf	_fround$809+1,w
  3584     010B  00A7               	movwf	___ftmul@f2+1
  3585     010C  083A               	movf	_fround$809+2,w
  3586     010D  00A8               	movwf	___ftmul@f2+2
  3587     010E  120A  158A  2442   	fcall	___ftmul
  3588     0111  0823               	movf	?___ftmul,w
  3589     0112  00B2               	movwf	?_fround
  3590     0113  0824               	movf	?___ftmul+1,w
  3591     0114  00B3               	movwf	?_fround+1
  3592     0115  0825               	movf	?___ftmul+2,w
  3593     0116  00B4               	movwf	?_fround+2
  3594     0117  0008               	return
  3595     0118                     l2149:
  3596                           
  3597                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3598     0118  3000               	movlw	0
  3599     0119  00A3               	movwf	___ftmul@f1
  3600     011A  3000               	movlw	0
  3601     011B  00A4               	movwf	___ftmul@f1+1
  3602     011C  303F               	movlw	63
  3603     011D  00A5               	movwf	___ftmul@f1+2
  3604     011E  3003               	movlw	3
  3605     011F  00A0               	movwf	___bmul@multiplicand
  3606     0120  083B               	movf	fround@prec,w
  3607     0121  160A  118A  26C1  120A  118A  	fcall	___bmul
  3608     0126  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3609     0127  0084               	movwf	4
  3610     0128  120A  158A  200A  120A  118A  	fcall	stringdir
  3611     012D  00A6               	movwf	___ftmul@f2
  3612     012E  120A  158A  200A  120A  118A  	fcall	stringdir
  3613     0133  00A7               	movwf	___ftmul@f2+1
  3614     0134  120A  158A  200A  120A  118A  	fcall	stringdir
  3615     0139  00A8               	movwf	___ftmul@f2+2
  3616     013A  120A  158A  2442   	fcall	___ftmul
  3617     013D  0823               	movf	?___ftmul,w
  3618     013E  00B2               	movwf	?_fround
  3619     013F  0824               	movf	?___ftmul+1,w
  3620     0140  00B3               	movwf	?_fround+1
  3621     0141  0825               	movf	?___ftmul+2,w
  3622     0142  00B4               	movwf	?_fround+2
  3623     0143  0008               	return
  3624     0144                     __end_of_fround:
  3625                           
  3626                           	psect	text7
  3627     1720                     __ptext7:	
  3628 ;; *************** function ___lbmod *****************
  3629 ;; Defined at:
  3630 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lbmod.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  dividend        1    wreg     unsigned char 
  3633 ;;  divisor         1    0[COMMON] unsigned char 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  dividend        1    3[COMMON] unsigned char 
  3636 ;;  rem             1    5[COMMON] unsigned char 
  3637 ;;  counter         1    4[COMMON] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      unsigned char 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 300/0
  3644 ;;		On exit  : 300/0
  3645 ;;		Unchanged: 300/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         1       0       0       0       0
  3648 ;;      Locals:         3       0       0       0       0
  3649 ;;      Temps:          2       0       0       0       0
  3650 ;;      Totals:         6       0       0       0       0
  3651 ;;Total ram usage:        6 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_fround
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660     1720                     ___lbmod:	
  3661                           ;psect for function ___lbmod
  3662                           
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3666                           ;___lbmod@dividend stored from wreg
  3667     1720  00F3               	movwf	___lbmod@dividend
  3668     1721  3008               	movlw	8
  3669     1722  00F4               	movwf	___lbmod@counter
  3670     1723  01F5               	clrf	___lbmod@rem
  3671     1724                     l2117:
  3672     1724  0873               	movf	___lbmod@dividend,w
  3673     1725  00F1               	movwf	??___lbmod
  3674     1726  3007               	movlw	7
  3675     1727                     u2665:
  3676     1727  1003               	clrc
  3677     1728  0CF1               	rrf	??___lbmod,f
  3678     1729  3EFF               	addlw	-1
  3679     172A  1D03               	skipz
  3680     172B  2F27               	goto	u2665
  3681     172C  0875               	movf	___lbmod@rem,w
  3682     172D  00F2               	movwf	??___lbmod+1
  3683     172E  0772               	addwf	??___lbmod+1,w
  3684     172F  0471               	iorwf	??___lbmod,w
  3685     1730  00F5               	movwf	___lbmod@rem
  3686     1731  1003               	clrc
  3687     1732  0DF3               	rlf	___lbmod@dividend,f
  3688     1733  0870               	movf	___lbmod@divisor,w
  3689     1734  0275               	subwf	___lbmod@rem,w
  3690     1735  1C03               	skipc
  3691     1736  2F39               	goto	l657
  3692     1737  0870               	movf	___lbmod@divisor,w
  3693     1738  02F5               	subwf	___lbmod@rem,f
  3694     1739                     l657:
  3695     1739  3001               	movlw	1
  3696     173A  02F4               	subwf	___lbmod@counter,f
  3697     173B  1D03               	btfss	3,2
  3698     173C  2F24               	goto	l2117
  3699     173D  0875               	movf	___lbmod@rem,w
  3700     173E  0008               	return
  3701     173F                     __end_of___lbmod:
  3702                           
  3703                           	psect	text8
  3704     1760                     __ptext8:	
  3705 ;; *************** function ___lbdiv *****************
  3706 ;; Defined at:
  3707 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lbdiv.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  dividend        1    wreg     unsigned char 
  3710 ;;  divisor         1    6[COMMON] unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  dividend        1    7[COMMON] unsigned char 
  3713 ;;  quotient        1    9[COMMON] unsigned char 
  3714 ;;  counter         1    8[COMMON] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      unsigned char 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, btemp+1
  3719 ;; Tracked objects:
  3720 ;;		On entry : 300/0
  3721 ;;		On exit  : 300/0
  3722 ;;		Unchanged: 300/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         1       0       0       0       0
  3725 ;;      Locals:         3       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0
  3727 ;;      Totals:         4       0       0       0       0
  3728 ;;Total ram usage:        4 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_fround
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737     1760                     ___lbdiv:	
  3738                           ;psect for function ___lbdiv
  3739                           
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  3743                           ;___lbdiv@dividend stored from wreg
  3744     1760  00F7               	movwf	___lbdiv@dividend
  3745     1761  01F9               	clrf	___lbdiv@quotient
  3746     1762  0876               	movf	___lbdiv@divisor,w
  3747     1763  1903               	btfsc	3,2
  3748     1764  2F7F               	goto	l2109
  3749     1765  01F8               	clrf	___lbdiv@counter
  3750     1766  0AF8               	incf	___lbdiv@counter,f
  3751     1767                     l2097:
  3752     1767  1BF6               	btfsc	___lbdiv@divisor,7
  3753     1768  2F70               	goto	l2099
  3754     1769  1003               	clrc
  3755     176A  0DF6               	rlf	___lbdiv@divisor,f
  3756     176B  3001               	movlw	1
  3757     176C  00FF               	movwf	127
  3758     176D  087F               	movf	127,w
  3759     176E  07F8               	addwf	___lbdiv@counter,f
  3760     176F  2F67               	goto	l2097
  3761     1770                     l2099:
  3762     1770  1003               	clrc
  3763     1771  0DF9               	rlf	___lbdiv@quotient,f
  3764     1772  0876               	movf	___lbdiv@divisor,w
  3765     1773  0277               	subwf	___lbdiv@dividend,w
  3766     1774  1C03               	skipc
  3767     1775  2F7A               	goto	L7
  3768     1776  0876               	movf	___lbdiv@divisor,w
  3769     1777  02F7               	subwf	___lbdiv@dividend,f
  3770     1778  1479               	bsf	___lbdiv@quotient,0
  3771     1779  1003               	clrc
  3772     177A                     L7:
  3773     177A  0CF6               	rrf	___lbdiv@divisor,f
  3774     177B  3001               	movlw	1
  3775     177C  02F8               	subwf	___lbdiv@counter,f
  3776     177D  1D03               	btfss	3,2
  3777     177E  2F70               	goto	l2099
  3778     177F                     l2109:
  3779     177F  0879               	movf	___lbdiv@quotient,w
  3780     1780  0008               	return
  3781     1781                     __end_of___lbdiv:
  3782                           
  3783                           	psect	text9
  3784     0C42                     __ptext9:	
  3785 ;; *************** function ___ftmul *****************
  3786 ;; Defined at:
  3787 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftmul.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  f1              3    3[BANK0 ] float 
  3790 ;;  f2              3    6[BANK0 ] float 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  3793 ;;  sign            1   17[BANK0 ] unsigned char 
  3794 ;;  cntr            1   16[BANK0 ] unsigned char 
  3795 ;;  exp             1   12[BANK0 ] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  3    3[BANK0 ] float 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 300/0
  3802 ;;		On exit  : 300/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       6       0       0       0
  3806 ;;      Locals:         0       6       0       0       0
  3807 ;;      Temps:          0       3       0       0       0
  3808 ;;      Totals:         0      15       0       0       0
  3809 ;;Total ram usage:       15 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 1
  3812 ;; This function calls:
  3813 ;;		___ftpack
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;;		_fround
  3817 ;;		_scale
  3818 ;;		_sprintf
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822     0C42                     ___ftmul:	
  3823                           ;psect for function ___ftmul
  3824                           
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3828     0C42  0823               	movf	___ftmul@f1,w
  3829     0C43  00A9               	movwf	??___ftmul
  3830     0C44  0824               	movf	___ftmul@f1+1,w
  3831     0C45  00AA               	movwf	??___ftmul+1
  3832     0C46  0825               	movf	___ftmul@f1+2,w
  3833     0C47  00AB               	movwf	??___ftmul+2
  3834     0C48  1003               	clrc
  3835     0C49  0D2A               	rlf	??___ftmul+1,w
  3836     0C4A  0D2B               	rlf	??___ftmul+2,w
  3837     0C4B  00AC               	movwf	___ftmul@exp
  3838     0C4C  082C               	movf	___ftmul@exp,w
  3839     0C4D  1D03               	btfss	3,2
  3840     0C4E  2C56               	goto	l2037
  3841     0C4F  3000               	movlw	0
  3842     0C50  00A3               	movwf	?___ftmul
  3843     0C51  3000               	movlw	0
  3844     0C52  00A4               	movwf	?___ftmul+1
  3845     0C53  3000               	movlw	0
  3846     0C54  00A5               	movwf	?___ftmul+2
  3847     0C55  0008               	return
  3848     0C56                     l2037:
  3849     0C56  0826               	movf	___ftmul@f2,w
  3850     0C57  00A9               	movwf	??___ftmul
  3851     0C58  0827               	movf	___ftmul@f2+1,w
  3852     0C59  00AA               	movwf	??___ftmul+1
  3853     0C5A  0828               	movf	___ftmul@f2+2,w
  3854     0C5B  00AB               	movwf	??___ftmul+2
  3855     0C5C  1003               	clrc
  3856     0C5D  0D2A               	rlf	??___ftmul+1,w
  3857     0C5E  0D2B               	rlf	??___ftmul+2,w
  3858     0C5F  00B1               	movwf	___ftmul@sign
  3859     0C60  0831               	movf	___ftmul@sign,w
  3860     0C61  1D03               	btfss	3,2
  3861     0C62  2C6A               	goto	l2043
  3862     0C63  3000               	movlw	0
  3863     0C64  00A3               	movwf	?___ftmul
  3864     0C65  3000               	movlw	0
  3865     0C66  00A4               	movwf	?___ftmul+1
  3866     0C67  3000               	movlw	0
  3867     0C68  00A5               	movwf	?___ftmul+2
  3868     0C69  0008               	return
  3869     0C6A                     l2043:
  3870     0C6A  0831               	movf	___ftmul@sign,w
  3871     0C6B  3E7B               	addlw	123
  3872     0C6C  00FF               	movwf	127
  3873     0C6D  087F               	movf	127,w
  3874     0C6E  07AC               	addwf	___ftmul@exp,f
  3875     0C6F  0825               	movf	___ftmul@f1+2,w
  3876     0C70  00B1               	movwf	___ftmul@sign
  3877     0C71  0828               	movf	___ftmul@f2+2,w
  3878     0C72  00FF               	movwf	127
  3879     0C73  087F               	movf	127,w
  3880     0C74  06B1               	xorwf	___ftmul@sign,f
  3881     0C75  3080               	movlw	128
  3882     0C76  00FF               	movwf	127
  3883     0C77  087F               	movf	127,w
  3884     0C78  05B1               	andwf	___ftmul@sign,f
  3885     0C79  17A4               	bsf	___ftmul@f1+1,7
  3886     0C7A  17A7               	bsf	___ftmul@f2+1,7
  3887     0C7B  30FF               	movlw	255
  3888     0C7C  05A6               	andwf	___ftmul@f2,f
  3889     0C7D  30FF               	movlw	255
  3890     0C7E  05A7               	andwf	___ftmul@f2+1,f
  3891     0C7F  3000               	movlw	0
  3892     0C80  05A8               	andwf	___ftmul@f2+2,f
  3893     0C81  3000               	movlw	0
  3894     0C82  00AD               	movwf	___ftmul@f3_as_product
  3895     0C83  3000               	movlw	0
  3896     0C84  00AE               	movwf	___ftmul@f3_as_product+1
  3897     0C85  3000               	movlw	0
  3898     0C86  00AF               	movwf	___ftmul@f3_as_product+2
  3899     0C87  3007               	movlw	7
  3900     0C88  00B0               	movwf	___ftmul@cntr
  3901     0C89                     l2061:
  3902     0C89  1C23               	btfss	___ftmul@f1,0
  3903     0C8A  2C99               	goto	l2065
  3904     0C8B  0826               	movf	___ftmul@f2,w
  3905     0C8C  07AD               	addwf	___ftmul@f3_as_product,f
  3906     0C8D  0827               	movf	___ftmul@f2+1,w
  3907     0C8E  1103               	clrz
  3908     0C8F  1803               	skipnc
  3909     0C90  0A27               	incf	___ftmul@f2+1,w
  3910     0C91  1D03               	btfss	3,2
  3911     0C92  07AE               	addwf	___ftmul@f3_as_product+1,f
  3912     0C93  0828               	movf	___ftmul@f2+2,w
  3913     0C94  1103               	clrz
  3914     0C95  1803               	skipnc
  3915     0C96  0A28               	incf	___ftmul@f2+2,w
  3916     0C97  1D03               	btfss	3,2
  3917     0C98  07AF               	addwf	___ftmul@f3_as_product+2,f
  3918     0C99                     l2065:
  3919     0C99  3001               	movlw	1
  3920     0C9A                     u2545:
  3921     0C9A  1003               	clrc
  3922     0C9B  0CA5               	rrf	___ftmul@f1+2,f
  3923     0C9C  0CA4               	rrf	___ftmul@f1+1,f
  3924     0C9D  0CA3               	rrf	___ftmul@f1,f
  3925     0C9E  3EFF               	addlw	-1
  3926     0C9F  1D03               	skipz
  3927     0CA0  2C9A               	goto	u2545
  3928     0CA1  3001               	movlw	1
  3929     0CA2                     u2555:
  3930     0CA2  1003               	clrc
  3931     0CA3  0DA6               	rlf	___ftmul@f2,f
  3932     0CA4  0DA7               	rlf	___ftmul@f2+1,f
  3933     0CA5  0DA8               	rlf	___ftmul@f2+2,f
  3934     0CA6  3EFF               	addlw	-1
  3935     0CA7  1D03               	skipz
  3936     0CA8  2CA2               	goto	u2555
  3937     0CA9  3001               	movlw	1
  3938     0CAA  02B0               	subwf	___ftmul@cntr,f
  3939     0CAB  1D03               	btfss	3,2
  3940     0CAC  2C89               	goto	l2061
  3941     0CAD  3009               	movlw	9
  3942     0CAE  00B0               	movwf	___ftmul@cntr
  3943     0CAF                     l2073:
  3944     0CAF  1C23               	btfss	___ftmul@f1,0
  3945     0CB0  2CBF               	goto	l2077
  3946     0CB1  0826               	movf	___ftmul@f2,w
  3947     0CB2  07AD               	addwf	___ftmul@f3_as_product,f
  3948     0CB3  0827               	movf	___ftmul@f2+1,w
  3949     0CB4  1103               	clrz
  3950     0CB5  1803               	skipnc
  3951     0CB6  0A27               	incf	___ftmul@f2+1,w
  3952     0CB7  1D03               	btfss	3,2
  3953     0CB8  07AE               	addwf	___ftmul@f3_as_product+1,f
  3954     0CB9  0828               	movf	___ftmul@f2+2,w
  3955     0CBA  1103               	clrz
  3956     0CBB  1803               	skipnc
  3957     0CBC  0A28               	incf	___ftmul@f2+2,w
  3958     0CBD  1D03               	btfss	3,2
  3959     0CBE  07AF               	addwf	___ftmul@f3_as_product+2,f
  3960     0CBF                     l2077:
  3961     0CBF  3001               	movlw	1
  3962     0CC0                     u2595:
  3963     0CC0  1003               	clrc
  3964     0CC1  0CA5               	rrf	___ftmul@f1+2,f
  3965     0CC2  0CA4               	rrf	___ftmul@f1+1,f
  3966     0CC3  0CA3               	rrf	___ftmul@f1,f
  3967     0CC4  3EFF               	addlw	-1
  3968     0CC5  1D03               	skipz
  3969     0CC6  2CC0               	goto	u2595
  3970     0CC7  3001               	movlw	1
  3971     0CC8                     u2605:
  3972     0CC8  1003               	clrc
  3973     0CC9  0CAF               	rrf	___ftmul@f3_as_product+2,f
  3974     0CCA  0CAE               	rrf	___ftmul@f3_as_product+1,f
  3975     0CCB  0CAD               	rrf	___ftmul@f3_as_product,f
  3976     0CCC  3EFF               	addlw	-1
  3977     0CCD  1D03               	skipz
  3978     0CCE  2CC8               	goto	u2605
  3979     0CCF  3001               	movlw	1
  3980     0CD0  02B0               	subwf	___ftmul@cntr,f
  3981     0CD1  1D03               	btfss	3,2
  3982     0CD2  2CAF               	goto	l2073
  3983     0CD3  082D               	movf	___ftmul@f3_as_product,w
  3984     0CD4  00F0               	movwf	___ftpack@arg
  3985     0CD5  082E               	movf	___ftmul@f3_as_product+1,w
  3986     0CD6  00F1               	movwf	___ftpack@arg+1
  3987     0CD7  082F               	movf	___ftmul@f3_as_product+2,w
  3988     0CD8  00F2               	movwf	___ftpack@arg+2
  3989     0CD9  082C               	movf	___ftmul@exp,w
  3990     0CDA  00F3               	movwf	___ftpack@exp
  3991     0CDB  0831               	movf	___ftmul@sign,w
  3992     0CDC  00F4               	movwf	___ftpack@sign
  3993     0CDD  120A  158A  22BE   	fcall	___ftpack
  3994     0CE0  0870               	movf	?___ftpack,w
  3995     0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3996     0CE2  00A3               	movwf	?___ftmul
  3997     0CE3  0871               	movf	?___ftpack+1,w
  3998     0CE4  00A4               	movwf	?___ftmul+1
  3999     0CE5  0872               	movf	?___ftpack+2,w
  4000     0CE6  00A5               	movwf	?___ftmul+2
  4001     0CE7  0008               	return
  4002     0CE8                     __end_of___ftmul:
  4003                           
  4004                           	psect	text10
  4005     16C1                     __ptext10:	
  4006 ;; *************** function ___bmul *****************
  4007 ;; Defined at:
  4008 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\Umul8.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  multiplier      1    wreg     unsigned char 
  4011 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  multiplier      1    2[BANK0 ] unsigned char 
  4014 ;;  product         1    1[BANK0 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      unsigned char 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, btemp+1
  4019 ;; Tracked objects:
  4020 ;;		On entry : 300/0
  4021 ;;		On exit  : 300/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       1       0       0       0
  4025 ;;      Locals:         0       2       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       3       0       0       0
  4028 ;;Total ram usage:        3 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_fround
  4034 ;;		_scale
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038     16C1                     ___bmul:	
  4039                           ;psect for function ___bmul
  4040                           
  4041                           
  4042                           ;incstack = 0
  4043                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  4044                           ;___bmul@multiplier stored from wreg
  4045     16C1  00A2               	movwf	___bmul@multiplier
  4046     16C2  01A1               	clrf	___bmul@product
  4047     16C3                     l1861:
  4048     16C3  1C22               	btfss	___bmul@multiplier,0
  4049     16C4  2EC9               	goto	l1865
  4050     16C5  0820               	movf	___bmul@multiplicand,w
  4051     16C6  00FF               	movwf	127
  4052     16C7  087F               	movf	127,w
  4053     16C8  07A1               	addwf	___bmul@product,f
  4054     16C9                     l1865:
  4055     16C9  1003               	clrc
  4056     16CA  0DA0               	rlf	___bmul@multiplicand,f
  4057     16CB  1003               	clrc
  4058     16CC  0CA2               	rrf	___bmul@multiplier,f
  4059     16CD  0822               	movf	___bmul@multiplier,w
  4060     16CE  1D03               	btfss	3,2
  4061     16CF  2EC3               	goto	l1861
  4062     16D0  0821               	movf	___bmul@product,w
  4063     16D1  0008               	return
  4064     16D2                     __end_of___bmul:
  4065                           
  4066                           	psect	text11
  4067     0BA1                     __ptext11:	
  4068 ;; *************** function __tdiv_to_l_ *****************
  4069 ;; Defined at:
  4070 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftdivl.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  f1              3    0[COMMON] float 
  4073 ;;  f2              3    3[COMMON] float 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  quot            4    0[BANK0 ] unsigned long 
  4076 ;;  exp1            1    5[BANK0 ] unsigned char 
  4077 ;;  cntr            1    4[BANK0 ] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  4    0[COMMON] unsigned long 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, btemp+1
  4082 ;; Tracked objects:
  4083 ;;		On entry : 300/0
  4084 ;;		On exit  : 300/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         6       0       0       0       0
  4088 ;;      Locals:         0       6       0       0       0
  4089 ;;      Temps:          3       0       0       0       0
  4090 ;;      Totals:         9       6       0       0       0
  4091 ;;Total ram usage:       15 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_sprintf
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100     0BA1                     __tdiv_to_l_:	
  4101                           ;psect for function __tdiv_to_l_
  4102                           
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  4106     0BA1  0870               	movf	__tdiv_to_l_@f1,w
  4107     0BA2  00F6               	movwf	??__tdiv_to_l_
  4108     0BA3  0871               	movf	__tdiv_to_l_@f1+1,w
  4109     0BA4  00F7               	movwf	??__tdiv_to_l_+1
  4110     0BA5  0872               	movf	__tdiv_to_l_@f1+2,w
  4111     0BA6  00F8               	movwf	??__tdiv_to_l_+2
  4112     0BA7  1003               	clrc
  4113     0BA8  0D77               	rlf	??__tdiv_to_l_+1,w
  4114     0BA9  0D78               	rlf	??__tdiv_to_l_+2,w
  4115     0BAA  00A5               	movwf	__tdiv_to_l_@exp1
  4116     0BAB  0825               	movf	__tdiv_to_l_@exp1,w
  4117     0BAC  1D03               	btfss	3,2
  4118     0BAD  2BB7               	goto	l2211
  4119     0BAE                     l2207:
  4120     0BAE  3000               	movlw	0
  4121     0BAF  00F3               	movwf	?__tdiv_to_l_+3
  4122     0BB0  3000               	movlw	0
  4123     0BB1  00F2               	movwf	?__tdiv_to_l_+2
  4124     0BB2  3000               	movlw	0
  4125     0BB3  00F1               	movwf	?__tdiv_to_l_+1
  4126     0BB4  3000               	movlw	0
  4127     0BB5  00F0               	movwf	?__tdiv_to_l_
  4128     0BB6  0008               	return
  4129     0BB7                     l2211:
  4130     0BB7  0873               	movf	__tdiv_to_l_@f2,w
  4131     0BB8  00F6               	movwf	??__tdiv_to_l_
  4132     0BB9  0874               	movf	__tdiv_to_l_@f2+1,w
  4133     0BBA  00F7               	movwf	??__tdiv_to_l_+1
  4134     0BBB  0875               	movf	__tdiv_to_l_@f2+2,w
  4135     0BBC  00F8               	movwf	??__tdiv_to_l_+2
  4136     0BBD  1003               	clrc
  4137     0BBE  0D77               	rlf	??__tdiv_to_l_+1,w
  4138     0BBF  0D78               	rlf	??__tdiv_to_l_+2,w
  4139     0BC0  00A4               	movwf	__tdiv_to_l_@cntr
  4140     0BC1  0824               	movf	__tdiv_to_l_@cntr,w
  4141     0BC2  1903               	btfsc	3,2
  4142     0BC3  2BAE               	goto	l2207
  4143     0BC4  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4144     0BC5  30FF               	movlw	255
  4145     0BC6  05F0               	andwf	__tdiv_to_l_@f1,f
  4146     0BC7  30FF               	movlw	255
  4147     0BC8  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4148     0BC9  3000               	movlw	0
  4149     0BCA  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4150     0BCB  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4151     0BCC  30FF               	movlw	255
  4152     0BCD  05F3               	andwf	__tdiv_to_l_@f2,f
  4153     0BCE  30FF               	movlw	255
  4154     0BCF  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4155     0BD0  3000               	movlw	0
  4156     0BD1  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4157     0BD2  3000               	movlw	0
  4158     0BD3  00A3               	movwf	__tdiv_to_l_@quot+3
  4159     0BD4  3000               	movlw	0
  4160     0BD5  00A2               	movwf	__tdiv_to_l_@quot+2
  4161     0BD6  3000               	movlw	0
  4162     0BD7  00A1               	movwf	__tdiv_to_l_@quot+1
  4163     0BD8  3000               	movlw	0
  4164     0BD9  00A0               	movwf	__tdiv_to_l_@quot
  4165     0BDA  307F               	movlw	127
  4166     0BDB  02A5               	subwf	__tdiv_to_l_@exp1,f
  4167     0BDC  3098               	movlw	152
  4168     0BDD  0724               	addwf	__tdiv_to_l_@cntr,w
  4169     0BDE  00F6               	movwf	??__tdiv_to_l_
  4170     0BDF  0876               	movf	??__tdiv_to_l_,w
  4171     0BE0  02A5               	subwf	__tdiv_to_l_@exp1,f
  4172     0BE1  3018               	movlw	24
  4173     0BE2  00A4               	movwf	__tdiv_to_l_@cntr
  4174     0BE3                     l2225:
  4175     0BE3  3001               	movlw	1
  4176     0BE4  00F6               	movwf	??__tdiv_to_l_
  4177     0BE5                     u2805:
  4178     0BE5  1003               	clrc
  4179     0BE6  0DA0               	rlf	__tdiv_to_l_@quot,f
  4180     0BE7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4181     0BE8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4182     0BE9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4183     0BEA  0BF6               	decfsz	??__tdiv_to_l_,f
  4184     0BEB  2BE5               	goto	u2805
  4185     0BEC  0875               	movf	__tdiv_to_l_@f2+2,w
  4186     0BED  0272               	subwf	__tdiv_to_l_@f1+2,w
  4187     0BEE  1D03               	skipz
  4188     0BEF  2BF6               	goto	u2815
  4189     0BF0  0874               	movf	__tdiv_to_l_@f2+1,w
  4190     0BF1  0271               	subwf	__tdiv_to_l_@f1+1,w
  4191     0BF2  1D03               	skipz
  4192     0BF3  2BF6               	goto	u2815
  4193     0BF4  0873               	movf	__tdiv_to_l_@f2,w
  4194     0BF5  0270               	subwf	__tdiv_to_l_@f1,w
  4195     0BF6                     u2815:
  4196     0BF6  1C03               	skipc
  4197     0BF7  2C03               	goto	l2233
  4198     0BF8  0873               	movf	__tdiv_to_l_@f2,w
  4199     0BF9  02F0               	subwf	__tdiv_to_l_@f1,f
  4200     0BFA  0874               	movf	__tdiv_to_l_@f2+1,w
  4201     0BFB  1C03               	skipc
  4202     0BFC  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4203     0BFD  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4204     0BFE  0875               	movf	__tdiv_to_l_@f2+2,w
  4205     0BFF  1C03               	skipc
  4206     0C00  0A75               	incf	__tdiv_to_l_@f2+2,w
  4207     0C01  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4208     0C02  1420               	bsf	__tdiv_to_l_@quot,0
  4209     0C03                     l2233:
  4210     0C03  3001               	movlw	1
  4211     0C04                     u2825:
  4212     0C04  1003               	clrc
  4213     0C05  0DF0               	rlf	__tdiv_to_l_@f1,f
  4214     0C06  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4215     0C07  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4216     0C08  3EFF               	addlw	-1
  4217     0C09  1D03               	skipz
  4218     0C0A  2C04               	goto	u2825
  4219     0C0B  3001               	movlw	1
  4220     0C0C  02A4               	subwf	__tdiv_to_l_@cntr,f
  4221     0C0D  1D03               	btfss	3,2
  4222     0C0E  2BE3               	goto	l2225
  4223     0C0F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4224     0C10  2C26               	goto	l2247
  4225     0C11  0825               	movf	__tdiv_to_l_@exp1,w
  4226     0C12  3A80               	xorlw	128
  4227     0C13  3E97               	addlw	151
  4228     0C14  1C03               	btfss	3,0
  4229     0C15  2BAE               	goto	l2207
  4230     0C16                     l2243:
  4231     0C16  3001               	movlw	1
  4232     0C17                     u2865:
  4233     0C17  1003               	clrc
  4234     0C18  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4235     0C19  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4236     0C1A  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4237     0C1B  0CA0               	rrf	__tdiv_to_l_@quot,f
  4238     0C1C  3EFF               	addlw	-1
  4239     0C1D  1D03               	skipz
  4240     0C1E  2C17               	goto	u2865
  4241     0C1F  3001               	movlw	1
  4242     0C20  00FF               	movwf	127
  4243     0C21  087F               	movf	127,w
  4244     0C22  07A5               	addwf	__tdiv_to_l_@exp1,f
  4245     0C23  1903               	btfsc	3,2
  4246     0C24  2C39               	goto	l2255
  4247     0C25  2C16               	goto	l2243
  4248     0C26                     l2247:
  4249     0C26  3018               	movlw	24
  4250     0C27  0225               	subwf	__tdiv_to_l_@exp1,w
  4251     0C28  1803               	btfsc	3,0
  4252     0C29  2BAE               	goto	l2207
  4253     0C2A                     l599:
  4254     0C2A  0825               	movf	__tdiv_to_l_@exp1,w
  4255     0C2B  1903               	btfsc	3,2
  4256     0C2C  2C39               	goto	l2255
  4257     0C2D  3001               	movlw	1
  4258     0C2E  00F6               	movwf	??__tdiv_to_l_
  4259     0C2F                     u2895:
  4260     0C2F  1003               	clrc
  4261     0C30  0DA0               	rlf	__tdiv_to_l_@quot,f
  4262     0C31  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4263     0C32  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4264     0C33  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4265     0C34  0BF6               	decfsz	??__tdiv_to_l_,f
  4266     0C35  2C2F               	goto	u2895
  4267     0C36  3001               	movlw	1
  4268     0C37  02A5               	subwf	__tdiv_to_l_@exp1,f
  4269     0C38  2C2A               	goto	l599
  4270     0C39                     l2255:
  4271     0C39  0823               	movf	__tdiv_to_l_@quot+3,w
  4272     0C3A  00F3               	movwf	?__tdiv_to_l_+3
  4273     0C3B  0822               	movf	__tdiv_to_l_@quot+2,w
  4274     0C3C  00F2               	movwf	?__tdiv_to_l_+2
  4275     0C3D  0821               	movf	__tdiv_to_l_@quot+1,w
  4276     0C3E  00F1               	movwf	?__tdiv_to_l_+1
  4277     0C3F  0820               	movf	__tdiv_to_l_@quot,w
  4278     0C40  00F0               	movwf	?__tdiv_to_l_
  4279     0C41  0008               	return
  4280     0C42                     __end_of__tdiv_to_l_:
  4281                           
  4282                           	psect	text12
  4283     0EEE                     __ptext12:	
  4284 ;; *************** function __div_to_l_ *****************
  4285 ;; Defined at:
  4286 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\fldivl.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  f1              3    0[COMMON] unsigned long 
  4289 ;;  f2              3    3[COMMON] unsigned long 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  quot            4    0[BANK0 ] unsigned long 
  4292 ;;  exp1            1    5[BANK0 ] unsigned char 
  4293 ;;  cntr            1    4[BANK0 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  4    0[COMMON] unsigned long 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 300/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         6       0       0       0       0
  4304 ;;      Locals:         0       6       0       0       0
  4305 ;;      Temps:          8       0       0       0       0
  4306 ;;      Totals:        14       6       0       0       0
  4307 ;;Total ram usage:       20 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_sprintf
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     0EEE                     __div_to_l_:	
  4317                           ;psect for function __div_to_l_
  4318                           
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0+btemp+1]
  4322     0EEE  3070               	movlw	low (__div_to_l_@f1| 0)
  4323     0EEF  0084               	movwf	4
  4324     0EF0  0800               	movf	0,w
  4325     0EF1  00F6               	movwf	??__div_to_l_
  4326     0EF2  0A84               	incf	4,f
  4327     0EF3  0800               	movf	0,w
  4328     0EF4  00F7               	movwf	??__div_to_l_+1
  4329     0EF5  0A84               	incf	4,f
  4330     0EF6  0800               	movf	0,w
  4331     0EF7  00F8               	movwf	??__div_to_l_+2
  4332     0EF8  0A84               	incf	4,f
  4333     0EF9  0800               	movf	0,w
  4334     0EFA  00F9               	movwf	??__div_to_l_+3
  4335     0EFB  1003               	clrc
  4336     0EFC  0D78               	rlf	??__div_to_l_+2,w
  4337     0EFD  0D79               	rlf	??__div_to_l_+3,w
  4338     0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  4339     0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  4340     0F00  00A5               	movwf	__div_to_l_@exp1
  4341     0F01  0825               	movf	__div_to_l_@exp1,w
  4342     0F02  1D03               	btfss	3,2
  4343     0F03  2F0D               	goto	l2265
  4344     0F04                     l2261:
  4345     0F04  3000               	movlw	0
  4346     0F05  00F3               	movwf	?__div_to_l_+3
  4347     0F06  3000               	movlw	0
  4348     0F07  00F2               	movwf	?__div_to_l_+2
  4349     0F08  3000               	movlw	0
  4350     0F09  00F1               	movwf	?__div_to_l_+1
  4351     0F0A  3000               	movlw	0
  4352     0F0B  00F0               	movwf	?__div_to_l_
  4353     0F0C  0008               	return
  4354     0F0D                     l2265:
  4355     0F0D  3073               	movlw	low (__div_to_l_@f2| 0)
  4356     0F0E  0084               	movwf	4
  4357     0F0F  0800               	movf	0,w
  4358     0F10  00F6               	movwf	??__div_to_l_
  4359     0F11  0A84               	incf	4,f
  4360     0F12  0800               	movf	0,w
  4361     0F13  00F7               	movwf	??__div_to_l_+1
  4362     0F14  0A84               	incf	4,f
  4363     0F15  0800               	movf	0,w
  4364     0F16  00F8               	movwf	??__div_to_l_+2
  4365     0F17  0A84               	incf	4,f
  4366     0F18  0800               	movf	0,w
  4367     0F19  00F9               	movwf	??__div_to_l_+3
  4368     0F1A  1003               	clrc
  4369     0F1B  0D78               	rlf	??__div_to_l_+2,w
  4370     0F1C  0D79               	rlf	??__div_to_l_+3,w
  4371     0F1D  00A4               	movwf	__div_to_l_@cntr
  4372     0F1E  0824               	movf	__div_to_l_@cntr,w
  4373     0F1F  1903               	btfsc	3,2
  4374     0F20  2F04               	goto	l2261
  4375     0F21  3070               	movlw	low (__div_to_l_@f1| 0)
  4376     0F22  0084               	movwf	4
  4377     0F23  3000               	movlw	0
  4378     0F24  0480               	iorwf	0,f
  4379     0F25  0A84               	incf	4,f
  4380     0F26  3000               	movlw	0
  4381     0F27  0480               	iorwf	0,f
  4382     0F28  0A84               	incf	4,f
  4383     0F29  3080               	movlw	128
  4384     0F2A  0480               	iorwf	0,f
  4385     0F2B  0A84               	incf	4,f
  4386     0F2C  3000               	movlw	0
  4387     0F2D  0480               	iorwf	0,f
  4388     0F2E  3070               	movlw	low (__div_to_l_@f1| 0)
  4389     0F2F  0084               	movwf	4
  4390     0F30  30FF               	movlw	255
  4391     0F31  0580               	andwf	0,f
  4392     0F32  0A84               	incf	4,f
  4393     0F33  30FF               	movlw	255
  4394     0F34  0580               	andwf	0,f
  4395     0F35  0A84               	incf	4,f
  4396     0F36  30FF               	movlw	255
  4397     0F37  0580               	andwf	0,f
  4398     0F38  0A84               	incf	4,f
  4399     0F39  3000               	movlw	0
  4400     0F3A  0580               	andwf	0,f
  4401     0F3B  3073               	movlw	low (__div_to_l_@f2| 0)
  4402     0F3C  0084               	movwf	4
  4403     0F3D  3000               	movlw	0
  4404     0F3E  0480               	iorwf	0,f
  4405     0F3F  0A84               	incf	4,f
  4406     0F40  3000               	movlw	0
  4407     0F41  0480               	iorwf	0,f
  4408     0F42  0A84               	incf	4,f
  4409     0F43  3080               	movlw	128
  4410     0F44  0480               	iorwf	0,f
  4411     0F45  0A84               	incf	4,f
  4412     0F46  3000               	movlw	0
  4413     0F47  0480               	iorwf	0,f
  4414     0F48  3073               	movlw	low (__div_to_l_@f2| 0)
  4415     0F49  0084               	movwf	4
  4416     0F4A  30FF               	movlw	255
  4417     0F4B  0580               	andwf	0,f
  4418     0F4C  0A84               	incf	4,f
  4419     0F4D  30FF               	movlw	255
  4420     0F4E  0580               	andwf	0,f
  4421     0F4F  0A84               	incf	4,f
  4422     0F50  30FF               	movlw	255
  4423     0F51  0580               	andwf	0,f
  4424     0F52  0A84               	incf	4,f
  4425     0F53  3000               	movlw	0
  4426     0F54  0580               	andwf	0,f
  4427     0F55  3000               	movlw	0
  4428     0F56  00A3               	movwf	__div_to_l_@quot+3
  4429     0F57  3000               	movlw	0
  4430     0F58  00A2               	movwf	__div_to_l_@quot+2
  4431     0F59  3000               	movlw	0
  4432     0F5A  00A1               	movwf	__div_to_l_@quot+1
  4433     0F5B  3000               	movlw	0
  4434     0F5C  00A0               	movwf	__div_to_l_@quot
  4435     0F5D  307F               	movlw	127
  4436     0F5E  02A5               	subwf	__div_to_l_@exp1,f
  4437     0F5F  30A0               	movlw	160
  4438     0F60  0724               	addwf	__div_to_l_@cntr,w
  4439     0F61  00F6               	movwf	??__div_to_l_
  4440     0F62  0876               	movf	??__div_to_l_,w
  4441     0F63  02A5               	subwf	__div_to_l_@exp1,f
  4442     0F64  3020               	movlw	32
  4443     0F65  00A4               	movwf	__div_to_l_@cntr
  4444     0F66                     l2281:
  4445     0F66  3001               	movlw	1
  4446     0F67  00F6               	movwf	??__div_to_l_
  4447     0F68                     u2935:
  4448     0F68  1003               	clrc
  4449     0F69  0DA0               	rlf	__div_to_l_@quot,f
  4450     0F6A  0DA1               	rlf	__div_to_l_@quot+1,f
  4451     0F6B  0DA2               	rlf	__div_to_l_@quot+2,f
  4452     0F6C  0DA3               	rlf	__div_to_l_@quot+3,f
  4453     0F6D  0BF6               	decfsz	??__div_to_l_,f
  4454     0F6E  2F68               	goto	u2935
  4455     0F6F  3073               	movlw	low (__div_to_l_@f2| 0)
  4456     0F70  0084               	movwf	4
  4457     0F71  0800               	movf	0,w
  4458     0F72  00F6               	movwf	??__div_to_l_
  4459     0F73  0A84               	incf	4,f
  4460     0F74  0800               	movf	0,w
  4461     0F75  00F7               	movwf	??__div_to_l_+1
  4462     0F76  0A84               	incf	4,f
  4463     0F77  0800               	movf	0,w
  4464     0F78  00F8               	movwf	??__div_to_l_+2
  4465     0F79  0A84               	incf	4,f
  4466     0F7A  0800               	movf	0,w
  4467     0F7B  00F9               	movwf	??__div_to_l_+3
  4468     0F7C  3070               	movlw	low (__div_to_l_@f1| 0)
  4469     0F7D  0084               	movwf	4
  4470     0F7E  0800               	movf	0,w
  4471     0F7F  00FA               	movwf	??__div_to_l_+4
  4472     0F80  0A84               	incf	4,f
  4473     0F81  0800               	movf	0,w
  4474     0F82  00FB               	movwf	??__div_to_l_+5
  4475     0F83  0A84               	incf	4,f
  4476     0F84  0800               	movf	0,w
  4477     0F85  00FC               	movwf	??__div_to_l_+6
  4478     0F86  0A84               	incf	4,f
  4479     0F87  0800               	movf	0,w
  4480     0F88  00FD               	movwf	??__div_to_l_+7
  4481     0F89  0879               	movf	??__div_to_l_+3,w
  4482     0F8A  027D               	subwf	??__div_to_l_+7,w
  4483     0F8B  1D03               	skipz
  4484     0F8C  2F97               	goto	u2945
  4485     0F8D  0878               	movf	??__div_to_l_+2,w
  4486     0F8E  027C               	subwf	??__div_to_l_+6,w
  4487     0F8F  1D03               	skipz
  4488     0F90  2F97               	goto	u2945
  4489     0F91  0877               	movf	??__div_to_l_+1,w
  4490     0F92  027B               	subwf	??__div_to_l_+5,w
  4491     0F93  1D03               	skipz
  4492     0F94  2F97               	goto	u2945
  4493     0F95  0876               	movf	??__div_to_l_,w
  4494     0F96  027A               	subwf	??__div_to_l_+4,w
  4495     0F97                     u2945:
  4496     0F97  1C03               	skipc
  4497     0F98  2FBC               	goto	l512
  4498     0F99  3073               	movlw	low (__div_to_l_@f2| 0)
  4499     0F9A  0084               	movwf	4
  4500     0F9B  0800               	movf	0,w
  4501     0F9C  00F6               	movwf	??__div_to_l_
  4502     0F9D  0A84               	incf	4,f
  4503     0F9E  0800               	movf	0,w
  4504     0F9F  00F7               	movwf	??__div_to_l_+1
  4505     0FA0  0A84               	incf	4,f
  4506     0FA1  0800               	movf	0,w
  4507     0FA2  00F8               	movwf	??__div_to_l_+2
  4508     0FA3  0A84               	incf	4,f
  4509     0FA4  0800               	movf	0,w
  4510     0FA5  00F9               	movwf	??__div_to_l_+3
  4511     0FA6  3070               	movlw	low (__div_to_l_@f1| 0)
  4512     0FA7  0084               	movwf	4
  4513     0FA8  0876               	movf	??__div_to_l_,w
  4514     0FA9  0280               	subwf	0,f
  4515     0FAA  0A84               	incf	4,f
  4516     0FAB  0877               	movf	??__div_to_l_+1,w
  4517     0FAC  1C03               	skipc
  4518     0FAD  0F77               	incfsz	??__div_to_l_+1,w
  4519     0FAE  0280               	subwf	0,f
  4520     0FAF  0A84               	incf	4,f
  4521     0FB0  0878               	movf	??__div_to_l_+2,w
  4522     0FB1  1C03               	skipc
  4523     0FB2  0F78               	incfsz	??__div_to_l_+2,w
  4524     0FB3  0280               	subwf	0,f
  4525     0FB4  0A84               	incf	4,f
  4526     0FB5  0879               	movf	??__div_to_l_+3,w
  4527     0FB6  1C03               	skipc
  4528     0FB7  0A79               	incf	??__div_to_l_+3,w
  4529     0FB8  0280               	subwf	0,f
  4530     0FB9  3003               	movlw	3
  4531     0FBA  0284               	subwf	4,f
  4532     0FBB  1420               	bsf	__div_to_l_@quot,0
  4533     0FBC                     l512:
  4534     0FBC  3070               	movlw	low (__div_to_l_@f1| 0)
  4535     0FBD  0084               	movwf	4
  4536     0FBE  1003               	clrc
  4537     0FBF  0D80               	rlf	0,f
  4538     0FC0  0A84               	incf	4,f
  4539     0FC1  0D80               	rlf	0,f
  4540     0FC2  0A84               	incf	4,f
  4541     0FC3  0D80               	rlf	0,f
  4542     0FC4  0A84               	incf	4,f
  4543     0FC5  0D80               	rlf	0,f
  4544     0FC6  0384               	decf	4,f
  4545     0FC7  0384               	decf	4,f
  4546     0FC8  0384               	decf	4,f
  4547     0FC9  3001               	movlw	1
  4548     0FCA  02A4               	subwf	__div_to_l_@cntr,f
  4549     0FCB  1D03               	btfss	3,2
  4550     0FCC  2F66               	goto	l2281
  4551     0FCD  1FA5               	btfss	__div_to_l_@exp1,7
  4552     0FCE  2FE4               	goto	l2301
  4553     0FCF  0825               	movf	__div_to_l_@exp1,w
  4554     0FD0  3A80               	xorlw	128
  4555     0FD1  3E9F               	addlw	159
  4556     0FD2  1C03               	btfss	3,0
  4557     0FD3  2F04               	goto	l2261
  4558     0FD4                     l2297:
  4559     0FD4  3001               	movlw	1
  4560     0FD5                     u2985:
  4561     0FD5  1003               	clrc
  4562     0FD6  0CA3               	rrf	__div_to_l_@quot+3,f
  4563     0FD7  0CA2               	rrf	__div_to_l_@quot+2,f
  4564     0FD8  0CA1               	rrf	__div_to_l_@quot+1,f
  4565     0FD9  0CA0               	rrf	__div_to_l_@quot,f
  4566     0FDA  3EFF               	addlw	-1
  4567     0FDB  1D03               	skipz
  4568     0FDC  2FD5               	goto	u2985
  4569     0FDD  3001               	movlw	1
  4570     0FDE  00FF               	movwf	127
  4571     0FDF  087F               	movf	127,w
  4572     0FE0  07A5               	addwf	__div_to_l_@exp1,f
  4573     0FE1  1903               	btfsc	3,2
  4574     0FE2  2FF7               	goto	l2309
  4575     0FE3  2FD4               	goto	l2297
  4576     0FE4                     l2301:
  4577     0FE4  3020               	movlw	32
  4578     0FE5  0225               	subwf	__div_to_l_@exp1,w
  4579     0FE6  1803               	btfsc	3,0
  4580     0FE7  2F04               	goto	l2261
  4581     0FE8                     l520:
  4582     0FE8  0825               	movf	__div_to_l_@exp1,w
  4583     0FE9  1903               	btfsc	3,2
  4584     0FEA  2FF7               	goto	l2309
  4585     0FEB  3001               	movlw	1
  4586     0FEC  00F6               	movwf	??__div_to_l_
  4587     0FED                     u3015:
  4588     0FED  1003               	clrc
  4589     0FEE  0DA0               	rlf	__div_to_l_@quot,f
  4590     0FEF  0DA1               	rlf	__div_to_l_@quot+1,f
  4591     0FF0  0DA2               	rlf	__div_to_l_@quot+2,f
  4592     0FF1  0DA3               	rlf	__div_to_l_@quot+3,f
  4593     0FF2  0BF6               	decfsz	??__div_to_l_,f
  4594     0FF3  2FED               	goto	u3015
  4595     0FF4  3001               	movlw	1
  4596     0FF5  02A5               	subwf	__div_to_l_@exp1,f
  4597     0FF6  2FE8               	goto	l520
  4598     0FF7                     l2309:
  4599     0FF7  0823               	movf	__div_to_l_@quot+3,w
  4600     0FF8  00F3               	movwf	?__div_to_l_+3
  4601     0FF9  0822               	movf	__div_to_l_@quot+2,w
  4602     0FFA  00F2               	movwf	?__div_to_l_+2
  4603     0FFB  0821               	movf	__div_to_l_@quot+1,w
  4604     0FFC  00F1               	movwf	?__div_to_l_+1
  4605     0FFD  0820               	movf	__div_to_l_@quot,w
  4606     0FFE  00F0               	movwf	?__div_to_l_
  4607     0FFF  0008               	return
  4608     1000                     __end_of__div_to_l_:
  4609                           
  4610                           	psect	text13
  4611     173F                     __ptext13:	
  4612 ;; *************** function ___wmul *****************
  4613 ;; Defined at:
  4614 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\Umul16.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  multiplier      2    0[COMMON] unsigned int 
  4617 ;;  multiplicand    2    2[COMMON] unsigned int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  product         2    4[COMMON] unsigned int 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2    0[COMMON] unsigned int 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 300/0
  4626 ;;		On exit  : 300/0
  4627 ;;		Unchanged: 300/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4629 ;;      Params:         4       0       0       0       0
  4630 ;;      Locals:         2       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0
  4632 ;;      Totals:         6       0       0       0       0
  4633 ;;Total ram usage:        6 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_sprintf
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642     173F                     ___wmul:	
  4643                           ;psect for function ___wmul
  4644                           
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4648     173F  01F4               	clrf	___wmul@product
  4649     1740  01F5               	clrf	___wmul@product+1
  4650     1741                     l2315:
  4651     1741  1C70               	btfss	___wmul@multiplier,0
  4652     1742  2F49               	goto	l303
  4653     1743  0872               	movf	___wmul@multiplicand,w
  4654     1744  07F4               	addwf	___wmul@product,f
  4655     1745  1803               	skipnc
  4656     1746  0AF5               	incf	___wmul@product+1,f
  4657     1747  0873               	movf	___wmul@multiplicand+1,w
  4658     1748  07F5               	addwf	___wmul@product+1,f
  4659     1749                     l303:
  4660     1749  3001               	movlw	1
  4661     174A                     u3045:
  4662     174A  1003               	clrc
  4663     174B  0DF2               	rlf	___wmul@multiplicand,f
  4664     174C  0DF3               	rlf	___wmul@multiplicand+1,f
  4665     174D  3EFF               	addlw	-1
  4666     174E  1D03               	skipz
  4667     174F  2F4A               	goto	u3045
  4668     1750  3001               	movlw	1
  4669     1751                     u3055:
  4670     1751  1003               	clrc
  4671     1752  0CF1               	rrf	___wmul@multiplier+1,f
  4672     1753  0CF0               	rrf	___wmul@multiplier,f
  4673     1754  3EFF               	addlw	-1
  4674     1755  1D03               	skipz
  4675     1756  2F51               	goto	u3055
  4676     1757  0870               	movf	___wmul@multiplier,w
  4677     1758  0471               	iorwf	___wmul@multiplier+1,w
  4678     1759  1D03               	btfss	3,2
  4679     175A  2F41               	goto	l2315
  4680     175B  0875               	movf	___wmul@product+1,w
  4681     175C  00F1               	movwf	?___wmul+1
  4682     175D  0874               	movf	___wmul@product,w
  4683     175E  00F0               	movwf	?___wmul
  4684     175F  0008               	return
  4685     1760                     __end_of___wmul:
  4686                           
  4687                           	psect	text14
  4688     1781                     __ptext14:	
  4689 ;; *************** function ___lltoft *****************
  4690 ;; Defined at:
  4691 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lltoft.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  c               4    8[COMMON] unsigned long 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  exp             1   12[COMMON] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  3    8[COMMON] float 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 300/0
  4702 ;;		On exit  : 200/0
  4703 ;;		Unchanged: 200/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4705 ;;      Params:         4       0       0       0       0
  4706 ;;      Locals:         1       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0
  4708 ;;      Totals:         5       0       0       0       0
  4709 ;;Total ram usage:        5 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 1
  4712 ;; This function calls:
  4713 ;;		___ftpack
  4714 ;; This function is called by:
  4715 ;;		_sprintf
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719     1781                     ___lltoft:	
  4720                           ;psect for function ___lltoft
  4721                           
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in ___lltoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4725     1781  308E               	movlw	142
  4726     1782  00FC               	movwf	___lltoft@exp
  4727     1783                     l2461:
  4728     1783  30FF               	movlw	255
  4729     1784  057B               	andwf	___lltoft@c+3,w
  4730     1785  1903               	btfsc	3,2
  4731     1786  2F95               	goto	l2463
  4732     1787  3001               	movlw	1
  4733     1788                     u3355:
  4734     1788  1003               	clrc
  4735     1789  0CFB               	rrf	___lltoft@c+3,f
  4736     178A  0CFA               	rrf	___lltoft@c+2,f
  4737     178B  0CF9               	rrf	___lltoft@c+1,f
  4738     178C  0CF8               	rrf	___lltoft@c,f
  4739     178D  3EFF               	addlw	-1
  4740     178E  1D03               	skipz
  4741     178F  2F88               	goto	u3355
  4742     1790  3001               	movlw	1
  4743     1791  00FF               	movwf	127
  4744     1792  087F               	movf	127,w
  4745     1793  07FC               	addwf	___lltoft@exp,f
  4746     1794  2F83               	goto	l2461
  4747     1795                     l2463:
  4748     1795  0878               	movf	___lltoft@c,w
  4749     1796  00F0               	movwf	___ftpack@arg
  4750     1797  0879               	movf	___lltoft@c+1,w
  4751     1798  00F1               	movwf	___ftpack@arg+1
  4752     1799  087A               	movf	___lltoft@c+2,w
  4753     179A  00F2               	movwf	___ftpack@arg+2
  4754     179B  087C               	movf	___lltoft@exp,w
  4755     179C  00F3               	movwf	___ftpack@exp
  4756     179D  01F4               	clrf	___ftpack@sign
  4757     179E  120A  158A  22BE   	fcall	___ftpack
  4758     17A1  0870               	movf	?___ftpack,w
  4759     17A2  00F8               	movwf	?___lltoft
  4760     17A3  0871               	movf	?___ftpack+1,w
  4761     17A4  00F9               	movwf	?___lltoft+1
  4762     17A5  0872               	movf	?___ftpack+2,w
  4763     17A6  00FA               	movwf	?___lltoft+2
  4764     17A7  0008               	return
  4765     17A8                     __end_of___lltoft:
  4766                           
  4767                           	psect	text15
  4768     0965                     __ptext15:	
  4769 ;; *************** function ___llmod *****************
  4770 ;; Defined at:
  4771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\llmod.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  divisor         4    0[COMMON] unsigned long 
  4774 ;;  dividend        4    4[COMMON] unsigned long 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  counter         1    9[COMMON] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  4    0[COMMON] unsigned long 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0, btemp+1
  4781 ;; Tracked objects:
  4782 ;;		On entry : 300/0
  4783 ;;		On exit  : 300/0
  4784 ;;		Unchanged: 300/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         8       0       0       0       0
  4787 ;;      Locals:         1       0       0       0       0
  4788 ;;      Temps:          1       0       0       0       0
  4789 ;;      Totals:        10       0       0       0       0
  4790 ;;Total ram usage:       10 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_sprintf
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799     0965                     ___llmod:	
  4800                           ;psect for function ___llmod
  4801                           
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  4805     0965  0873               	movf	___llmod@divisor+3,w
  4806     0966  0472               	iorwf	___llmod@divisor+2,w
  4807     0967  0471               	iorwf	___llmod@divisor+1,w
  4808     0968  0470               	iorwf	___llmod@divisor,w
  4809     0969  1903               	skipnz
  4810     096A  29A8               	goto	l2451
  4811     096B  01F9               	clrf	___llmod@counter
  4812     096C  0AF9               	incf	___llmod@counter,f
  4813     096D                     l2441:
  4814     096D  1BF3               	btfsc	___llmod@divisor+3,7
  4815     096E  297D               	goto	l2443
  4816     096F  3001               	movlw	1
  4817     0970  00F8               	movwf	??___llmod
  4818     0971                     u3305:
  4819     0971  1003               	clrc
  4820     0972  0DF0               	rlf	___llmod@divisor,f
  4821     0973  0DF1               	rlf	___llmod@divisor+1,f
  4822     0974  0DF2               	rlf	___llmod@divisor+2,f
  4823     0975  0DF3               	rlf	___llmod@divisor+3,f
  4824     0976  0BF8               	decfsz	??___llmod,f
  4825     0977  2971               	goto	u3305
  4826     0978  3001               	movlw	1
  4827     0979  00FF               	movwf	127
  4828     097A  087F               	movf	127,w
  4829     097B  07F9               	addwf	___llmod@counter,f
  4830     097C  296D               	goto	l2441
  4831     097D                     l2443:
  4832     097D  0873               	movf	___llmod@divisor+3,w
  4833     097E  0277               	subwf	___llmod@dividend+3,w
  4834     097F  1D03               	skipz
  4835     0980  298B               	goto	u3325
  4836     0981  0872               	movf	___llmod@divisor+2,w
  4837     0982  0276               	subwf	___llmod@dividend+2,w
  4838     0983  1D03               	skipz
  4839     0984  298B               	goto	u3325
  4840     0985  0871               	movf	___llmod@divisor+1,w
  4841     0986  0275               	subwf	___llmod@dividend+1,w
  4842     0987  1D03               	skipz
  4843     0988  298B               	goto	u3325
  4844     0989  0870               	movf	___llmod@divisor,w
  4845     098A  0274               	subwf	___llmod@dividend,w
  4846     098B                     u3325:
  4847     098B  1C03               	skipc
  4848     098C  299B               	goto	l2447
  4849     098D  0870               	movf	___llmod@divisor,w
  4850     098E  02F4               	subwf	___llmod@dividend,f
  4851     098F  0871               	movf	___llmod@divisor+1,w
  4852     0990  1C03               	skipc
  4853     0991  0F71               	incfsz	___llmod@divisor+1,w
  4854     0992  02F5               	subwf	___llmod@dividend+1,f
  4855     0993  0872               	movf	___llmod@divisor+2,w
  4856     0994  1C03               	skipc
  4857     0995  0F72               	incfsz	___llmod@divisor+2,w
  4858     0996  02F6               	subwf	___llmod@dividend+2,f
  4859     0997  0873               	movf	___llmod@divisor+3,w
  4860     0998  1C03               	skipc
  4861     0999  0F73               	incfsz	___llmod@divisor+3,w
  4862     099A  02F7               	subwf	___llmod@dividend+3,f
  4863     099B                     l2447:
  4864     099B  3001               	movlw	1
  4865     099C                     u3335:
  4866     099C  1003               	clrc
  4867     099D  0CF3               	rrf	___llmod@divisor+3,f
  4868     099E  0CF2               	rrf	___llmod@divisor+2,f
  4869     099F  0CF1               	rrf	___llmod@divisor+1,f
  4870     09A0  0CF0               	rrf	___llmod@divisor,f
  4871     09A1  3EFF               	addlw	-1
  4872     09A2  1D03               	skipz
  4873     09A3  299C               	goto	u3335
  4874     09A4  3001               	movlw	1
  4875     09A5  02F9               	subwf	___llmod@counter,f
  4876     09A6  1D03               	btfss	3,2
  4877     09A7  297D               	goto	l2443
  4878     09A8                     l2451:
  4879     09A8  0877               	movf	___llmod@dividend+3,w
  4880     09A9  00F3               	movwf	?___llmod+3
  4881     09AA  0876               	movf	___llmod@dividend+2,w
  4882     09AB  00F2               	movwf	?___llmod+2
  4883     09AC  0875               	movf	___llmod@dividend+1,w
  4884     09AD  00F1               	movwf	?___llmod+1
  4885     09AE  0874               	movf	___llmod@dividend,w
  4886     09AF  00F0               	movwf	?___llmod
  4887     09B0  0008               	return
  4888     09B1                     __end_of___llmod:
  4889                           
  4890                           	psect	text16
  4891     0A60                     __ptext16:	
  4892 ;; *************** function ___lldiv *****************
  4893 ;; Defined at:
  4894 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\__lldiv.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  divisor         4    0[COMMON] unsigned long 
  4897 ;;  dividend        4    4[COMMON] unsigned long 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  quotient        4    9[COMMON] unsigned long 
  4900 ;;  counter         1   13[COMMON] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  4    0[COMMON] unsigned long 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0, btemp+1
  4905 ;; Tracked objects:
  4906 ;;		On entry : 300/0
  4907 ;;		On exit  : 300/0
  4908 ;;		Unchanged: 300/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4910 ;;      Params:         8       0       0       0       0
  4911 ;;      Locals:         5       0       0       0       0
  4912 ;;      Temps:          1       0       0       0       0
  4913 ;;      Totals:        14       0       0       0       0
  4914 ;;Total ram usage:       14 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_sprintf
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923     0A60                     ___lldiv:	
  4924                           ;psect for function ___lldiv
  4925                           
  4926                           
  4927                           ;incstack = 0
  4928                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  4929     0A60  3000               	movlw	0
  4930     0A61  00FC               	movwf	___lldiv@quotient+3
  4931     0A62  3000               	movlw	0
  4932     0A63  00FB               	movwf	___lldiv@quotient+2
  4933     0A64  3000               	movlw	0
  4934     0A65  00FA               	movwf	___lldiv@quotient+1
  4935     0A66  3000               	movlw	0
  4936     0A67  00F9               	movwf	___lldiv@quotient
  4937     0A68  0873               	movf	___lldiv@divisor+3,w
  4938     0A69  0472               	iorwf	___lldiv@divisor+2,w
  4939     0A6A  0471               	iorwf	___lldiv@divisor+1,w
  4940     0A6B  0470               	iorwf	___lldiv@divisor,w
  4941     0A6C  1903               	skipnz
  4942     0A6D  2AB5               	goto	l2349
  4943     0A6E  01FD               	clrf	___lldiv@counter
  4944     0A6F  0AFD               	incf	___lldiv@counter,f
  4945     0A70                     l2335:
  4946     0A70  1BF3               	btfsc	___lldiv@divisor+3,7
  4947     0A71  2A80               	goto	l2337
  4948     0A72  3001               	movlw	1
  4949     0A73  00F8               	movwf	??___lldiv
  4950     0A74                     u3085:
  4951     0A74  1003               	clrc
  4952     0A75  0DF0               	rlf	___lldiv@divisor,f
  4953     0A76  0DF1               	rlf	___lldiv@divisor+1,f
  4954     0A77  0DF2               	rlf	___lldiv@divisor+2,f
  4955     0A78  0DF3               	rlf	___lldiv@divisor+3,f
  4956     0A79  0BF8               	decfsz	??___lldiv,f
  4957     0A7A  2A74               	goto	u3085
  4958     0A7B  3001               	movlw	1
  4959     0A7C  00FF               	movwf	127
  4960     0A7D  087F               	movf	127,w
  4961     0A7E  07FD               	addwf	___lldiv@counter,f
  4962     0A7F  2A70               	goto	l2335
  4963     0A80                     l2337:
  4964     0A80  3001               	movlw	1
  4965     0A81  00F8               	movwf	??___lldiv
  4966     0A82                     u3105:
  4967     0A82  1003               	clrc
  4968     0A83  0DF9               	rlf	___lldiv@quotient,f
  4969     0A84  0DFA               	rlf	___lldiv@quotient+1,f
  4970     0A85  0DFB               	rlf	___lldiv@quotient+2,f
  4971     0A86  0DFC               	rlf	___lldiv@quotient+3,f
  4972     0A87  0BF8               	decfsz	??___lldiv,f
  4973     0A88  2A82               	goto	u3105
  4974     0A89  0873               	movf	___lldiv@divisor+3,w
  4975     0A8A  0277               	subwf	___lldiv@dividend+3,w
  4976     0A8B  1D03               	skipz
  4977     0A8C  2A97               	goto	u3115
  4978     0A8D  0872               	movf	___lldiv@divisor+2,w
  4979     0A8E  0276               	subwf	___lldiv@dividend+2,w
  4980     0A8F  1D03               	skipz
  4981     0A90  2A97               	goto	u3115
  4982     0A91  0871               	movf	___lldiv@divisor+1,w
  4983     0A92  0275               	subwf	___lldiv@dividend+1,w
  4984     0A93  1D03               	skipz
  4985     0A94  2A97               	goto	u3115
  4986     0A95  0870               	movf	___lldiv@divisor,w
  4987     0A96  0274               	subwf	___lldiv@dividend,w
  4988     0A97                     u3115:
  4989     0A97  1C03               	skipc
  4990     0A98  2AA8               	goto	l2345
  4991     0A99  0870               	movf	___lldiv@divisor,w
  4992     0A9A  02F4               	subwf	___lldiv@dividend,f
  4993     0A9B  0871               	movf	___lldiv@divisor+1,w
  4994     0A9C  1C03               	skipc
  4995     0A9D  0F71               	incfsz	___lldiv@divisor+1,w
  4996     0A9E  02F5               	subwf	___lldiv@dividend+1,f
  4997     0A9F  0872               	movf	___lldiv@divisor+2,w
  4998     0AA0  1C03               	skipc
  4999     0AA1  0F72               	incfsz	___lldiv@divisor+2,w
  5000     0AA2  02F6               	subwf	___lldiv@dividend+2,f
  5001     0AA3  0873               	movf	___lldiv@divisor+3,w
  5002     0AA4  1C03               	skipc
  5003     0AA5  0F73               	incfsz	___lldiv@divisor+3,w
  5004     0AA6  02F7               	subwf	___lldiv@dividend+3,f
  5005     0AA7  1479               	bsf	___lldiv@quotient,0
  5006     0AA8                     l2345:
  5007     0AA8  3001               	movlw	1
  5008     0AA9                     u3125:
  5009     0AA9  1003               	clrc
  5010     0AAA  0CF3               	rrf	___lldiv@divisor+3,f
  5011     0AAB  0CF2               	rrf	___lldiv@divisor+2,f
  5012     0AAC  0CF1               	rrf	___lldiv@divisor+1,f
  5013     0AAD  0CF0               	rrf	___lldiv@divisor,f
  5014     0AAE  3EFF               	addlw	-1
  5015     0AAF  1D03               	skipz
  5016     0AB0  2AA9               	goto	u3125
  5017     0AB1  3001               	movlw	1
  5018     0AB2  02FD               	subwf	___lldiv@counter,f
  5019     0AB3  1D03               	btfss	3,2
  5020     0AB4  2A80               	goto	l2337
  5021     0AB5                     l2349:
  5022     0AB5  087C               	movf	___lldiv@quotient+3,w
  5023     0AB6  00F3               	movwf	?___lldiv+3
  5024     0AB7  087B               	movf	___lldiv@quotient+2,w
  5025     0AB8  00F2               	movwf	?___lldiv+2
  5026     0AB9  087A               	movf	___lldiv@quotient+1,w
  5027     0ABA  00F1               	movwf	?___lldiv+1
  5028     0ABB  0879               	movf	___lldiv@quotient,w
  5029     0ABC  00F0               	movwf	?___lldiv
  5030     0ABD  0008               	return
  5031     0ABE                     __end_of___lldiv:
  5032                           
  5033                           	psect	text17
  5034     0B2A                     __ptext17:	
  5035 ;; *************** function ___fttol *****************
  5036 ;; Defined at:
  5037 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\fttol.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  f1              3   25[BANK0 ] float 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  lval            4   33[BANK0 ] unsigned long 
  5042 ;;  exp1            1   37[BANK0 ] unsigned char 
  5043 ;;  sign1           1   32[BANK0 ] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  4   25[BANK0 ] long 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0, btemp+1
  5048 ;; Tracked objects:
  5049 ;;		On entry : 300/0
  5050 ;;		On exit  : 300/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         0       4       0       0       0
  5054 ;;      Locals:         0       6       0       0       0
  5055 ;;      Temps:          0       3       0       0       0
  5056 ;;      Totals:         0      13       0       0       0
  5057 ;;Total ram usage:       13 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_sprintf
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066     0B2A                     ___fttol:	
  5067                           ;psect for function ___fttol
  5068                           
  5069                           
  5070                           ;incstack = 0
  5071                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  5072     0B2A  0839               	movf	___fttol@f1,w
  5073     0B2B  00BD               	movwf	??___fttol
  5074     0B2C  083A               	movf	___fttol@f1+1,w
  5075     0B2D  00BE               	movwf	??___fttol+1
  5076     0B2E  083B               	movf	___fttol@f1+2,w
  5077     0B2F  00BF               	movwf	??___fttol+2
  5078     0B30  1003               	clrc
  5079     0B31  0D3E               	rlf	??___fttol+1,w
  5080     0B32  0D3F               	rlf	??___fttol+2,w
  5081     0B33  00C5               	movwf	___fttol@exp1
  5082     0B34  0845               	movf	___fttol@exp1,w
  5083     0B35  1D03               	btfss	3,2
  5084     0B36  2B40               	goto	l2395
  5085     0B37                     l2391:
  5086     0B37  3000               	movlw	0
  5087     0B38  00BC               	movwf	?___fttol+3
  5088     0B39  3000               	movlw	0
  5089     0B3A  00BB               	movwf	?___fttol+2
  5090     0B3B  3000               	movlw	0
  5091     0B3C  00BA               	movwf	?___fttol+1
  5092     0B3D  3000               	movlw	0
  5093     0B3E  00B9               	movwf	?___fttol
  5094     0B3F  0008               	return
  5095     0B40                     l2395:
  5096     0B40  0839               	movf	___fttol@f1,w
  5097     0B41  00BD               	movwf	??___fttol
  5098     0B42  083A               	movf	___fttol@f1+1,w
  5099     0B43  00BE               	movwf	??___fttol+1
  5100     0B44  083B               	movf	___fttol@f1+2,w
  5101     0B45  00BF               	movwf	??___fttol+2
  5102     0B46  3017               	movlw	23
  5103     0B47                     u3205:
  5104     0B47  1003               	clrc
  5105     0B48  0CBF               	rrf	??___fttol+2,f
  5106     0B49  0CBE               	rrf	??___fttol+1,f
  5107     0B4A  0CBD               	rrf	??___fttol,f
  5108     0B4B  3EFF               	addlw	-1
  5109     0B4C  1D03               	skipz
  5110     0B4D  2B47               	goto	u3205
  5111     0B4E  083D               	movf	??___fttol,w
  5112     0B4F  00C0               	movwf	___fttol@sign1
  5113     0B50  17BA               	bsf	___fttol@f1+1,7
  5114     0B51  30FF               	movlw	255
  5115     0B52  05B9               	andwf	___fttol@f1,f
  5116     0B53  30FF               	movlw	255
  5117     0B54  05BA               	andwf	___fttol@f1+1,f
  5118     0B55  3000               	movlw	0
  5119     0B56  05BB               	andwf	___fttol@f1+2,f
  5120     0B57  0839               	movf	___fttol@f1,w
  5121     0B58  00C1               	movwf	___fttol@lval
  5122     0B59  083A               	movf	___fttol@f1+1,w
  5123     0B5A  00C2               	movwf	___fttol@lval+1
  5124     0B5B  083B               	movf	___fttol@f1+2,w
  5125     0B5C  00C3               	movwf	___fttol@lval+2
  5126     0B5D  01C4               	clrf	___fttol@lval+3
  5127     0B5E  308E               	movlw	142
  5128     0B5F  02C5               	subwf	___fttol@exp1,f
  5129     0B60  1FC5               	btfss	___fttol@exp1,7
  5130     0B61  2B77               	goto	l2417
  5131     0B62  0845               	movf	___fttol@exp1,w
  5132     0B63  3A80               	xorlw	128
  5133     0B64  3E8F               	addlw	143
  5134     0B65  1C03               	btfss	3,0
  5135     0B66  2B37               	goto	l2391
  5136     0B67                     l2413:
  5137     0B67  3001               	movlw	1
  5138     0B68                     u3235:
  5139     0B68  1003               	clrc
  5140     0B69  0CC4               	rrf	___fttol@lval+3,f
  5141     0B6A  0CC3               	rrf	___fttol@lval+2,f
  5142     0B6B  0CC2               	rrf	___fttol@lval+1,f
  5143     0B6C  0CC1               	rrf	___fttol@lval,f
  5144     0B6D  3EFF               	addlw	-1
  5145     0B6E  1D03               	skipz
  5146     0B6F  2B68               	goto	u3235
  5147     0B70  3001               	movlw	1
  5148     0B71  00FF               	movwf	127
  5149     0B72  087F               	movf	127,w
  5150     0B73  07C5               	addwf	___fttol@exp1,f
  5151     0B74  1903               	btfsc	3,2
  5152     0B75  2B8A               	goto	l2425
  5153     0B76  2B67               	goto	l2413
  5154     0B77                     l2417:
  5155     0B77  3018               	movlw	24
  5156     0B78  0245               	subwf	___fttol@exp1,w
  5157     0B79  1803               	btfsc	3,0
  5158     0B7A  2B37               	goto	l2391
  5159     0B7B                     l640:
  5160     0B7B  0845               	movf	___fttol@exp1,w
  5161     0B7C  1903               	btfsc	3,2
  5162     0B7D  2B8A               	goto	l2425
  5163     0B7E  3001               	movlw	1
  5164     0B7F  00BD               	movwf	??___fttol
  5165     0B80                     u3265:
  5166     0B80  1003               	clrc
  5167     0B81  0DC1               	rlf	___fttol@lval,f
  5168     0B82  0DC2               	rlf	___fttol@lval+1,f
  5169     0B83  0DC3               	rlf	___fttol@lval+2,f
  5170     0B84  0DC4               	rlf	___fttol@lval+3,f
  5171     0B85  0BBD               	decfsz	??___fttol,f
  5172     0B86  2B80               	goto	u3265
  5173     0B87  3001               	movlw	1
  5174     0B88  02C5               	subwf	___fttol@exp1,f
  5175     0B89  2B7B               	goto	l640
  5176     0B8A                     l2425:
  5177     0B8A  0840               	movf	___fttol@sign1,w
  5178     0B8B  1903               	btfsc	3,2
  5179     0B8C  2B98               	goto	l2429
  5180     0B8D  09C1               	comf	___fttol@lval,f
  5181     0B8E  09C2               	comf	___fttol@lval+1,f
  5182     0B8F  09C3               	comf	___fttol@lval+2,f
  5183     0B90  09C4               	comf	___fttol@lval+3,f
  5184     0B91  0AC1               	incf	___fttol@lval,f
  5185     0B92  1903               	skipnz
  5186     0B93  0AC2               	incf	___fttol@lval+1,f
  5187     0B94  1903               	skipnz
  5188     0B95  0AC3               	incf	___fttol@lval+2,f
  5189     0B96  1903               	skipnz
  5190     0B97  0AC4               	incf	___fttol@lval+3,f
  5191     0B98                     l2429:
  5192     0B98  0844               	movf	___fttol@lval+3,w
  5193     0B99  00BC               	movwf	?___fttol+3
  5194     0B9A  0843               	movf	___fttol@lval+2,w
  5195     0B9B  00BB               	movwf	?___fttol+2
  5196     0B9C  0842               	movf	___fttol@lval+1,w
  5197     0B9D  00BA               	movwf	?___fttol+1
  5198     0B9E  0841               	movf	___fttol@lval,w
  5199     0B9F  00B9               	movwf	?___fttol
  5200     0BA0  0008               	return
  5201     0BA1                     __end_of___fttol:
  5202                           
  5203                           	psect	text18
  5204     1703                     __ptext18:	
  5205 ;; *************** function ___ftsub *****************
  5206 ;; Defined at:
  5207 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftsub.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  f2              3   40[BANK0 ] float 
  5210 ;;  f1              3   43[BANK0 ] float 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  3   40[BANK0 ] float 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 300/0
  5219 ;;		On exit  : 300/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5222 ;;      Params:         0       6       0       0       0
  5223 ;;      Locals:         0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0
  5225 ;;      Totals:         0       6       0       0       0
  5226 ;;Total ram usage:        6 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 2
  5229 ;; This function calls:
  5230 ;;		___ftadd
  5231 ;; This function is called by:
  5232 ;;		_sprintf
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236     1703                     ___ftsub:	
  5237                           ;psect for function ___ftsub
  5238                           
  5239                           
  5240                           ;incstack = 0
  5241                           ; Regs used in ___ftsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5242     1703  084A               	movf	___ftsub@f2+2,w
  5243     1704  0449               	iorwf	___ftsub@f2+1,w
  5244     1705  0448               	iorwf	___ftsub@f2,w
  5245     1706  1903               	skipnz
  5246     1707  2F0A               	goto	l2385
  5247     1708  3080               	movlw	128
  5248     1709  06CA               	xorwf	___ftsub@f2+2,f
  5249     170A                     l2385:
  5250     170A  084B               	movf	___ftsub@f1,w
  5251     170B  00BC               	movwf	___ftadd@f1
  5252     170C  084C               	movf	___ftsub@f1+1,w
  5253     170D  00BD               	movwf	___ftadd@f1+1
  5254     170E  084D               	movf	___ftsub@f1+2,w
  5255     170F  00BE               	movwf	___ftadd@f1+2
  5256     1710  0848               	movf	___ftsub@f2,w
  5257     1711  00BF               	movwf	___ftadd@f2
  5258     1712  0849               	movf	___ftsub@f2+1,w
  5259     1713  00C0               	movwf	___ftadd@f2+1
  5260     1714  084A               	movf	___ftsub@f2+2,w
  5261     1715  00C1               	movwf	___ftadd@f2+2
  5262     1716  120A  158A  24E8   	fcall	___ftadd
  5263     1719  083C               	movf	?___ftadd,w
  5264     171A  00C8               	movwf	?___ftsub
  5265     171B  083D               	movf	?___ftadd+1,w
  5266     171C  00C9               	movwf	?___ftsub+1
  5267     171D  083E               	movf	?___ftadd+2,w
  5268     171E  00CA               	movwf	?___ftsub+2
  5269     171F  0008               	return
  5270     1720                     __end_of___ftsub:
  5271                           
  5272                           	psect	text19
  5273     0CE8                     __ptext19:	
  5274 ;; *************** function ___ftadd *****************
  5275 ;; Defined at:
  5276 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftadd.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  f1              3   28[BANK0 ] float 
  5279 ;;  f2              3   31[BANK0 ] float 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  exp1            1   39[BANK0 ] unsigned char 
  5282 ;;  exp2            1   38[BANK0 ] unsigned char 
  5283 ;;  sign            1   37[BANK0 ] unsigned char 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  3   28[BANK0 ] float 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 300/0
  5290 ;;		On exit  : 300/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5293 ;;      Params:         0       6       0       0       0
  5294 ;;      Locals:         0       3       0       0       0
  5295 ;;      Temps:          0       3       0       0       0
  5296 ;;      Totals:         0      12       0       0       0
  5297 ;;Total ram usage:       12 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; Hardware stack levels required when called: 1
  5300 ;; This function calls:
  5301 ;;		___ftpack
  5302 ;; This function is called by:
  5303 ;;		_sprintf
  5304 ;;		___ftsub
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308     0CE8                     ___ftadd:	
  5309                           ;psect for function ___ftadd
  5310                           
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in ___ftadd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5314     0CE8  083C               	movf	___ftadd@f1,w
  5315     0CE9  00C2               	movwf	??___ftadd
  5316     0CEA  083D               	movf	___ftadd@f1+1,w
  5317     0CEB  00C3               	movwf	??___ftadd+1
  5318     0CEC  083E               	movf	___ftadd@f1+2,w
  5319     0CED  00C4               	movwf	??___ftadd+2
  5320     0CEE  1003               	clrc
  5321     0CEF  0D43               	rlf	??___ftadd+1,w
  5322     0CF0  0D44               	rlf	??___ftadd+2,w
  5323     0CF1  00C7               	movwf	___ftadd@exp1
  5324     0CF2  083F               	movf	___ftadd@f2,w
  5325     0CF3  00C2               	movwf	??___ftadd
  5326     0CF4  0840               	movf	___ftadd@f2+1,w
  5327     0CF5  00C3               	movwf	??___ftadd+1
  5328     0CF6  0841               	movf	___ftadd@f2+2,w
  5329     0CF7  00C4               	movwf	??___ftadd+2
  5330     0CF8  1003               	clrc
  5331     0CF9  0D43               	rlf	??___ftadd+1,w
  5332     0CFA  0D44               	rlf	??___ftadd+2,w
  5333     0CFB  00C6               	movwf	___ftadd@exp2
  5334     0CFC  0847               	movf	___ftadd@exp1,w
  5335     0CFD  1903               	btfsc	3,2
  5336     0CFE  2D0B               	goto	l1963
  5337     0CFF  0846               	movf	___ftadd@exp2,w
  5338     0D00  0247               	subwf	___ftadd@exp1,w
  5339     0D01  1803               	skipnc
  5340     0D02  2D12               	goto	l1967
  5341     0D03  0846               	movf	___ftadd@exp2,w
  5342     0D04  00C2               	movwf	??___ftadd
  5343     0D05  0847               	movf	___ftadd@exp1,w
  5344     0D06  02C2               	subwf	??___ftadd,f
  5345     0D07  3019               	movlw	25
  5346     0D08  0242               	subwf	??___ftadd,w
  5347     0D09  1C03               	skipc
  5348     0D0A  2D12               	goto	l1967
  5349     0D0B                     l1963:
  5350     0D0B  083F               	movf	___ftadd@f2,w
  5351     0D0C  00BC               	movwf	?___ftadd
  5352     0D0D  0840               	movf	___ftadd@f2+1,w
  5353     0D0E  00BD               	movwf	?___ftadd+1
  5354     0D0F  0841               	movf	___ftadd@f2+2,w
  5355     0D10  00BE               	movwf	?___ftadd+2
  5356     0D11  0008               	return
  5357     0D12                     l1967:
  5358     0D12  0846               	movf	___ftadd@exp2,w
  5359     0D13  1903               	btfsc	3,2
  5360     0D14  0008               	return
  5361     0D15  0847               	movf	___ftadd@exp1,w
  5362     0D16  0246               	subwf	___ftadd@exp2,w
  5363     0D17  1803               	skipnc
  5364     0D18  2D21               	goto	l1973
  5365     0D19  0847               	movf	___ftadd@exp1,w
  5366     0D1A  00C2               	movwf	??___ftadd
  5367     0D1B  0846               	movf	___ftadd@exp2,w
  5368     0D1C  02C2               	subwf	??___ftadd,f
  5369     0D1D  3019               	movlw	25
  5370     0D1E  0242               	subwf	??___ftadd,w
  5371     0D1F  1803               	btfsc	3,0
  5372     0D20  0008               	return
  5373     0D21                     l1973:
  5374     0D21  3006               	movlw	6
  5375     0D22  00C5               	movwf	___ftadd@sign
  5376     0D23  1BBE               	btfsc	___ftadd@f1+2,7
  5377     0D24  17C5               	bsf	___ftadd@sign,7
  5378     0D25  1BC1               	btfsc	___ftadd@f2+2,7
  5379     0D26  1745               	bsf	___ftadd@sign,6
  5380     0D27  17BD               	bsf	___ftadd@f1+1,7
  5381     0D28  30FF               	movlw	255
  5382     0D29  05BC               	andwf	___ftadd@f1,f
  5383     0D2A  30FF               	movlw	255
  5384     0D2B  05BD               	andwf	___ftadd@f1+1,f
  5385     0D2C  3000               	movlw	0
  5386     0D2D  05BE               	andwf	___ftadd@f1+2,f
  5387     0D2E  17C0               	bsf	___ftadd@f2+1,7
  5388     0D2F  30FF               	movlw	255
  5389     0D30  05BF               	andwf	___ftadd@f2,f
  5390     0D31  30FF               	movlw	255
  5391     0D32  05C0               	andwf	___ftadd@f2+1,f
  5392     0D33  3000               	movlw	0
  5393     0D34  05C1               	andwf	___ftadd@f2+2,f
  5394     0D35  0846               	movf	___ftadd@exp2,w
  5395     0D36  0247               	subwf	___ftadd@exp1,w
  5396     0D37  1803               	skipnc
  5397     0D38  2D5F               	goto	l1997
  5398     0D39                     l1985:
  5399     0D39  3001               	movlw	1
  5400     0D3A                     u2355:
  5401     0D3A  1003               	clrc
  5402     0D3B  0DBF               	rlf	___ftadd@f2,f
  5403     0D3C  0DC0               	rlf	___ftadd@f2+1,f
  5404     0D3D  0DC1               	rlf	___ftadd@f2+2,f
  5405     0D3E  3EFF               	addlw	-1
  5406     0D3F  1D03               	skipz
  5407     0D40  2D3A               	goto	u2355
  5408     0D41  3001               	movlw	1
  5409     0D42  02C6               	subwf	___ftadd@exp2,f
  5410     0D43  0846               	movf	___ftadd@exp2,w
  5411     0D44  0647               	xorwf	___ftadd@exp1,w
  5412     0D45  1903               	skipnz
  5413     0D46  2D5A               	goto	l1995
  5414     0D47  3001               	movlw	1
  5415     0D48  02C5               	subwf	___ftadd@sign,f
  5416     0D49  0845               	movf	___ftadd@sign,w
  5417     0D4A  3907               	andlw	7
  5418     0D4B  1903               	btfsc	3,2
  5419     0D4C  2D5A               	goto	l1995
  5420     0D4D  2D39               	goto	l1985
  5421     0D4E                     l1991:
  5422     0D4E  3001               	movlw	1
  5423     0D4F                     u2385:
  5424     0D4F  1003               	clrc
  5425     0D50  0CBE               	rrf	___ftadd@f1+2,f
  5426     0D51  0CBD               	rrf	___ftadd@f1+1,f
  5427     0D52  0CBC               	rrf	___ftadd@f1,f
  5428     0D53  3EFF               	addlw	-1
  5429     0D54  1D03               	skipz
  5430     0D55  2D4F               	goto	u2385
  5431     0D56  3001               	movlw	1
  5432     0D57  00FF               	movwf	127
  5433     0D58  087F               	movf	127,w
  5434     0D59  07C7               	addwf	___ftadd@exp1,f
  5435     0D5A                     l1995:
  5436     0D5A  0847               	movf	___ftadd@exp1,w
  5437     0D5B  0646               	xorwf	___ftadd@exp2,w
  5438     0D5C  1903               	btfsc	3,2
  5439     0D5D  2D88               	goto	l563
  5440     0D5E  2D4E               	goto	l1991
  5441     0D5F                     l1997:
  5442     0D5F  0847               	movf	___ftadd@exp1,w
  5443     0D60  0246               	subwf	___ftadd@exp2,w
  5444     0D61  1803               	skipnc
  5445     0D62  2D88               	goto	l563
  5446     0D63                     l1999:
  5447     0D63  3001               	movlw	1
  5448     0D64                     u2415:
  5449     0D64  1003               	clrc
  5450     0D65  0DBC               	rlf	___ftadd@f1,f
  5451     0D66  0DBD               	rlf	___ftadd@f1+1,f
  5452     0D67  0DBE               	rlf	___ftadd@f1+2,f
  5453     0D68  3EFF               	addlw	-1
  5454     0D69  1D03               	skipz
  5455     0D6A  2D64               	goto	u2415
  5456     0D6B  3001               	movlw	1
  5457     0D6C  02C7               	subwf	___ftadd@exp1,f
  5458     0D6D  0846               	movf	___ftadd@exp2,w
  5459     0D6E  0647               	xorwf	___ftadd@exp1,w
  5460     0D6F  1903               	skipnz
  5461     0D70  2D84               	goto	l2009
  5462     0D71  3001               	movlw	1
  5463     0D72  02C5               	subwf	___ftadd@sign,f
  5464     0D73  0845               	movf	___ftadd@sign,w
  5465     0D74  3907               	andlw	7
  5466     0D75  1903               	btfsc	3,2
  5467     0D76  2D84               	goto	l2009
  5468     0D77  2D63               	goto	l1999
  5469     0D78                     l2005:
  5470     0D78  3001               	movlw	1
  5471     0D79                     u2445:
  5472     0D79  1003               	clrc
  5473     0D7A  0CC1               	rrf	___ftadd@f2+2,f
  5474     0D7B  0CC0               	rrf	___ftadd@f2+1,f
  5475     0D7C  0CBF               	rrf	___ftadd@f2,f
  5476     0D7D  3EFF               	addlw	-1
  5477     0D7E  1D03               	skipz
  5478     0D7F  2D79               	goto	u2445
  5479     0D80  3001               	movlw	1
  5480     0D81  00FF               	movwf	127
  5481     0D82  087F               	movf	127,w
  5482     0D83  07C6               	addwf	___ftadd@exp2,f
  5483     0D84                     l2009:
  5484     0D84  0847               	movf	___ftadd@exp1,w
  5485     0D85  0646               	xorwf	___ftadd@exp2,w
  5486     0D86  1D03               	skipz
  5487     0D87  2D78               	goto	l2005
  5488     0D88                     l563:
  5489     0D88  1FC5               	btfss	___ftadd@sign,7
  5490     0D89  2D9A               	goto	l2013
  5491     0D8A  30FF               	movlw	255
  5492     0D8B  06BC               	xorwf	___ftadd@f1,f
  5493     0D8C  30FF               	movlw	255
  5494     0D8D  06BD               	xorwf	___ftadd@f1+1,f
  5495     0D8E  30FF               	movlw	255
  5496     0D8F  06BE               	xorwf	___ftadd@f1+2,f
  5497     0D90  3001               	movlw	1
  5498     0D91  07BC               	addwf	___ftadd@f1,f
  5499     0D92  3000               	movlw	0
  5500     0D93  1803               	skipnc
  5501     0D94  3001               	movlw	1
  5502     0D95  07BD               	addwf	___ftadd@f1+1,f
  5503     0D96  3000               	movlw	0
  5504     0D97  1803               	skipnc
  5505     0D98  3001               	movlw	1
  5506     0D99  07BE               	addwf	___ftadd@f1+2,f
  5507     0D9A                     l2013:
  5508     0D9A  1F45               	btfss	___ftadd@sign,6
  5509     0D9B  2DAC               	goto	l2017
  5510     0D9C  30FF               	movlw	255
  5511     0D9D  06BF               	xorwf	___ftadd@f2,f
  5512     0D9E  30FF               	movlw	255
  5513     0D9F  06C0               	xorwf	___ftadd@f2+1,f
  5514     0DA0  30FF               	movlw	255
  5515     0DA1  06C1               	xorwf	___ftadd@f2+2,f
  5516     0DA2  3001               	movlw	1
  5517     0DA3  07BF               	addwf	___ftadd@f2,f
  5518     0DA4  3000               	movlw	0
  5519     0DA5  1803               	skipnc
  5520     0DA6  3001               	movlw	1
  5521     0DA7  07C0               	addwf	___ftadd@f2+1,f
  5522     0DA8  3000               	movlw	0
  5523     0DA9  1803               	skipnc
  5524     0DAA  3001               	movlw	1
  5525     0DAB  07C1               	addwf	___ftadd@f2+2,f
  5526     0DAC                     l2017:
  5527     0DAC  01C5               	clrf	___ftadd@sign
  5528     0DAD  083C               	movf	___ftadd@f1,w
  5529     0DAE  07BF               	addwf	___ftadd@f2,f
  5530     0DAF  083D               	movf	___ftadd@f1+1,w
  5531     0DB0  1103               	clrz
  5532     0DB1  1803               	skipnc
  5533     0DB2  0A3D               	incf	___ftadd@f1+1,w
  5534     0DB3  1D03               	btfss	3,2
  5535     0DB4  07C0               	addwf	___ftadd@f2+1,f
  5536     0DB5  083E               	movf	___ftadd@f1+2,w
  5537     0DB6  1103               	clrz
  5538     0DB7  1803               	skipnc
  5539     0DB8  0A3E               	incf	___ftadd@f1+2,w
  5540     0DB9  1D03               	btfss	3,2
  5541     0DBA  07C1               	addwf	___ftadd@f2+2,f
  5542     0DBB  1FC1               	btfss	___ftadd@f2+2,7
  5543     0DBC  2DCF               	goto	l2027
  5544     0DBD  30FF               	movlw	255
  5545     0DBE  06BF               	xorwf	___ftadd@f2,f
  5546     0DBF  30FF               	movlw	255
  5547     0DC0  06C0               	xorwf	___ftadd@f2+1,f
  5548     0DC1  30FF               	movlw	255
  5549     0DC2  06C1               	xorwf	___ftadd@f2+2,f
  5550     0DC3  3001               	movlw	1
  5551     0DC4  07BF               	addwf	___ftadd@f2,f
  5552     0DC5  3000               	movlw	0
  5553     0DC6  1803               	skipnc
  5554     0DC7  3001               	movlw	1
  5555     0DC8  07C0               	addwf	___ftadd@f2+1,f
  5556     0DC9  3000               	movlw	0
  5557     0DCA  1803               	skipnc
  5558     0DCB  3001               	movlw	1
  5559     0DCC  07C1               	addwf	___ftadd@f2+2,f
  5560     0DCD  01C5               	clrf	___ftadd@sign
  5561     0DCE  0AC5               	incf	___ftadd@sign,f
  5562     0DCF                     l2027:
  5563     0DCF  083F               	movf	___ftadd@f2,w
  5564     0DD0  00F0               	movwf	___ftpack@arg
  5565     0DD1  0840               	movf	___ftadd@f2+1,w
  5566     0DD2  00F1               	movwf	___ftpack@arg+1
  5567     0DD3  0841               	movf	___ftadd@f2+2,w
  5568     0DD4  00F2               	movwf	___ftpack@arg+2
  5569     0DD5  0847               	movf	___ftadd@exp1,w
  5570     0DD6  00F3               	movwf	___ftpack@exp
  5571     0DD7  0845               	movf	___ftadd@sign,w
  5572     0DD8  00F4               	movwf	___ftpack@sign
  5573     0DD9  120A  158A  22BE   	fcall	___ftpack
  5574     0DDC  0870               	movf	?___ftpack,w
  5575     0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  5576     0DDE  00BC               	movwf	?___ftadd
  5577     0DDF  0871               	movf	?___ftpack+1,w
  5578     0DE0  00BD               	movwf	?___ftadd+1
  5579     0DE1  0872               	movf	?___ftpack+2,w
  5580     0DE2  00BE               	movwf	?___ftadd+2
  5581     0DE3  0008               	return
  5582     0DE4                     __end_of___ftadd:
  5583                           
  5584                           	psect	text20
  5585     169D                     __ptext20:	
  5586 ;; *************** function ___ftneg *****************
  5587 ;; Defined at:
  5588 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftneg.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  f1              3    0[COMMON] float 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  3    0[COMMON] float 
  5595 ;; Registers used:
  5596 ;;		wreg
  5597 ;; Tracked objects:
  5598 ;;		On entry : 300/0
  5599 ;;		On exit  : 300/0
  5600 ;;		Unchanged: 300/0
  5601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5602 ;;      Params:         3       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0
  5605 ;;      Totals:         3       0       0       0       0
  5606 ;;Total ram usage:        3 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_sprintf
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615     169D                     ___ftneg:	
  5616                           ;psect for function ___ftneg
  5617                           
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in ___ftneg: [wreg]
  5621     169D  0872               	movf	___ftneg@f1+2,w
  5622     169E  0471               	iorwf	___ftneg@f1+1,w
  5623     169F  0470               	iorwf	___ftneg@f1,w
  5624     16A0  1903               	skipnz
  5625     16A1  0008               	return
  5626     16A2  3080               	movlw	128
  5627     16A3  06F2               	xorwf	___ftneg@f1+2,f
  5628     16A4  0008               	return
  5629     16A5                     __end_of___ftneg:
  5630                           
  5631                           	psect	text21
  5632     17D3                     __ptext21:	
  5633 ;; *************** function ___ftge *****************
  5634 ;; Defined at:
  5635 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftge.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  ff1             3    0[COMMON] float 
  5638 ;;  ff2             3    3[COMMON] float 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;		None               void
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 300/0
  5647 ;;		On exit  : 300/0
  5648 ;;		Unchanged: 300/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         6       0       0       0       0
  5651 ;;      Locals:         0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0
  5653 ;;      Totals:         6       0       0       0       0
  5654 ;;Total ram usage:        6 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_sprintf
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663     17D3                     ___ftge:	
  5664                           ;psect for function ___ftge
  5665                           
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5669     17D3  1FF2               	btfss	___ftge@ff1+2,7
  5670     17D4  2FE2               	goto	l2357
  5671     17D5  0870               	movf	___ftge@ff1,w
  5672     17D6  3C00               	sublw	0
  5673     17D7  00F0               	movwf	___ftge@ff1
  5674     17D8  0871               	movf	___ftge@ff1+1,w
  5675     17D9  1C03               	skipc
  5676     17DA  0F71               	incfsz	___ftge@ff1+1,w
  5677     17DB  3C00               	sublw	0
  5678     17DC  00F1               	movwf	___ftge@ff1+1
  5679     17DD  0872               	movf	___ftge@ff1+2,w
  5680     17DE  1C03               	skipc
  5681     17DF  0F72               	incfsz	___ftge@ff1+2,w
  5682     17E0  3C80               	sublw	128
  5683     17E1  00F2               	movwf	___ftge@ff1+2
  5684     17E2                     l2357:
  5685     17E2  1FF5               	btfss	___ftge@ff2+2,7
  5686     17E3  2FF1               	goto	l2361
  5687     17E4  0873               	movf	___ftge@ff2,w
  5688     17E5  3C00               	sublw	0
  5689     17E6  00F3               	movwf	___ftge@ff2
  5690     17E7  0874               	movf	___ftge@ff2+1,w
  5691     17E8  1C03               	skipc
  5692     17E9  0F74               	incfsz	___ftge@ff2+1,w
  5693     17EA  3C00               	sublw	0
  5694     17EB  00F4               	movwf	___ftge@ff2+1
  5695     17EC  0875               	movf	___ftge@ff2+2,w
  5696     17ED  1C03               	skipc
  5697     17EE  0F75               	incfsz	___ftge@ff2+2,w
  5698     17EF  3C80               	sublw	128
  5699     17F0  00F5               	movwf	___ftge@ff2+2
  5700     17F1                     l2361:
  5701     17F1  3080               	movlw	128
  5702     17F2  06F2               	xorwf	___ftge@ff1+2,f
  5703     17F3  3080               	movlw	128
  5704     17F4  06F5               	xorwf	___ftge@ff2+2,f
  5705     17F5  0875               	movf	___ftge@ff2+2,w
  5706     17F6  0272               	subwf	___ftge@ff1+2,w
  5707     17F7  1D03               	skipz
  5708     17F8  0008               	return
  5709     17F9  0874               	movf	___ftge@ff2+1,w
  5710     17FA  0271               	subwf	___ftge@ff1+1,w
  5711     17FB  1D03               	skipz
  5712     17FC  0008               	return
  5713     17FD  0873               	movf	___ftge@ff2,w
  5714     17FE  0270               	subwf	___ftge@ff1,w
  5715     17FF  0008               	return
  5716     1800                     __end_of___ftge:
  5717                           
  5718                           	psect	text22
  5719     09B1                     __ptext22:	
  5720 ;; *************** function _metin_yaz *****************
  5721 ;; Defined at:
  5722 ;;		line 26 in file "LCD_library.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  metin           2    5[COMMON] PTR const unsigned char 
  5725 ;;		 -> STR_7(5), main@voltaj_deger_char(10), STR_5(8), STR_4(8), 
  5726 ;;		 -> STR_3(8), STR_2(11), STR_1(17), 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/100
  5735 ;;		On exit  : 300/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5738 ;;      Params:         2       0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0
  5740 ;;      Temps:          1       0       0       0       0
  5741 ;;      Totals:         3       0       0       0       0
  5742 ;;Total ram usage:        3 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; Hardware stack levels required when called: 1
  5745 ;; This function calls:
  5746 ;;		_bekle_milisaniye
  5747 ;; This function is called by:
  5748 ;;		_main
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752     09B1                     _metin_yaz:	
  5753                           ;psect for function _metin_yaz
  5754                           
  5755                           
  5756                           ;LCD_library.c: 27: bekle_milisaniye(1);
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in _metin_yaz: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5760     09B1  3001               	movlw	1
  5761     09B2  00F0               	movwf	bekle_milisaniye@milisaniye
  5762     09B3  3000               	movlw	0
  5763     09B4  00F1               	movwf	bekle_milisaniye@milisaniye+1
  5764     09B5  120A  158A  20C7  120A  158A  	fcall	_bekle_milisaniye
  5765     09BA                     l2491:	
  5766                           ;LCD_library.c: 28: while (*metin) {
  5767                           
  5768     09BA  0876               	movf	metin_yaz@metin+1,w
  5769     09BB  1283               	bcf	3,5	;RP0=0, select bank0
  5770     09BC  1303               	bcf	3,6	;RP1=0, select bank0
  5771     09BD  00FF               	movwf	127
  5772     09BE  0875               	movf	metin_yaz@metin,w
  5773     09BF  0084               	movwf	4
  5774     09C0  120A  158A  2000  120A  158A  	fcall	stringtab
  5775     09C5  3A00               	xorlw	0
  5776     09C6  1903               	btfsc	3,2
  5777     09C7  0008               	return
  5778                           
  5779                           ;LCD_library.c: 29: RB0 = 1;
  5780     09C8  1406               	bsf	6,0	;volatile
  5781                           
  5782                           ;LCD_library.c: 30: RB2 = 1;
  5783     09C9  1506               	bsf	6,2	;volatile
  5784                           
  5785                           ;LCD_library.c: 31: PORTD = (*metin & 0xF0);
  5786     09CA  0876               	movf	metin_yaz@metin+1,w
  5787     09CB  00FF               	movwf	127
  5788     09CC  0875               	movf	metin_yaz@metin,w
  5789     09CD  0084               	movwf	4
  5790     09CE  120A  158A  2000  120A  158A  	fcall	stringtab
  5791     09D3  39F0               	andlw	240
  5792     09D4  0088               	movwf	8	;volatile
  5793                           
  5794                           ;LCD_library.c: 32: RB2 = 0;
  5795     09D5  1106               	bcf	6,2	;volatile
  5796                           
  5797                           ;LCD_library.c: 33: bekle_milisaniye(1);
  5798     09D6  3001               	movlw	1
  5799     09D7  00F0               	movwf	bekle_milisaniye@milisaniye
  5800     09D8  3000               	movlw	0
  5801     09D9  00F1               	movwf	bekle_milisaniye@milisaniye+1
  5802     09DA  120A  158A  20C7  120A  158A  	fcall	_bekle_milisaniye
  5803                           
  5804                           ;LCD_library.c: 34: RB2 = 1;
  5805     09DF  1283               	bcf	3,5	;RP0=0, select bank0
  5806     09E0  1303               	bcf	3,6	;RP1=0, select bank0
  5807     09E1  1506               	bsf	6,2	;volatile
  5808                           
  5809                           ;LCD_library.c: 35: PORTD = ((*metin & 0x0F) << 4);
  5810     09E2  0876               	movf	metin_yaz@metin+1,w
  5811     09E3  00FF               	movwf	127
  5812     09E4  0875               	movf	metin_yaz@metin,w
  5813     09E5  0084               	movwf	4
  5814     09E6  120A  158A  2000  120A  158A  	fcall	stringtab
  5815     09EB  390F               	andlw	15
  5816     09EC  00F7               	movwf	??_metin_yaz
  5817     09ED  3003               	movlw	3
  5818     09EE                     u3375:
  5819     09EE  1003               	clrc
  5820     09EF  0DF7               	rlf	??_metin_yaz,f
  5821     09F0  3EFF               	addlw	-1
  5822     09F1  1D03               	skipz
  5823     09F2  29EE               	goto	u3375
  5824     09F3  1003               	clrc
  5825     09F4  0D77               	rlf	??_metin_yaz,w
  5826     09F5  0088               	movwf	8	;volatile
  5827                           
  5828                           ;LCD_library.c: 36: RB2 = 0;
  5829     09F6  1106               	bcf	6,2	;volatile
  5830                           
  5831                           ;LCD_library.c: 37: bekle_milisaniye(1);
  5832     09F7  3001               	movlw	1
  5833     09F8  00F0               	movwf	bekle_milisaniye@milisaniye
  5834     09F9  3000               	movlw	0
  5835     09FA  00F1               	movwf	bekle_milisaniye@milisaniye+1
  5836     09FB  120A  158A  20C7  120A  158A  	fcall	_bekle_milisaniye
  5837                           
  5838                           ;LCD_library.c: 38: metin++;
  5839     0A00  3001               	movlw	1
  5840     0A01  07F5               	addwf	metin_yaz@metin,f
  5841     0A02  1803               	skipnc
  5842     0A03  0AF6               	incf	metin_yaz@metin+1,f
  5843     0A04  3000               	movlw	0
  5844     0A05  07F6               	addwf	metin_yaz@metin+1,f
  5845     0A06  29BA               	goto	l2491
  5846     0A07                     __end_of_metin_yaz:
  5847                           
  5848                           	psect	text23
  5849     08DF                     __ptext23:	
  5850 ;; *************** function _kutuphaneyi_baslat *****************
  5851 ;; Defined at:
  5852 ;;		line 54 in file "LCD_library.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0, pclath, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : B00/100
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5866 ;;      Params:         0       0       0       0       0
  5867 ;;      Locals:         0       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0
  5869 ;;      Totals:         0       0       0       0       0
  5870 ;;Total ram usage:        0 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; Hardware stack levels required when called: 4
  5873 ;; This function calls:
  5874 ;;		_bekle_milisaniye
  5875 ;;		_ekran_temizle
  5876 ;;		_komut_calistir
  5877 ;; This function is called by:
  5878 ;;		_main
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882     08DF                     _kutuphaneyi_baslat:	
  5883                           ;psect for function _kutuphaneyi_baslat
  5884                           
  5885                           
  5886                           ;LCD_library.c: 55: RB0 = 0;
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in _kutuphaneyi_baslat: [wreg+status,2+status,0+pclath+cstack]
  5890     08DF  1283               	bcf	3,5	;RP0=0, select bank0
  5891     08E0  1006               	bcf	6,0	;volatile
  5892                           
  5893                           ;LCD_library.c: 56: RB2 = 0;
  5894     08E1  1106               	bcf	6,2	;volatile
  5895                           
  5896                           ;LCD_library.c: 57: RB1 = 0;
  5897     08E2  1086               	bcf	6,1	;volatile
  5898                           
  5899                           ;LCD_library.c: 58: bekle_milisaniye(15);
  5900     08E3  300F               	movlw	15
  5901     08E4  00F0               	movwf	bekle_milisaniye@milisaniye
  5902     08E5  3000               	movlw	0
  5903     08E6  00F1               	movwf	bekle_milisaniye@milisaniye+1
  5904     08E7  120A  158A  20C7  120A  158A  	fcall	_bekle_milisaniye
  5905                           
  5906                           ;LCD_library.c: 59: RB2 = 1;
  5907     08EC  1283               	bcf	3,5	;RP0=0, select bank0
  5908     08ED  1303               	bcf	3,6	;RP1=0, select bank0
  5909     08EE  1506               	bsf	6,2	;volatile
  5910                           
  5911                           ;LCD_library.c: 60: komut_calistir(2);
  5912     08EF  3002               	movlw	2
  5913     08F0  160A  118A  27A8  120A  158A  	fcall	_komut_calistir
  5914                           
  5915                           ;LCD_library.c: 61: bekle_milisaniye(2);
  5916     08F5  3002               	movlw	2
  5917     08F6  00F0               	movwf	bekle_milisaniye@milisaniye
  5918     08F7  3000               	movlw	0
  5919     08F8  00F1               	movwf	bekle_milisaniye@milisaniye+1
  5920     08F9  120A  158A  20C7  120A  158A  	fcall	_bekle_milisaniye
  5921                           
  5922                           ;LCD_library.c: 62: komut_calistir(40);
  5923     08FE  3028               	movlw	40
  5924     08FF  160A  118A  27A8  120A  158A  	fcall	_komut_calistir
  5925                           
  5926                           ;LCD_library.c: 63: komut_calistir(4);
  5927     0904  3004               	movlw	4
  5928     0905  160A  118A  27A8  120A  158A  	fcall	_komut_calistir
  5929                           
  5930                           ;LCD_library.c: 64: komut_calistir(12);
  5931     090A  300C               	movlw	12
  5932     090B  160A  118A  27A8  120A  158A  	fcall	_komut_calistir
  5933                           
  5934                           ;LCD_library.c: 65: ekran_temizle();
  5935     0910  160A  118A  26A5  120A  158A  	fcall	_ekran_temizle
  5936                           
  5937                           ;LCD_library.c: 66: komut_calistir(128);
  5938     0915  3080               	movlw	128
  5939     0916  160A  118A  27A8   	fcall	_komut_calistir
  5940     0919  0008               	return
  5941     091A                     __end_of_kutuphaneyi_baslat:
  5942                           
  5943                           	psect	text24
  5944     16A5                     __ptext24:	
  5945 ;; *************** function _ekran_temizle *****************
  5946 ;; Defined at:
  5947 ;;		line 42 in file "LCD_library.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0, pclath, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/100
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5961 ;;      Params:         0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0
  5964 ;;      Totals:         0       0       0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used: 1
  5967 ;; Hardware stack levels required when called: 3
  5968 ;; This function calls:
  5969 ;;		_bekle_milisaniye
  5970 ;;		_komut_gonder
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;;		_kutuphaneyi_baslat
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977     16A5                     _ekran_temizle:	
  5978                           ;psect for function _ekran_temizle
  5979                           
  5980                           
  5981                           ;LCD_library.c: 43: komut_gonder(1);
  5982                           
  5983                           ;incstack = 0
  5984                           ; Regs used in _ekran_temizle: [wreg+status,2+status,0+pclath+cstack]
  5985     16A5  3001               	movlw	1
  5986     16A6  160A  118A  2697  160A  118A  	fcall	_komut_gonder
  5987                           
  5988                           ;LCD_library.c: 44: bekle_milisaniye(2);
  5989     16AB  3002               	movlw	2
  5990     16AC  00F0               	movwf	bekle_milisaniye@milisaniye
  5991     16AD  3000               	movlw	0
  5992     16AE  00F1               	movwf	bekle_milisaniye@milisaniye+1
  5993     16AF  120A  158A  20C7   	fcall	_bekle_milisaniye
  5994     16B2  0008               	return
  5995     16B3                     __end_of_ekran_temizle:
  5996                           
  5997                           	psect	text25
  5998     16D2                     __ptext25:	
  5999 ;; *************** function _imleci_ayarla *****************
  6000 ;; Defined at:
  6001 ;;		line 47 in file "LCD_library.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  x               1    wreg     unsigned char 
  6004 ;;  y               1    8[COMMON] unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  x               1    9[COMMON] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0, pclath, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 300/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6016 ;;      Params:         1       0       0       0       0
  6017 ;;      Locals:         1       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0
  6019 ;;      Totals:         2       0       0       0       0
  6020 ;;Total ram usage:        2 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 3
  6023 ;; This function calls:
  6024 ;;		_komut_gonder
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030     16D2                     _imleci_ayarla:	
  6031                           ;psect for function _imleci_ayarla
  6032                           
  6033                           
  6034                           ;incstack = 0
  6035                           ; Regs used in _imleci_ayarla: [wreg+status,2+status,0+pclath+cstack]
  6036                           ;imleci_ayarla@x stored from wreg
  6037     16D2  00F9               	movwf	imleci_ayarla@x
  6038                           
  6039                           ;LCD_library.c: 48: if (x == 1)
  6040     16D3  0379               	decf	imleci_ayarla@x,w
  6041     16D4  1D03               	btfss	3,2
  6042     16D5  2EDE               	goto	l2497
  6043                           
  6044                           ;LCD_library.c: 49: komut_gonder(128 + ((y - 1) % 16));
  6045     16D6  0878               	movf	imleci_ayarla@y,w
  6046     16D7  3EFF               	addlw	255
  6047     16D8  390F               	andlw	15
  6048     16D9  3E80               	addlw	128
  6049     16DA  160A  118A  2697   	fcall	_komut_gonder
  6050     16DD  0008               	return
  6051     16DE                     l2497:
  6052                           
  6053                           ;LCD_library.c: 50: else;LCD_library.c: 51: komut_gonder(192 + ((y - 1) % 16));
  6054     16DE  0878               	movf	imleci_ayarla@y,w
  6055     16DF  3EFF               	addlw	255
  6056     16E0  390F               	andlw	15
  6057     16E1  3EC0               	addlw	192
  6058     16E2  160A  118A  2697   	fcall	_komut_gonder
  6059     16E5  0008               	return
  6060     16E6                     __end_of_imleci_ayarla:
  6061                           
  6062                           	psect	text26
  6063     1697                     __ptext26:	
  6064 ;; *************** function _komut_gonder *****************
  6065 ;; Defined at:
  6066 ;;		line 22 in file "LCD_library.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  komut           1    wreg     unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  komut           1    7[COMMON] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0, pclath, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/100
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6080 ;;      Params:         0       0       0       0       0
  6081 ;;      Locals:         1       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0
  6083 ;;      Totals:         1       0       0       0       0
  6084 ;;Total ram usage:        1 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 2
  6087 ;; This function calls:
  6088 ;;		_komut_calistir
  6089 ;; This function is called by:
  6090 ;;		_ekran_temizle
  6091 ;;		_imleci_ayarla
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095     1697                     _komut_gonder:	
  6096                           ;psect for function _komut_gonder
  6097                           
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _komut_gonder: [wreg+status,2+status,0+pclath+cstack]
  6101                           ;komut_gonder@komut stored from wreg
  6102     1697  00F7               	movwf	komut_gonder@komut
  6103                           
  6104                           ;LCD_library.c: 23: komut_calistir(komut);
  6105     1698  0877               	movf	komut_gonder@komut,w
  6106     1699  160A  118A  27A8   	fcall	_komut_calistir
  6107     169C  0008               	return
  6108     169D                     __end_of_komut_gonder:
  6109                           
  6110                           	psect	text27
  6111     17A8                     __ptext27:	
  6112 ;; *************** function _komut_calistir *****************
  6113 ;; Defined at:
  6114 ;;		line 9 in file "LCD_library.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  komut           1    wreg     unsigned char 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  komut           1    6[COMMON] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, pclath, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6128 ;;      Params:         0       0       0       0       0
  6129 ;;      Locals:         1       0       0       0       0
  6130 ;;      Temps:          1       0       0       0       0
  6131 ;;      Totals:         2       0       0       0       0
  6132 ;;Total ram usage:        2 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 1
  6135 ;; This function calls:
  6136 ;;		_bekle_milisaniye
  6137 ;; This function is called by:
  6138 ;;		_komut_gonder
  6139 ;;		_kutuphaneyi_baslat
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143     17A8                     _komut_calistir:	
  6144                           ;psect for function _komut_calistir
  6145                           
  6146                           
  6147                           ;incstack = 0
  6148                           ; Regs used in _komut_calistir: [wreg+status,2+status,0+pclath+cstack]
  6149                           ;komut_calistir@komut stored from wreg
  6150     17A8  00F6               	movwf	komut_calistir@komut
  6151                           
  6152                           ;LCD_library.c: 10: RB1 = 0;
  6153     17A9  1283               	bcf	3,5	;RP0=0, select bank0
  6154     17AA  1303               	bcf	3,6	;RP1=0, select bank0
  6155     17AB  1086               	bcf	6,1	;volatile
  6156                           
  6157                           ;LCD_library.c: 11: RB0 = 0;
  6158     17AC  1006               	bcf	6,0	;volatile
  6159                           
  6160                           ;LCD_library.c: 12: RB2 = 1;
  6161     17AD  1506               	bsf	6,2	;volatile
  6162                           
  6163                           ;LCD_library.c: 13: PORTD = (komut & 0xF0);
  6164     17AE  0876               	movf	komut_calistir@komut,w
  6165     17AF  39F0               	andlw	240
  6166     17B0  0088               	movwf	8	;volatile
  6167                           
  6168                           ;LCD_library.c: 14: RB2 = 0;
  6169     17B1  1106               	bcf	6,2	;volatile
  6170                           
  6171                           ;LCD_library.c: 15: bekle_milisaniye(10);
  6172     17B2  300A               	movlw	10
  6173     17B3  00F0               	movwf	bekle_milisaniye@milisaniye
  6174     17B4  3000               	movlw	0
  6175     17B5  00F1               	movwf	bekle_milisaniye@milisaniye+1
  6176     17B6  120A  158A  20C7  160A  118A  	fcall	_bekle_milisaniye
  6177                           
  6178                           ;LCD_library.c: 16: RB2 = 1;
  6179     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  6180     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  6181     17BD  1506               	bsf	6,2	;volatile
  6182                           
  6183                           ;LCD_library.c: 17: PORTD = ((komut & 0x0F) << 4);
  6184     17BE  0876               	movf	komut_calistir@komut,w
  6185     17BF  390F               	andlw	15
  6186     17C0  00F5               	movwf	??_komut_calistir
  6187     17C1  3003               	movlw	3
  6188     17C2                     u1925:
  6189     17C2  1003               	clrc
  6190     17C3  0DF5               	rlf	??_komut_calistir,f
  6191     17C4  3EFF               	addlw	-1
  6192     17C5  1D03               	skipz
  6193     17C6  2FC2               	goto	u1925
  6194     17C7  1003               	clrc
  6195     17C8  0D75               	rlf	??_komut_calistir,w
  6196     17C9  0088               	movwf	8	;volatile
  6197                           
  6198                           ;LCD_library.c: 18: RB2 = 0;
  6199     17CA  1106               	bcf	6,2	;volatile
  6200                           
  6201                           ;LCD_library.c: 19: bekle_milisaniye(10);
  6202     17CB  300A               	movlw	10
  6203     17CC  00F0               	movwf	bekle_milisaniye@milisaniye
  6204     17CD  3000               	movlw	0
  6205     17CE  00F1               	movwf	bekle_milisaniye@milisaniye+1
  6206     17CF  120A  158A  20C7   	fcall	_bekle_milisaniye
  6207     17D2  0008               	return
  6208     17D3                     __end_of_komut_calistir:
  6209                           
  6210                           	psect	text28
  6211     08C7                     __ptext28:	
  6212 ;; *************** function _bekle_milisaniye *****************
  6213 ;; Defined at:
  6214 ;;		line 3 in file "LCD_library.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  milisaniye      2    0[COMMON] unsigned int 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  i               2    3[COMMON] unsigned int 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6228 ;;      Params:         2       0       0       0       0
  6229 ;;      Locals:         2       0       0       0       0
  6230 ;;      Temps:          1       0       0       0       0
  6231 ;;      Totals:         5       0       0       0       0
  6232 ;;Total ram usage:        5 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_main
  6238 ;;		_komut_calistir
  6239 ;;		_metin_yaz
  6240 ;;		_ekran_temizle
  6241 ;;		_kutuphaneyi_baslat
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245     08C7                     _bekle_milisaniye:	
  6246                           ;psect for function _bekle_milisaniye
  6247                           
  6248                           
  6249                           ;LCD_library.c: 4: for (unsigned int i = 0; i < milisaniye; i++) {
  6250                           
  6251                           ;incstack = 0
  6252                           ; Regs used in _bekle_milisaniye: [wreg+status,2]
  6253     08C7  01F3               	clrf	bekle_milisaniye@i
  6254     08C8  01F4               	clrf	bekle_milisaniye@i+1
  6255     08C9                     l98:
  6256     08C9  0871               	movf	bekle_milisaniye@milisaniye+1,w
  6257     08CA  0274               	subwf	bekle_milisaniye@i+1,w
  6258     08CB  1D03               	skipz
  6259     08CC  28CF               	goto	u1915
  6260     08CD  0870               	movf	bekle_milisaniye@milisaniye,w
  6261     08CE  0273               	subwf	bekle_milisaniye@i,w
  6262     08CF                     u1915:
  6263     08CF  1803               	btfsc	3,0
  6264     08D0  0008               	return
  6265                           
  6266                           ;LCD_library.c: 5: _delay((unsigned long)((1)*(4000000/4000.0)));
  6267     08D1  30C7               	movlw	199
  6268     08D2  00F2               	movwf	??_bekle_milisaniye
  6269     08D3                     u3827:
  6270     08D3  28D4               	nop2
  6271     08D4  0BF2               	decfsz	??_bekle_milisaniye,f
  6272     08D5  28D3               	goto	u3827
  6273     08D6  28D7               	nop2
  6274     08D7  28D8               	nop2
  6275     08D8  3001               	movlw	1
  6276     08D9  07F3               	addwf	bekle_milisaniye@i,f
  6277     08DA  1803               	skipnc
  6278     08DB  0AF4               	incf	bekle_milisaniye@i+1,f
  6279     08DC  3000               	movlw	0
  6280     08DD  07F4               	addwf	bekle_milisaniye@i+1,f
  6281     08DE  28C9               	goto	l98
  6282     08DF                     __end_of_bekle_milisaniye:
  6283                           
  6284                           	psect	text29
  6285     16E6                     __ptext29:	
  6286 ;; *************** function ___awtoft *****************
  6287 ;; Defined at:
  6288 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awtoft.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  c               2    8[COMMON] int 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  sign            1   11[COMMON] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  3    8[COMMON] float 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 300/100
  6299 ;;		On exit  : 200/0
  6300 ;;		Unchanged: 200/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6302 ;;      Params:         3       0       0       0       0
  6303 ;;      Locals:         1       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0
  6305 ;;      Totals:         4       0       0       0       0
  6306 ;;Total ram usage:        4 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; Hardware stack levels required when called: 1
  6309 ;; This function calls:
  6310 ;;		___ftpack
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316     16E6                     ___awtoft:	
  6317                           ;psect for function ___awtoft
  6318                           
  6319                           
  6320                           ;incstack = 0
  6321                           ; Regs used in ___awtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6322     16E6  01FB               	clrf	___awtoft@sign
  6323     16E7  1FF9               	btfss	___awtoft@c+1,7
  6324     16E8  2EF0               	goto	l2713
  6325     16E9  09F8               	comf	___awtoft@c,f
  6326     16EA  09F9               	comf	___awtoft@c+1,f
  6327     16EB  0AF8               	incf	___awtoft@c,f
  6328     16EC  1903               	skipnz
  6329     16ED  0AF9               	incf	___awtoft@c+1,f
  6330     16EE  01FB               	clrf	___awtoft@sign
  6331     16EF  0AFB               	incf	___awtoft@sign,f
  6332     16F0                     l2713:
  6333     16F0  0878               	movf	___awtoft@c,w
  6334     16F1  00F0               	movwf	___ftpack@arg
  6335     16F2  0879               	movf	___awtoft@c+1,w
  6336     16F3  00F1               	movwf	___ftpack@arg+1
  6337     16F4  01F2               	clrf	___ftpack@arg+2
  6338     16F5  308E               	movlw	142
  6339     16F6  00F3               	movwf	___ftpack@exp
  6340     16F7  087B               	movf	___awtoft@sign,w
  6341     16F8  00F4               	movwf	___ftpack@sign
  6342     16F9  120A  158A  22BE   	fcall	___ftpack
  6343     16FC  0870               	movf	?___ftpack,w
  6344     16FD  00F8               	movwf	?___awtoft
  6345     16FE  0871               	movf	?___ftpack+1,w
  6346     16FF  00F9               	movwf	?___awtoft+1
  6347     1700  0872               	movf	?___ftpack+2,w
  6348     1701  00FA               	movwf	?___awtoft+2
  6349     1702  0008               	return
  6350     1703                     __end_of___awtoft:
  6351                           
  6352                           	psect	text30
  6353     0ABE                     __ptext30:	
  6354 ;; *************** function ___ftpack *****************
  6355 ;; Defined at:
  6356 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\float.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  arg             3    0[COMMON] unsigned um
  6359 ;;  exp             1    3[COMMON] unsigned char 
  6360 ;;  sign            1    4[COMMON] unsigned char 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  3    0[COMMON] float 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2, status,0, btemp+1
  6367 ;; Tracked objects:
  6368 ;;		On entry : 200/0
  6369 ;;		On exit  : 200/0
  6370 ;;		Unchanged: 200/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6372 ;;      Params:         5       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0
  6374 ;;      Temps:          3       0       0       0       0
  6375 ;;      Totals:         8       0       0       0       0
  6376 ;;Total ram usage:        8 bytes
  6377 ;; Hardware stack levels used: 1
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		___awtoft
  6382 ;;		___ftadd
  6383 ;;		___ftmul
  6384 ;;		___lltoft
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388     0ABE                     ___ftpack:	
  6389                           ;psect for function ___ftpack
  6390                           
  6391                           
  6392                           ;incstack = 0
  6393                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  6394     0ABE  0873               	movf	___ftpack@exp,w
  6395     0ABF  1903               	btfsc	3,2
  6396     0AC0  2AC6               	goto	l1825
  6397     0AC1  0872               	movf	___ftpack@arg+2,w
  6398     0AC2  0471               	iorwf	___ftpack@arg+1,w
  6399     0AC3  0470               	iorwf	___ftpack@arg,w
  6400     0AC4  1D03               	skipz
  6401     0AC5  2AD9               	goto	l1833
  6402     0AC6                     l1825:
  6403     0AC6  3000               	movlw	0
  6404     0AC7  00F0               	movwf	?___ftpack
  6405     0AC8  3000               	movlw	0
  6406     0AC9  00F1               	movwf	?___ftpack+1
  6407     0ACA  3000               	movlw	0
  6408     0ACB  00F2               	movwf	?___ftpack+2
  6409     0ACC  0008               	return
  6410     0ACD                     l1829:
  6411     0ACD  3001               	movlw	1
  6412     0ACE  00FF               	movwf	127
  6413     0ACF  087F               	movf	127,w
  6414     0AD0  07F3               	addwf	___ftpack@exp,f
  6415     0AD1  3001               	movlw	1
  6416     0AD2                     u1955:
  6417     0AD2  1003               	clrc
  6418     0AD3  0CF2               	rrf	___ftpack@arg+2,f
  6419     0AD4  0CF1               	rrf	___ftpack@arg+1,f
  6420     0AD5  0CF0               	rrf	___ftpack@arg,f
  6421     0AD6  3EFF               	addlw	-1
  6422     0AD7  1D03               	skipz
  6423     0AD8  2AD2               	goto	u1955
  6424     0AD9                     l1833:
  6425     0AD9  30FE               	movlw	254
  6426     0ADA  0572               	andwf	___ftpack@arg+2,w
  6427     0ADB  1903               	btfsc	3,2
  6428     0ADC  2AF4               	goto	l1841
  6429     0ADD  2ACD               	goto	l1829
  6430     0ADE                     l1835:
  6431     0ADE  3001               	movlw	1
  6432     0ADF  00FF               	movwf	127
  6433     0AE0  087F               	movf	127,w
  6434     0AE1  07F3               	addwf	___ftpack@exp,f
  6435     0AE2  3001               	movlw	1
  6436     0AE3  07F0               	addwf	___ftpack@arg,f
  6437     0AE4  3000               	movlw	0
  6438     0AE5  1803               	skipnc
  6439     0AE6  3001               	movlw	1
  6440     0AE7  07F1               	addwf	___ftpack@arg+1,f
  6441     0AE8  3000               	movlw	0
  6442     0AE9  1803               	skipnc
  6443     0AEA  3001               	movlw	1
  6444     0AEB  07F2               	addwf	___ftpack@arg+2,f
  6445     0AEC  3001               	movlw	1
  6446     0AED                     u1975:
  6447     0AED  1003               	clrc
  6448     0AEE  0CF2               	rrf	___ftpack@arg+2,f
  6449     0AEF  0CF1               	rrf	___ftpack@arg+1,f
  6450     0AF0  0CF0               	rrf	___ftpack@arg,f
  6451     0AF1  3EFF               	addlw	-1
  6452     0AF2  1D03               	skipz
  6453     0AF3  2AED               	goto	u1975
  6454     0AF4                     l1841:
  6455     0AF4  30FF               	movlw	255
  6456     0AF5  0572               	andwf	___ftpack@arg+2,w
  6457     0AF6  1903               	btfsc	3,2
  6458     0AF7  2B07               	goto	l1845
  6459     0AF8  2ADE               	goto	l1835
  6460     0AF9                     l1847:
  6461     0AF9  3002               	movlw	2
  6462     0AFA  0273               	subwf	___ftpack@exp,w
  6463     0AFB  1C03               	btfss	3,0
  6464     0AFC  2B09               	goto	l539
  6465     0AFD  3001               	movlw	1
  6466     0AFE  02F3               	subwf	___ftpack@exp,f
  6467     0AFF  3001               	movlw	1
  6468     0B00                     u1995:
  6469     0B00  1003               	clrc
  6470     0B01  0DF0               	rlf	___ftpack@arg,f
  6471     0B02  0DF1               	rlf	___ftpack@arg+1,f
  6472     0B03  0DF2               	rlf	___ftpack@arg+2,f
  6473     0B04  3EFF               	addlw	-1
  6474     0B05  1D03               	skipz
  6475     0B06  2B00               	goto	u1995
  6476     0B07                     l1845:
  6477     0B07  1FF1               	btfss	___ftpack@arg+1,7
  6478     0B08  2AF9               	goto	l1847
  6479     0B09                     l539:
  6480     0B09  1873               	btfsc	___ftpack@exp,0
  6481     0B0A  2B11               	goto	l540
  6482     0B0B  30FF               	movlw	255
  6483     0B0C  05F0               	andwf	___ftpack@arg,f
  6484     0B0D  307F               	movlw	127
  6485     0B0E  05F1               	andwf	___ftpack@arg+1,f
  6486     0B0F  30FF               	movlw	255
  6487     0B10  05F2               	andwf	___ftpack@arg+2,f
  6488     0B11                     l540:
  6489     0B11  1003               	clrc
  6490     0B12  0CF3               	rrf	___ftpack@exp,f
  6491     0B13  0873               	movf	___ftpack@exp,w
  6492     0B14  00F5               	movwf	??___ftpack
  6493     0B15  01F6               	clrf	??___ftpack+1
  6494     0B16  01F7               	clrf	??___ftpack+2
  6495     0B17  3010               	movlw	16
  6496     0B18                     u2035:
  6497     0B18  1003               	clrc
  6498     0B19  0DF5               	rlf	??___ftpack,f
  6499     0B1A  0DF6               	rlf	??___ftpack+1,f
  6500     0B1B  0DF7               	rlf	??___ftpack+2,f
  6501     0B1C  3EFF               	addlw	-1
  6502     0B1D  1D03               	skipz
  6503     0B1E  2B18               	goto	u2035
  6504     0B1F  0875               	movf	??___ftpack,w
  6505     0B20  04F0               	iorwf	___ftpack@arg,f
  6506     0B21  0876               	movf	??___ftpack+1,w
  6507     0B22  04F1               	iorwf	___ftpack@arg+1,f
  6508     0B23  0877               	movf	??___ftpack+2,w
  6509     0B24  04F2               	iorwf	___ftpack@arg+2,f
  6510     0B25  0874               	movf	___ftpack@sign,w
  6511     0B26  1903               	btfsc	3,2
  6512     0B27  0008               	return
  6513     0B28  17F2               	bsf	___ftpack@arg+2,7
  6514     0B29  0008               	return
  6515     0B2A                     __end_of___ftpack:
  6516     007E                     btemp	set	126	;btemp
  6517     007E                     wtemp0	set	126
  6518                           
  6519                           	psect	config
  6520                           
  6521                           ;Config register CONFIG @ 0x2007
  6522                           ;	Oscillator Selection bits
  6523                           ;	FOSC = XT, XT oscillator
  6524                           ;	Watchdog Timer Enable bit
  6525                           ;	WDTE = OFF, WDT disabled
  6526                           ;	Power-up Timer Enable bit
  6527                           ;	PWRTE = OFF, PWRT disabled
  6528                           ;	Brown-out Reset Enable bit
  6529                           ;	BOREN = ON, BOR enabled
  6530                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6531                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  6532                           ;	Data EEPROM Memory Code Protection bit
  6533                           ;	CPD = OFF, Data EEPROM code protection off
  6534                           ;	Flash Program Memory Write Enable bits
  6535                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6536                           ;	In-Circuit Debugger Mode bit
  6537                           ;	DEBUG = 0x1, unprogrammed default
  6538                           ;	Flash Program Memory Code Protection bit
  6539                           ;	CP = OFF, Code protection off
  6540     2007                     	org	8199
  6541     2007  3FF9               	dw	16377

Data Sizes:
    Strings     62
    Constant    118
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     17      17
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    metin_yaz@metin	PTR const unsigned char  size(2) Largest target is 17
		 -> main@voltaj_deger_char(BANK1[10]), STR_1(CODE[17]), STR_2(CODE[11]), STR_3(CODE[8]), 
		 -> STR_4(CODE[8]), STR_5(CODE[8]), STR_7(CODE[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@voltaj_deger_char(BANK1[10]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lbdiv->___lbmod
    ___ftmul->___awdiv
    ___bmul->___awdiv
    ___lltoft->___ftpack
    _metin_yaz->_bekle_milisaniye
    _ekran_temizle->_komut_gonder
    _imleci_ayarla->_komut_gonder
    _komut_gonder->_komut_calistir
    _komut_calistir->_bekle_milisaniye
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   43332
                                              0 BANK1     17    17      0
                           ___awtoft
                            ___ftmul
                   _bekle_milisaniye
                      _ekran_temizle
                      _imleci_ayarla
                 _kutuphaneyi_baslat
                          _metin_yaz
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             40    36      4   31493
                                             46 BANK0     33    29      4
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3    6842
                                             18 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     932
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1042
                                              6 COMMON     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3    5309
                                             18 BANK0     10     7      3
                             ___bmul
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     318
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     321
                                              6 COMMON     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3865
                                              3 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     560
                                              0 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMMON     9     3      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1276
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             5     1      4    2069
                                              8 COMMON     5     1      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     411
                                             25 BANK0     13     9      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3172
                                             40 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2999
                                             28 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _metin_yaz                                            3     1      2     961
                                              5 COMMON     3     1      2
                   _bekle_milisaniye
 ---------------------------------------------------------------------------------
 (1) _kutuphaneyi_baslat                                   0     0      0    2202
                   _bekle_milisaniye
                      _ekran_temizle
                     _komut_calistir
 ---------------------------------------------------------------------------------
 (2) _ekran_temizle                                        0     0      0    1112
                   _bekle_milisaniye
                       _komut_gonder
 ---------------------------------------------------------------------------------
 (1) _imleci_ayarla                                        2     1      1     973
                                              8 COMMON     2     1      1
                       _komut_gonder
 ---------------------------------------------------------------------------------
 (3) _komut_gonder                                         1     1      0     589
                                              7 COMMON     1     1      0
                     _komut_calistir
 ---------------------------------------------------------------------------------
 (2) _komut_calistir                                       2     2      0     567
                                              5 COMMON     2     2      0
                   _bekle_milisaniye
 ---------------------------------------------------------------------------------
 (2) _bekle_milisaniye                                     5     3      2     523
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2091
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     ___ftpack (ARG)
     ___lbdiv (ARG)
     ___lbmod (ARG)
   _bekle_milisaniye
   _ekran_temizle
     _bekle_milisaniye
     _komut_gonder
       _komut_calistir
         _bekle_milisaniye
   _imleci_ayarla
     _komut_gonder
   _kutuphaneyi_baslat
     _bekle_milisaniye
     _ekran_temizle
     _komut_calistir
   _metin_yaz
     _bekle_milisaniye
   _sprintf
     ___awdiv
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
         ___ftmul
         ___lbdiv
         ___lbmod
     ___ftge
     ___ftmul
     ___ftneg
     ___ftsub
       ___ftadd
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___bmul
         ___ftmul
     ___lldiv
     ___llmod
     ___lltoft
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     11      11       7       21.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 28 12:15:26 2023

                         pc 0002              ___bmul@product 0021                          l80 0E87  
          _bekle_milisaniye 08C7                          l98 08C9                ___awdiv@sign 007B  
                        fsr 0004         ___wmul@multiplicand 0072                ___ftadd@exp1 0047  
              ___ftadd@exp2 0046                ___ftadd@sign 0045                         l303 1749  
                       l252 0402                         l520 0FE8                         l512 0FBC  
                       l540 0B11                         l293 07D1                         l640 0B7B  
                       l539 0B09                         l563 0D88                         l657 1739  
                       l599 0C2A                         _RB0 0030                         _RB1 0031  
                       _RB2 0032                         _RC3 003B                         _RB5 0035  
                       _RC4 003C                         _RB6 0036                         _RB7 0037  
                       _RC5 003D                         _RC6 003E                         _PR2 0092  
                       fsr0 0004                         indf 0000                ___awmod@sign 0075  
               _sprintf$812 0058              ?_ekran_temizle 0070                        l2013 0D9A  
                      l2005 0D78                        l2017 0DAC                        l2009 0D84  
                      l2201 16BF                        l2027 0DCF                        l2211 0BB7  
                      l2043 0C6A                        l2301 0FE4                        l2061 0C89  
                      l2037 0C56                        l2109 177F                        l2117 1724  
                      l2141 00AD                        l2207 0BAE                        l2233 0C03  
                      l2225 0BE3                        l2073 0CAF                        l2065 0C99  
                      l2315 1741                        l2243 0C16                        l2171 0257  
                      l2413 0B67                        l2309 0FF7                        l2261 0F04  
                      l2077 0CBF                        l2149 0118                        l2165 01F4  
                      l2335 0A70                        l2255 0C39                        l2247 0C26  
                      l2183 031D                        l2175 0272                        l2361 17F1  
                      l2425 0B8A                        l2417 0B77                        l2345 0AA8  
                      l2337 0A80                        l2441 096D                        l2281 0F66  
                      l2265 0F0D                        l2097 1767                        l2443 097D  
                      l2451 09A8                        l2099 1770                        l2603 05B2  
                      l2531 0404                        l2523 03C7                        l2507 03B4  
                      l2357 17E2                        l2429 0B98                        l2349 0AB5  
                      l2461 1783                        l1901 0A32                        l2189 0380  
                      l2621 062C                        l2613 05F0                        l2701 07F7  
                      l2533 0416                        l2525 03FE                        l2391 0B37  
                      l2447 099B                        l2463 1795                        l1911 0A53  
                      l2607 05EE                        l1841 0AF4                        l1833 0AD9  
                      l1825 0AC6                        l2713 16F0                        l2385 170A  
                      l2297 0FD4                        l1835 0ADE                        l2491 09BA  
                      l2395 0B40                        l1915 0A5B                        l1907 0A48  
                      l1931 092B                        l2643 06AA                        l2635 0639  
                      l2539 0426                        l1845 0B07                        l1829 0ACD  
                      l1861 16C3                        l1941 093F                        l2637 0699  
                      l2581 0539                        l2573 04F6                        l2565 04B9  
                      l2549 045D                        l1847 0AF9                        l1927 0924  
                      l2497 16DE                        l1865 16C9                        l1953 0960  
                      l1945 094D                        l2673 07AD                        l2657 06DF  
                      l2649 06C6                        l2593 0580                        l2577 050F  
                      l2681 07C1                        l1963 0D0B                        l1883 0A11  
                      l1939 0931                        l2771 0E77                        l2763 0E60  
                      l2755 0E49                        l2747 0E30                        l1973 0D21  
                      l1949 0958                        l2693 07E7                        l2589 0569  
                      l1991 0D4E                        l1967 0D12                        l2679 07BC  
                      l1985 0D39                        l1889 0A1C                        l1995 0D5A  
                      l1899 0A24                        l2699 039E                        l1997 0D5F  
                      l1999 0D63                        STR_1 0886                        STR_2 0897  
                      STR_3 08AA                        STR_4 08A2                        STR_5 08B2  
                      STR_6 08BF                        STR_7 08BA                        u2105 0A27  
                      u2035 0B18                        u2125 0A33                        u2205 0934  
                      u3015 0FED                        u2135 0A3F                        u3105 0A82  
                      u2145 0A49                        u2225 0945                        u3115 0A97  
                      u2235 094E                        u3205 0B47                        u3125 0AA9  
                      u3045 174A                        u2415 0D64                        u3055 1751  
                      u3305 0971                        u2355 0D3A                        u3235 0B68  
                      u2445 0D79                        u3085 0A74                        u3325 098B  
                      u2605 0CC8                        u3335 099C                        u2385 0D4F  
                      u3265 0B80                        u2545 0C9A                        u1915 08CF  
                      u3355 1788                        u2555 0CA2                        u3515 0518  
                      u1925 17C2                        u2805 0BE5                        u3525 0544  
                      u3375 09EE                        u2815 0BF6                        u3615 0641  
                      u2825 0C04                        u2665 1727                        u1955 0AD2  
                      u2595 0CC0                        u3635 06B3                        u3555 0567  
                      u3475 0473                        u3725 07D8                        u3645 06C0  
                      u1975 0AED                        u2935 0F68                        u3735 07E5  
                      u3575 05F3                        u2945 0F97                        u2865 0C17  
                      u3665 0717                        u3585 0622                        u3817 0E7D  
                      u1995 0B00                        u3827 08D3                        u3675 0777  
                      u2895 0C2F                        u2985 0FD5                        _TMR2 0011  
                      _main 0DE4                ___ftpack@arg 0070                ___ftpack@exp 0073  
                      btemp 007E                        start 0000           ___bmul@multiplier 0022  
              ___ftmul@cntr 0030                ___ftmul@sign 0031                ___fttol@exp1 0045  
              ___fttol@lval 0041                       ?_main 0070             __end_of___awdiv 0A60  
           __end_of___lbdiv 1781             __end_of___ftadd 0DE4             __end_of___awmod 0965  
           __end_of___lbmod 173F             __end_of___ftneg 16A5             __end_of___lldiv 0ABE  
           __end_of___ftmul 0CE8             ___awdiv@divisor 0076             __end_of___llmod 09B1  
           __end_of___ftsub 1720             __end_of___fttol 0BA1                       _T2CON 0012  
           ___awdiv@counter 007A                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
              ___lltoft@exp 007C               ___awtoft@sign 007B             __end_of_dpowers 0886  
                     _scale 0144             __end_of_isdigit 16C1               ___ftpack@sign 0074  
         komut_gonder@komut 0077                       pclath 000A               main@adc_deger 00AF  
                     status 0003                       wtemp0 007E             __end_of_sprintf 07FC  
           ___lbdiv@divisor 0076             ___lbdiv@counter 0078             __initialization 07FC  
              __end_of_main 0EEE                      ??_main 00A0               ___fttol@sign1 0040  
           ??_ekran_temizle 0078                      _ADCON0 001F                      _ADCON1 009F  
       komut_calistir@komut 0076            ___llmod@dividend 0074                      ?_scale 0032  
                    _ADRESH 001E                      _ADRESL 009E            ___awdiv@dividend 0078  
          __end_of___awtoft 1703            __end_of___ftpack 0B2A            __end_of___lltoft 17A8  
             _imleci_ayarla 16D2            __end_of__powers_ 0837                      ___bmul 16C1  
                    ___ftge 17D3                      ___wmul 173F                   ??___awdiv 007A  
                 ??___lbdiv 0077                   ??___ftadd 0042                   ??___awmod 0074  
                 ??___lbmod 0071                   ??___ftneg 0073                   ??___lldiv 0078  
                 ??___ftmul 0029                   ??___llmod 0078                   ??___ftsub 007E  
                 ??___fttol 003D              metin_yaz@metin 0075                      _fround 0006  
          ___awdiv@quotient 007C             ___awmod@divisor 0070              _komut_calistir 17A8  
           ___awmod@counter 0074       ___ftmul@f3_as_product 002D                   ??_isdigit 0070  
                 ??_sprintf 0052            ___lbdiv@dividend 0077    __end_of_bekle_milisaniye 08DF  
           ___lbmod@divisor 0070     __end_of__initialization 07FC             ___lbmod@counter 0074  
                ___ftadd@f1 003C                  ___ftadd@f2 003F                  ___ftge@ff1 0070  
                ___ftge@ff2 0073                  ___ftneg@f1 0070                  ___awtoft@c 0078  
            ?_imleci_ayarla 0078         ___bmul@multiplicand 0020                  ___ftmul@f1 0023  
                ___ftmul@f2 0026                  ___ftsub@f1 004B                  ___ftsub@f2 0048  
                ___fttol@f1 0039              __pcstackCOMMON 0070                  ___lltoft@c 0078  
    __end_of_komut_calistir 17D3               __end_of_scale 039B            ___lbdiv@quotient 0079  
                __div_to_l_ 0EEE             __div_to_l_@exp1 0025             __div_to_l_@cntr 0024  
                   ??_scale 007E             __div_to_l_@quot 0020               __div_to_l_@f1 0070  
             __div_to_l_@f2 0073                  __pmaintext 0DE4                     ?___bmul 0020  
                   ?___ftge 0070              imleci_ayarla@x 0079              imleci_ayarla@y 0078  
                   ?___wmul 0070               ?_komut_gonder 0070             ?_komut_calistir 0070  
                   _CCP1CON 0017                     ?_fround 0032                   ?___awtoft 0078  
                 ?___ftpack 0070                   ?___lltoft 0078           bekle_milisaniye@i 0073  
                __stringtab 0800             ??_imleci_ayarla 0079           __end_of__npowers_ 085E  
            ??_komut_gonder 0077                     ___awdiv 0A07                     ___lbdiv 1760  
                   ___ftadd 0CE8                     ___awmod 091A                     ___lbmod 1720  
                   ___ftneg 169D                     ___lldiv 0A60                     ___ftmul 0C42  
                   ___llmod 0965                     ___ftsub 1703                     ___fttol 0B2A  
                _fround$810 0035                  _fround$809 0038                  ??___awtoft 007B  
                ??___ftpack 0075                  ??___lltoft 007C                     __ptext1 039B  
                   __ptext2 0144                     __ptext3 091A                     __ptext4 0A07  
                   __ptext5 16B3                     __ptext6 0006                     __ptext7 1720  
                   __ptext8 1760                     __ptext9 0C42                 ?__div_to_l_ 0070  
                   _dpowers 085E                     _isdigit 16B3            ___awmod@dividend 0072  
         __end_of_metin_yaz 0A07                     _sprintf 039B        end_of_initialization 07FC  
bekle_milisaniye@milisaniye 0070             ___lldiv@divisor 0070             ___lldiv@counter 007D  
            __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0073               ??__tdiv_to_l_ 0076  
          ___lbmod@dividend 0073       __end_of_ekran_temizle 16B3           ?_bekle_milisaniye 0070  
               ___lbmod@rem 0075          ??_bekle_milisaniye 0072                 ___ftmul@exp 002C  
            __end_of___bmul 16D2              __end_of___ftge 1800              __end_of___wmul 1760  
            __end_of_fround 0144         start_initialization 07FC         __end_of__tdiv_to_l_ 0C42  
      __end_of_komut_gonder 169D             ___llmod@divisor 0070             ___llmod@counter 0079  
          ??_komut_calistir 0075                    ??___bmul 007E                    ??___ftge 0076  
                  ??___wmul 0074                    ??_fround 007E               sprintf@tmpval 0064  
                fround@prec 003B                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0                 sprintf@flag 005C                 sprintf@eexp 0062  
               sprintf@fval 006B                 sprintf@prec 0069  __end_of_kutuphaneyi_baslat 091A  
                  ?___awdiv 0076                    ?___lbdiv 0076                    ?___ftadd 003C  
                  ?___awmod 0070                    ?___lbmod 0070                    ?___ftneg 0070  
                  ?___lldiv 0070                    ?___ftmul 0023                    ?___llmod 0070  
                  ?___ftsub 0048                   __npowers_ 0837                    ?___fttol 0039  
                 __pstrings 0800                 __tdiv_to_l_ 0BA1                ??__div_to_l_ 0076  
                  ?_isdigit 0070                   _scale$811 0035                    ?_sprintf 004E  
                 _metin_yaz 09B1              ___wmul@product 0074       __end_of_imleci_ayarla 16E6  
        __end_of__div_to_l_ 1000                  _ADCON0bits 001F                 __stringbase 080F  
         ___wmul@multiplier 0070                  ?_metin_yaz 0075                _komut_gonder 1697  
                  ___awtoft 16E6                    ___ftpack 0ABE          __end_of__stringtab 0810  
                  ___lltoft 1781                 _isdigit$621 0070                  sprintf@val 005E  
                  __ptext10 16C1                    __ptext11 0BA1                    __ptext20 169D  
                  __ptext12 0EEE                    __ptext21 17D3                    __ptext13 173F  
                  __ptext30 0ABE                    __ptext22 09B1                    __ptext14 1781  
                  __ptext23 08DF                    __ptext15 0965                    __ptext24 16A5  
                  __ptext16 0A60                    __ptext25 16D2                    __ptext17 0B2A  
                  __ptext26 1697                    __ptext18 1703                    __ptext27 17A8  
                  __ptext19 0CE8                    __ptext28 08C7                    __ptext29 16E6  
                  __powers_ 0810                    isdigit@c 0071                    scale@scl 0038  
                 sprintf@ap 005B                 ??_metin_yaz 0077            __tdiv_to_l_@exp1 0025  
                 sprintf@sp 0068            __tdiv_to_l_@cntr 0024            __tdiv_to_l_@quot 0020  
          ___lldiv@dividend 0074                   stringcode 080A       main@voltaj_deger_char 00A2  
        _kutuphaneyi_baslat 08DF                ?__tdiv_to_l_ 0070                    sprintf@c 006E  
                  sprintf@f 004E            ___lldiv@quotient 0079         ?_kutuphaneyi_baslat 0070  
                  stringdir 080A                    stringtab 0800               _ekran_temizle 16A5  
      ??_kutuphaneyi_baslat 0078            main@voltaj_deger 00AC  
