

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 14 17:23:50 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 18/08/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     001E                     _ADRESH	set	30
   175     001F                     _ADCON0	set	31
   176     0008                     _PORTD	set	8
   177     002A                     _RA2	set	42
   178     0029                     _RA1	set	41
   179     00FA                     _GO_nDONE	set	250
   180     0032                     _RB2	set	50
   181     0031                     _RB1	set	49
   182     0030                     _RB0	set	48
   183     009E                     _ADRESL	set	158
   184     009F                     _ADCON1	set	159
   185     0088                     _TRISD	set	136
   186     0086                     _TRISB	set	134
   187     0428                     _TRISA0	set	1064
   188                           
   189                           	psect	strings
   190     0003                     __pstrings:
   191     0003                     stringtab:
   192     0003                     __stringtab:
   193     0003                     stringcode:	
   194                           ;	String table - string pointers are 1 byte each
   195                           
   196     0003                     stringdir:
   197     0003  3000               	movlw	high stringdir
   198     0004  008A               	movwf	10
   199     0005  0804               	movf	4,w
   200     0006  0A84               	incf	4,f
   201     0007  0782               	addwf	2,f
   202     0008                     __stringbase:
   203     0008  3400               	retlw	0
   204     0009                     __end_of__stringtab:
   205     0009                     STR_1:
   206     0009  3446               	retlw	70	;'F'
   207     000A  3475               	retlw	117	;'u'
   208     000B  3472               	retlw	114	;'r'
   209     000C  346B               	retlw	107	;'k'
   210     000D  3461               	retlw	97	;'a'
   211     000E  346E               	retlw	110	;'n'
   212     000F  3420               	retlw	32	;' '
   213     0010  3454               	retlw	84	;'T'
   214     0011  342E               	retlw	46	;'.'
   215     0012  3442               	retlw	66	;'B'
   216     0013  3461               	retlw	97	;'a'
   217     0014  3464               	retlw	100	;'d'
   218     0015  3465               	retlw	101	;'e'
   219     0016  346D               	retlw	109	;'m'
   220     0017  3463               	retlw	99	;'c'
   221     0018  3469               	retlw	105	;'i'
   222     0019  3400               	retlw	0
   223     001A                     STR_3:
   224     001A  3441               	retlw	65	;'A'
   225     001B  3444               	retlw	68	;'D'
   226     001C  3443               	retlw	67	;'C'
   227     001D  3420               	retlw	32	;' '
   228     001E  3444               	retlw	68	;'D'
   229     001F  3445               	retlw	69	;'E'
   230     0020  3447               	retlw	71	;'G'
   231     0021  3445               	retlw	69	;'E'
   232     0022  3452               	retlw	82	;'R'
   233     0023  3449               	retlw	73	;'I'
   234     0024  3420               	retlw	32	;' '
   235     0025  343A               	retlw	58	;':'
   236     0026  3400               	retlw	0
   237     0027                     STR_2:
   238     0027  3447               	retlw	71	;'G'
   239     0028  3432               	retlw	50	;'2'
   240     0029  3431               	retlw	49	;'1'
   241     002A  3430               	retlw	48	;'0'
   242     002B  3431               	retlw	49	;'1'
   243     002C  3430               	retlw	48	;'0'
   244     002D  3434               	retlw	52	;'4'
   245     002E  3430               	retlw	48	;'0'
   246     002F  3431               	retlw	49	;'1'
   247     0030  3436               	retlw	54	;'6'
   248     0031  3400               	retlw	0
   249     0032                     STR_4:
   250     0032  3453               	retlw	83	;'S'
   251     0033  3461               	retlw	97	;'a'
   252     0034  3467               	retlw	103	;'g'
   253     0035  3400               	retlw	0
   254     0036                     STR_5:
   255     0036  3453               	retlw	83	;'S'
   256     0037  346F               	retlw	111	;'o'
   257     0038  346C               	retlw	108	;'l'
   258     0039  3400               	retlw	0
   259                           
   260                           	psect	cinit
   261     07FC                     start_initialization:	
   262                           ; #config settings
   263                           
   264     07FC                     __initialization:
   265     07FC                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268     07FC                     __end_of__initialization:
   269     07FC  0183               	clrf	3
   270     07FD  120A  118A  2EC9   	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	cstackCOMMON
   273     0070                     __pcstackCOMMON:
   274     0070                     ?_lcdBaslangic:
   275     0070                     ?_ekrandaGoster:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     ?_komut:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ?_bekle:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ?_adcOku:	
   285                           ; 1 bytes @ 0x0
   286                           
   287     0070                     ?_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290     0070                     ?_veri:	
   291                           ; 1 bytes @ 0x0
   292                           
   293     0070                     ?___lwdiv:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0070                     bekle@milisaniye:	
   297                           ; 2 bytes @ 0x0
   298                           
   299     0070                     ___lwdiv@divisor:	
   300                           ; 2 bytes @ 0x0
   301                           
   302                           
   303                           ; 2 bytes @ 0x0
   304     0070                     	ds	2
   305     0072                     ??_bekle:
   306     0072                     ___lwdiv@dividend:	
   307                           ; 1 bytes @ 0x2
   308                           
   309                           
   310                           ; 2 bytes @ 0x2
   311     0072                     	ds	1
   312     0073                     bekle@i:
   313                           
   314                           ; 2 bytes @ 0x3
   315     0073                     	ds	1
   316     0074                     ??___lwdiv:
   317     0074                     ___lwdiv@quotient:	
   318                           ; 1 bytes @ 0x4
   319                           
   320                           
   321                           ; 2 bytes @ 0x4
   322     0074                     	ds	1
   323     0075                     ??_komut:
   324     0075                     ??_veri:	
   325                           ; 1 bytes @ 0x5
   326                           
   327     0075                     komut@a:	
   328                           ; 1 bytes @ 0x5
   329                           
   330     0075                     veri@b:	
   331                           ; 1 bytes @ 0x5
   332                           
   333                           
   334                           ; 1 bytes @ 0x5
   335     0075                     	ds	1
   336     0076                     ??_lcdBaslangic:
   337     0076                     ??_ekrandaGoster:	
   338                           ; 1 bytes @ 0x6
   339                           
   340     0076                     ekrandaGoster@metin:	
   341                           ; 1 bytes @ 0x6
   342                           
   343     0076                     ___lwdiv@counter:	
   344                           ; 1 bytes @ 0x6
   345                           
   346                           
   347                           ; 1 bytes @ 0x6
   348     0076                     	ds	1
   349     0077                     ?___lwmod:
   350     0077                     ___lwmod@divisor:	
   351                           ; 2 bytes @ 0x7
   352                           
   353                           
   354                           ; 2 bytes @ 0x7
   355     0077                     	ds	2
   356     0079                     ___lwmod@dividend:
   357                           
   358                           ; 2 bytes @ 0x9
   359     0079                     	ds	2
   360     007B                     ??___lwmod:
   361     007B                     ___lwmod@counter:	
   362                           ; 1 bytes @ 0xB
   363                           
   364                           
   365                           ; 1 bytes @ 0xB
   366     007B                     	ds	1
   367     007C                     ??_adcOku:
   368                           
   369                           ; 1 bytes @ 0xC
   370     007C                     	ds	2
   371     007E                     ??_main:
   372                           
   373                           	psect	cstackBANK0
   374     0020                     __pcstackBANK0:	
   375                           ; 1 bytes @ 0xE
   376                           
   377     0020                     adcOku@adcDeger:
   378                           
   379                           ; 2 bytes @ 0x0
   380     0020                     	ds	2
   381                           
   382                           	psect	maintext
   383     06C9                     __pmaintext:	
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 23 in file "newmain.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : B00/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels required when called: 4
   409 ;; This function calls:
   410 ;;		_adcOku
   411 ;;		_bekle
   412 ;;		_ekrandaGoster
   413 ;;		_komut
   414 ;;		_lcdBaslangic
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420     06C9                     _main:	
   421                           ;psect for function _main
   422                           
   423                           
   424                           ;newmain.c: 26: TRISB = 0;
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   428     06C9  1683               	bsf	3,5	;RP0=1, select bank1
   429     06CA  0186               	clrf	6	;volatile
   430                           
   431                           ;newmain.c: 27: TRISD = 0;
   432     06CB  0188               	clrf	8	;volatile
   433                           
   434                           ;newmain.c: 28: TRISA0 = 1;
   435     06CC  1405               	bsf	5,0	;volatile
   436                           
   437                           ;newmain.c: 31: lcdBaslangic();
   438     06CD  120A  118A  267A  120A  118A  	fcall	_lcdBaslangic
   439                           
   440                           ;newmain.c: 32: ekrandaGoster("Furkan T.Bademci");
   441     06D2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   442     06D3  120A  118A  265E  120A  118A  	fcall	_ekrandaGoster
   443                           
   444                           ;newmain.c: 33: komut(0xC0);
   445     06D8  30C0               	movlw	192
   446     06D9  120A  118A  262F  120A  118A  	fcall	_komut
   447                           
   448                           ;newmain.c: 34: ekrandaGoster("G210104016");
   449     06DE  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   450     06DF  120A  118A  265E  120A  118A  	fcall	_ekrandaGoster
   451                           
   452                           ;newmain.c: 35: bekle(3000);
   453     06E4  30B8               	movlw	184
   454     06E5  00F0               	movwf	bekle@milisaniye
   455     06E6  300B               	movlw	11
   456     06E7  00F1               	movwf	bekle@milisaniye+1
   457     06E8  120A  118A  2642  120A  118A  	fcall	_bekle
   458                           
   459                           ;newmain.c: 37: lcdBaslangic();
   460     06ED  120A  118A  267A  120A  118A  	fcall	_lcdBaslangic
   461                           
   462                           ;newmain.c: 38: ekrandaGoster("ADC DEGERI :");
   463     06F2  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   464     06F3  120A  118A  265E  120A  118A  	fcall	_ekrandaGoster
   465     06F8                     l882:
   466                           
   467                           ;newmain.c: 41: {;newmain.c: 43: komut(0x8C);
   468     06F8  308C               	movlw	140
   469     06F9  120A  118A  262F  120A  118A  	fcall	_komut
   470                           
   471                           ;newmain.c: 44: adcOku();
   472     06FE  120A  118A  2740  120A  118A  	fcall	_adcOku
   473     0703  2EF8               	goto	l882
   474     0704                     __end_of_main:
   475                           
   476                           	psect	text1
   477     067A                     __ptext1:	
   478 ;; *************** function _lcdBaslangic *****************
   479 ;; Defined at:
   480 ;;		line 48 in file "newmain.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/100
   491 ;;		On exit  : 300/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 2
   501 ;; This function calls:
   502 ;;		_komut
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     067A                     _lcdBaslangic:	
   509                           ;psect for function _lcdBaslangic
   510                           
   511                           
   512                           ;newmain.c: 51: komut(0x38);
   513                           
   514                           ;incstack = 0
   515                           ; Regs used in _lcdBaslangic: [wreg+status,2+status,0+pclath+cstack]
   516     067A  3038               	movlw	56
   517     067B  120A  118A  262F  120A  118A  	fcall	_komut
   518                           
   519                           ;newmain.c: 52: komut(0x0C);
   520     0680  300C               	movlw	12
   521     0681  120A  118A  262F  120A  118A  	fcall	_komut
   522                           
   523                           ;newmain.c: 53: komut(0x06);
   524     0686  3006               	movlw	6
   525     0687  120A  118A  262F  120A  118A  	fcall	_komut
   526                           
   527                           ;newmain.c: 54: komut(0x80);
   528     068C  3080               	movlw	128
   529     068D  120A  118A  262F  120A  118A  	fcall	_komut
   530                           
   531                           ;newmain.c: 55: komut(0x01);
   532     0692  3001               	movlw	1
   533     0693  120A  118A  262F   	fcall	_komut
   534     0696  0008               	return
   535     0697                     __end_of_lcdBaslangic:
   536                           
   537                           	psect	text2
   538     0740                     __ptext2:	
   539 ;; *************** function _adcOku *****************
   540 ;; Defined at:
   541 ;;		line 89 in file "newmain.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  adcDeger        2    0[BANK0 ] unsigned int 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 300/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       2       0       0       0
   557 ;;      Temps:          2       0       0       0       0
   558 ;;      Totals:         2       2       0       0       0
   559 ;;Total ram usage:        4 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; Hardware stack levels required when called: 3
   562 ;; This function calls:
   563 ;;		___lwdiv
   564 ;;		___lwmod
   565 ;;		_ekrandaGoster
   566 ;;		_komut
   567 ;;		_veri
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573     0740                     _adcOku:	
   574                           ;psect for function _adcOku
   575                           
   576                           
   577                           ;newmain.c: 91: unsigned int adcDeger;;newmain.c: 94: ADCON1 = 0xc0;
   578                           
   579                           ;incstack = 0
   580                           ; Regs used in _adcOku: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   581     0740  30C0               	movlw	192
   582     0741  1683               	bsf	3,5	;RP0=1, select bank1
   583     0742  009F               	movwf	31	;volatile
   584                           
   585                           ;newmain.c: 95: ADCON0 = 0x85;
   586     0743  3085               	movlw	133
   587     0744  1283               	bcf	3,5	;RP0=0, select bank0
   588     0745  009F               	movwf	31	;volatile
   589     0746                     l66:	
   590                           ;newmain.c: 97: ;
   591                           
   592     0746  191F               	btfsc	31,2	;volatile
   593     0747  2F46               	goto	l66
   594                           
   595                           ;newmain.c: 98: adcDeger = ((ADRESH << 8) | (ADRESL));
   596     0748  081E               	movf	30,w	;volatile
   597     0749  00A1               	movwf	adcOku@adcDeger+1
   598     074A  1683               	bsf	3,5	;RP0=1, select bank1
   599     074B  081E               	movf	30,w	;volatile
   600     074C  1283               	bcf	3,5	;RP0=0, select bank0
   601     074D  00A0               	movwf	adcOku@adcDeger
   602                           
   603                           ;newmain.c: 99: adcDeger = (adcDeger / 3) - 1;
   604     074E  3003               	movlw	3
   605     074F  00F0               	movwf	___lwdiv@divisor
   606     0750  3000               	movlw	0
   607     0751  00F1               	movwf	___lwdiv@divisor+1
   608     0752  0821               	movf	adcOku@adcDeger+1,w
   609     0753  00F3               	movwf	___lwdiv@dividend+1
   610     0754  0820               	movf	adcOku@adcDeger,w
   611     0755  00F2               	movwf	___lwdiv@dividend
   612     0756  120A  118A  2704  120A  118A  	fcall	___lwdiv
   613     075B  0870               	movf	?___lwdiv,w
   614     075C  3EFF               	addlw	255
   615     075D  00A0               	movwf	adcOku@adcDeger
   616     075E  0871               	movf	?___lwdiv+1,w
   617     075F  1803               	skipnc
   618     0760  3E01               	addlw	1
   619     0761  3EFF               	addlw	255
   620     0762  00A1               	movwf	adcOku@adcDeger+1
   621                           
   622                           ;newmain.c: 102: veri((adcDeger / 1000) + 48);
   623     0763  30E8               	movlw	232
   624     0764  00F0               	movwf	___lwdiv@divisor
   625     0765  3003               	movlw	3
   626     0766  00F1               	movwf	___lwdiv@divisor+1
   627     0767  0821               	movf	adcOku@adcDeger+1,w
   628     0768  00F3               	movwf	___lwdiv@dividend+1
   629     0769  0820               	movf	adcOku@adcDeger,w
   630     076A  00F2               	movwf	___lwdiv@dividend
   631     076B  120A  118A  2704  120A  118A  	fcall	___lwdiv
   632     0770  0870               	movf	?___lwdiv,w
   633     0771  3E30               	addlw	48
   634     0772  120A  118A  261E  120A  118A  	fcall	_veri
   635                           
   636                           ;newmain.c: 103: veri(((adcDeger / 100) % 10) + 48);
   637     0777  300A               	movlw	10
   638     0778  00F7               	movwf	___lwmod@divisor
   639     0779  3000               	movlw	0
   640     077A  00F8               	movwf	___lwmod@divisor+1
   641     077B  3064               	movlw	100
   642     077C  00F0               	movwf	___lwdiv@divisor
   643     077D  3000               	movlw	0
   644     077E  00F1               	movwf	___lwdiv@divisor+1
   645     077F  0821               	movf	adcOku@adcDeger+1,w
   646     0780  00F3               	movwf	___lwdiv@dividend+1
   647     0781  0820               	movf	adcOku@adcDeger,w
   648     0782  00F2               	movwf	___lwdiv@dividend
   649     0783  120A  118A  2704  120A  118A  	fcall	___lwdiv
   650     0788  0871               	movf	?___lwdiv+1,w
   651     0789  00FA               	movwf	___lwmod@dividend+1
   652     078A  0870               	movf	?___lwdiv,w
   653     078B  00F9               	movwf	___lwmod@dividend
   654     078C  120A  118A  2697  120A  118A  	fcall	___lwmod
   655     0791  0877               	movf	?___lwmod,w
   656     0792  3E30               	addlw	48
   657     0793  120A  118A  261E  120A  118A  	fcall	_veri
   658                           
   659                           ;newmain.c: 104: veri(((adcDeger / 10) % 10) + 48);
   660     0798  300A               	movlw	10
   661     0799  00F7               	movwf	___lwmod@divisor
   662     079A  3000               	movlw	0
   663     079B  00F8               	movwf	___lwmod@divisor+1
   664     079C  300A               	movlw	10
   665     079D  00F0               	movwf	___lwdiv@divisor
   666     079E  3000               	movlw	0
   667     079F  00F1               	movwf	___lwdiv@divisor+1
   668     07A0  0821               	movf	adcOku@adcDeger+1,w
   669     07A1  00F3               	movwf	___lwdiv@dividend+1
   670     07A2  0820               	movf	adcOku@adcDeger,w
   671     07A3  00F2               	movwf	___lwdiv@dividend
   672     07A4  120A  118A  2704  120A  118A  	fcall	___lwdiv
   673     07A9  0871               	movf	?___lwdiv+1,w
   674     07AA  00FA               	movwf	___lwmod@dividend+1
   675     07AB  0870               	movf	?___lwdiv,w
   676     07AC  00F9               	movwf	___lwmod@dividend
   677     07AD  120A  118A  2697  120A  118A  	fcall	___lwmod
   678     07B2  0877               	movf	?___lwmod,w
   679     07B3  3E30               	addlw	48
   680     07B4  120A  118A  261E  120A  118A  	fcall	_veri
   681                           
   682                           ;newmain.c: 105: veri((adcDeger % 10) + 48);
   683     07B9  300A               	movlw	10
   684     07BA  00F7               	movwf	___lwmod@divisor
   685     07BB  3000               	movlw	0
   686     07BC  00F8               	movwf	___lwmod@divisor+1
   687     07BD  0821               	movf	adcOku@adcDeger+1,w
   688     07BE  00FA               	movwf	___lwmod@dividend+1
   689     07BF  0820               	movf	adcOku@adcDeger,w
   690     07C0  00F9               	movwf	___lwmod@dividend
   691     07C1  120A  118A  2697  120A  118A  	fcall	___lwmod
   692     07C6  0877               	movf	?___lwmod,w
   693     07C7  3E30               	addlw	48
   694     07C8  120A  118A  261E  120A  118A  	fcall	_veri
   695                           
   696                           ;newmain.c: 107: komut(0xC0);
   697     07CD  30C0               	movlw	192
   698     07CE  120A  118A  262F  120A  118A  	fcall	_komut
   699                           
   700                           ;newmain.c: 108: if (RA1 == 1)
   701     07D3  1C85               	btfss	5,1	;volatile
   702     07D4  2FE6               	goto	l858
   703                           
   704                           ;newmain.c: 109: {;newmain.c: 110: ekrandaGoster("Sag");
   705     07D5  302A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   706     07D6  120A  118A  265E  120A  118A  	fcall	_ekrandaGoster
   707     07DB                     l70:	
   708                           ;newmain.c: 112: ;
   709                           
   710     07DB  1885               	btfsc	5,1	;volatile
   711     07DC  2FDB               	goto	l70
   712                           
   713                           ;newmain.c: 113: _delay((unsigned long)((100)*(4000000/4000.0)));
   714     07DD  3082               	movlw	130
   715     07DE  00FD               	movwf	??_adcOku+1
   716     07DF  30DD               	movlw	221
   717     07E0  00FC               	movwf	??_adcOku
   718     07E1                     u417:
   719     07E1  0BFC               	decfsz	??_adcOku,f
   720     07E2  2FE1               	goto	u417
   721     07E3  0BFD               	decfsz	??_adcOku+1,f
   722     07E4  2FE1               	goto	u417
   723     07E5  2FE6               	nop2
   724     07E6                     l858:
   725                           
   726                           ;newmain.c: 114: };newmain.c: 116: if (RA2 == 1)
   727     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   728     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   729     07E8  1D05               	btfss	5,2	;volatile
   730     07E9  0008               	return
   731                           
   732                           ;newmain.c: 117: {;newmain.c: 118: ekrandaGoster("Sol");
   733     07EA  302E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   734     07EB  120A  118A  265E  120A  118A  	fcall	_ekrandaGoster
   735     07F0                     l74:	
   736                           ;newmain.c: 120: ;
   737                           
   738     07F0  1905               	btfsc	5,2	;volatile
   739     07F1  2FF0               	goto	l74
   740                           
   741                           ;newmain.c: 121: _delay((unsigned long)((100)*(4000000/4000.0)));
   742     07F2  3082               	movlw	130
   743     07F3  00FD               	movwf	??_adcOku+1
   744     07F4  30DD               	movlw	221
   745     07F5  00FC               	movwf	??_adcOku
   746     07F6                     u427:
   747     07F6  0BFC               	decfsz	??_adcOku,f
   748     07F7  2FF6               	goto	u427
   749     07F8  0BFD               	decfsz	??_adcOku+1,f
   750     07F9  2FF6               	goto	u427
   751     07FA  2FFB               	nop2
   752     07FB  0008               	return
   753     07FC                     __end_of_adcOku:
   754                           
   755                           	psect	text3
   756     062F                     __ptext3:	
   757 ;; *************** function _komut *****************
   758 ;; Defined at:
   759 ;;		line 58 in file "newmain.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  a               1    wreg     unsigned char 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  a               1    5[COMMON] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, pclath, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 300/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       0       0       0       0
   774 ;;      Locals:         1       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0
   776 ;;      Totals:         1       0       0       0       0
   777 ;;Total ram usage:        1 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 1
   780 ;; This function calls:
   781 ;;		_bekle
   782 ;; This function is called by:
   783 ;;		_main
   784 ;;		_lcdBaslangic
   785 ;;		_adcOku
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789     062F                     _komut:	
   790                           ;psect for function _komut
   791                           
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in _komut: [wreg+status,2+status,0+pclath+cstack]
   795                           ;komut@a stored from wreg
   796     062F  00F5               	movwf	komut@a
   797                           
   798                           ;newmain.c: 61: PORTD = a;
   799     0630  0875               	movf	komut@a,w
   800     0631  1283               	bcf	3,5	;RP0=0, select bank0
   801     0632  1303               	bcf	3,6	;RP1=0, select bank0
   802     0633  0088               	movwf	8	;volatile
   803                           
   804                           ;newmain.c: 62: RB0 = 0;
   805     0634  1006               	bcf	6,0	;volatile
   806                           
   807                           ;newmain.c: 63: RB1 = 0;
   808     0635  1086               	bcf	6,1	;volatile
   809                           
   810                           ;newmain.c: 64: RB2 = 1;
   811     0636  1506               	bsf	6,2	;volatile
   812                           
   813                           ;newmain.c: 65: bekle(10);
   814     0637  300A               	movlw	10
   815     0638  00F0               	movwf	bekle@milisaniye
   816     0639  3000               	movlw	0
   817     063A  00F1               	movwf	bekle@milisaniye+1
   818     063B  120A  118A  2642   	fcall	_bekle
   819                           
   820                           ;newmain.c: 66: RB2 = 0;
   821     063E  1283               	bcf	3,5	;RP0=0, select bank0
   822     063F  1303               	bcf	3,6	;RP1=0, select bank0
   823     0640  1106               	bcf	6,2	;volatile
   824     0641  0008               	return
   825     0642                     __end_of_komut:
   826                           
   827                           	psect	text4
   828     065E                     __ptext4:	
   829 ;; *************** function _ekrandaGoster *****************
   830 ;; Defined at:
   831 ;;		line 80 in file "newmain.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  metin           1    wreg     PTR unsigned char 
   834 ;;		 -> STR_5(4), STR_4(4), STR_3(13), STR_2(11), 
   835 ;;		 -> STR_1(17), 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  metin           1    6[COMMON] PTR unsigned char 
   838 ;;		 -> STR_5(4), STR_4(4), STR_3(13), STR_2(11), 
   839 ;;		 -> STR_1(17), 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 300/0
   846 ;;		On exit  : 300/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         1       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0
   852 ;;      Totals:         1       0       0       0       0
   853 ;;Total ram usage:        1 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 2
   856 ;; This function calls:
   857 ;;		_veri
   858 ;; This function is called by:
   859 ;;		_main
   860 ;;		_adcOku
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864     065E                     _ekrandaGoster:	
   865                           ;psect for function _ekrandaGoster
   866                           
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _ekrandaGoster: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   870                           ;ekrandaGoster@metin stored from wreg
   871     065E  00F6               	movwf	ekrandaGoster@metin
   872     065F                     l772:	
   873                           ;newmain.c: 83: while (*metin)
   874                           
   875     065F  0876               	movf	ekrandaGoster@metin,w
   876     0660  0084               	movwf	4
   877     0661  120A  118A  2003  120A  118A  	fcall	stringdir
   878     0666  3A00               	xorlw	0
   879     0667  1903               	btfsc	3,2
   880     0668  0008               	return
   881                           
   882                           ;newmain.c: 84: {;newmain.c: 85: veri(*metin++);
   883     0669  0876               	movf	ekrandaGoster@metin,w
   884     066A  0084               	movwf	4
   885     066B  120A  118A  2003  120A  118A  	fcall	stringdir
   886     0670  120A  118A  261E  120A  118A  	fcall	_veri
   887     0675  3001               	movlw	1
   888     0676  00FF               	movwf	127
   889     0677  087F               	movf	127,w
   890     0678  07F6               	addwf	ekrandaGoster@metin,f
   891     0679  2E5F               	goto	l772
   892     067A                     __end_of_ekrandaGoster:
   893                           
   894                           	psect	text5
   895     061E                     __ptext5:	
   896 ;; *************** function _veri *****************
   897 ;; Defined at:
   898 ;;		line 69 in file "newmain.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  b               1    wreg     unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  b               1    5[COMMON] unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 300/0
   909 ;;		On exit  : 300/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         1       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0
   915 ;;      Totals:         1       0       0       0       0
   916 ;;Total ram usage:        1 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; Hardware stack levels required when called: 1
   919 ;; This function calls:
   920 ;;		_bekle
   921 ;; This function is called by:
   922 ;;		_ekrandaGoster
   923 ;;		_adcOku
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     061E                     _veri:	
   928                           ;psect for function _veri
   929                           
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in _veri: [wreg+status,2+status,0+pclath+cstack]
   933                           ;veri@b stored from wreg
   934     061E  00F5               	movwf	veri@b
   935                           
   936                           ;newmain.c: 72: PORTD = b;
   937     061F  0875               	movf	veri@b,w
   938     0620  0088               	movwf	8	;volatile
   939                           
   940                           ;newmain.c: 73: RB0 = 1;
   941     0621  1406               	bsf	6,0	;volatile
   942                           
   943                           ;newmain.c: 74: RB1 = 0;
   944     0622  1086               	bcf	6,1	;volatile
   945                           
   946                           ;newmain.c: 75: RB2 = 1;
   947     0623  1506               	bsf	6,2	;volatile
   948                           
   949                           ;newmain.c: 76: bekle(10);
   950     0624  300A               	movlw	10
   951     0625  00F0               	movwf	bekle@milisaniye
   952     0626  3000               	movlw	0
   953     0627  00F1               	movwf	bekle@milisaniye+1
   954     0628  120A  118A  2642   	fcall	_bekle
   955                           
   956                           ;newmain.c: 77: RB2 = 0;
   957     062B  1283               	bcf	3,5	;RP0=0, select bank0
   958     062C  1303               	bcf	3,6	;RP1=0, select bank0
   959     062D  1106               	bcf	6,2	;volatile
   960     062E  0008               	return
   961     062F                     __end_of_veri:
   962                           
   963                           	psect	text6
   964     0642                     __ptext6:	
   965 ;; *************** function _bekle *****************
   966 ;; Defined at:
   967 ;;		line 125 in file "newmain.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  milisaniye      2    0[COMMON] int 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  i               2    3[COMMON] int 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, status,2
   976 ;; Tracked objects:
   977 ;;		On entry : 300/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         2       0       0       0       0
   982 ;;      Locals:         2       0       0       0       0
   983 ;;      Temps:          1       0       0       0       0
   984 ;;      Totals:         5       0       0       0       0
   985 ;;Total ram usage:        5 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_main
   991 ;;		_komut
   992 ;;		_veri
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996     0642                     _bekle:	
   997                           ;psect for function _bekle
   998                           
   999                           
  1000                           ;newmain.c: 127: int i;;newmain.c: 128: for (i = 0; i < milisaniye; i++)
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _bekle: [wreg+status,2]
  1004     0642  01F3               	clrf	bekle@i
  1005     0643  01F4               	clrf	bekle@i+1
  1006     0644                     l80:
  1007     0644  0874               	movf	bekle@i+1,w
  1008     0645  3A80               	xorlw	128
  1009     0646  00F2               	movwf	??_bekle
  1010     0647  0871               	movf	bekle@milisaniye+1,w
  1011     0648  3A80               	xorlw	128
  1012     0649  0272               	subwf	??_bekle,w
  1013     064A  1D03               	skipz
  1014     064B  2E4E               	goto	u215
  1015     064C  0870               	movf	bekle@milisaniye,w
  1016     064D  0273               	subwf	bekle@i,w
  1017     064E                     u215:
  1018     064E  1803               	btfsc	3,0
  1019     064F  0008               	return
  1020                           
  1021                           ;newmain.c: 129: {;newmain.c: 130: _delay((unsigned long)((1)*(4000000/4000.0)));
  1022     0650  30C7               	movlw	199
  1023     0651  00F2               	movwf	??_bekle
  1024     0652                     u437:
  1025     0652  2E53               	nop2
  1026     0653  0BF2               	decfsz	??_bekle,f
  1027     0654  2E52               	goto	u437
  1028     0655  2E56               	nop2
  1029     0656  2E57               	nop2
  1030     0657  3001               	movlw	1
  1031     0658  07F3               	addwf	bekle@i,f
  1032     0659  1803               	skipnc
  1033     065A  0AF4               	incf	bekle@i+1,f
  1034     065B  3000               	movlw	0
  1035     065C  07F4               	addwf	bekle@i+1,f
  1036     065D  2E44               	goto	l80
  1037     065E                     __end_of_bekle:
  1038                           
  1039                           	psect	text7
  1040     0697                     __ptext7:	
  1041 ;; *************** function ___lwmod *****************
  1042 ;; Defined at:
  1043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwmod.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  divisor         2    7[COMMON] unsigned int 
  1046 ;;  dividend        2    9[COMMON] unsigned int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  counter         1   11[COMMON] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  2    7[COMMON] unsigned int 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, btemp+1
  1053 ;; Tracked objects:
  1054 ;;		On entry : 300/0
  1055 ;;		On exit  : 300/0
  1056 ;;		Unchanged: 300/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         4       0       0       0       0
  1059 ;;      Locals:         1       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         5       0       0       0       0
  1062 ;;Total ram usage:        5 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_adcOku
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071     0697                     ___lwmod:	
  1072                           ;psect for function ___lwmod
  1073                           
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1077     0697  0877               	movf	___lwmod@divisor,w
  1078     0698  0478               	iorwf	___lwmod@divisor+1,w
  1079     0699  1903               	btfsc	3,2
  1080     069A  2EC4               	goto	l830
  1081     069B  01FB               	clrf	___lwmod@counter
  1082     069C  0AFB               	incf	___lwmod@counter,f
  1083     069D                     l820:
  1084     069D  1BF8               	btfsc	___lwmod@divisor+1,7
  1085     069E  2EAB               	goto	l822
  1086     069F  3001               	movlw	1
  1087     06A0                     u315:
  1088     06A0  1003               	clrc
  1089     06A1  0DF7               	rlf	___lwmod@divisor,f
  1090     06A2  0DF8               	rlf	___lwmod@divisor+1,f
  1091     06A3  3EFF               	addlw	-1
  1092     06A4  1D03               	skipz
  1093     06A5  2EA0               	goto	u315
  1094     06A6  3001               	movlw	1
  1095     06A7  00FF               	movwf	127
  1096     06A8  087F               	movf	127,w
  1097     06A9  07FB               	addwf	___lwmod@counter,f
  1098     06AA  2E9D               	goto	l820
  1099     06AB                     l822:
  1100     06AB  0878               	movf	___lwmod@divisor+1,w
  1101     06AC  027A               	subwf	___lwmod@dividend+1,w
  1102     06AD  1D03               	skipz
  1103     06AE  2EB1               	goto	u335
  1104     06AF  0877               	movf	___lwmod@divisor,w
  1105     06B0  0279               	subwf	___lwmod@dividend,w
  1106     06B1                     u335:
  1107     06B1  1C03               	skipc
  1108     06B2  2EB9               	goto	l826
  1109     06B3  0877               	movf	___lwmod@divisor,w
  1110     06B4  02F9               	subwf	___lwmod@dividend,f
  1111     06B5  0878               	movf	___lwmod@divisor+1,w
  1112     06B6  1C03               	skipc
  1113     06B7  03FA               	decf	___lwmod@dividend+1,f
  1114     06B8  02FA               	subwf	___lwmod@dividend+1,f
  1115     06B9                     l826:
  1116     06B9  3001               	movlw	1
  1117     06BA                     u345:
  1118     06BA  1003               	clrc
  1119     06BB  0CF8               	rrf	___lwmod@divisor+1,f
  1120     06BC  0CF7               	rrf	___lwmod@divisor,f
  1121     06BD  3EFF               	addlw	-1
  1122     06BE  1D03               	skipz
  1123     06BF  2EBA               	goto	u345
  1124     06C0  3001               	movlw	1
  1125     06C1  02FB               	subwf	___lwmod@counter,f
  1126     06C2  1D03               	btfss	3,2
  1127     06C3  2EAB               	goto	l822
  1128     06C4                     l830:
  1129     06C4  087A               	movf	___lwmod@dividend+1,w
  1130     06C5  00F8               	movwf	?___lwmod+1
  1131     06C6  0879               	movf	___lwmod@dividend,w
  1132     06C7  00F7               	movwf	?___lwmod
  1133     06C8  0008               	return
  1134     06C9                     __end_of___lwmod:
  1135                           
  1136                           	psect	text8
  1137     0704                     __ptext8:	
  1138 ;; *************** function ___lwdiv *****************
  1139 ;; Defined at:
  1140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwdiv.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  divisor         2    0[COMMON] unsigned int 
  1143 ;;  dividend        2    2[COMMON] unsigned int 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  quotient        2    4[COMMON] unsigned int 
  1146 ;;  counter         1    6[COMMON] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2    0[COMMON] unsigned int 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, btemp+1
  1151 ;; Tracked objects:
  1152 ;;		On entry : 300/0
  1153 ;;		On exit  : 300/0
  1154 ;;		Unchanged: 300/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         4       0       0       0       0
  1157 ;;      Locals:         3       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0
  1159 ;;      Totals:         7       0       0       0       0
  1160 ;;Total ram usage:        7 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_adcOku
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169     0704                     ___lwdiv:	
  1170                           ;psect for function ___lwdiv
  1171                           
  1172                           
  1173                           ;incstack = 0
  1174                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1175     0704  01F4               	clrf	___lwdiv@quotient
  1176     0705  01F5               	clrf	___lwdiv@quotient+1
  1177     0706  0870               	movf	___lwdiv@divisor,w
  1178     0707  0471               	iorwf	___lwdiv@divisor+1,w
  1179     0708  1903               	btfsc	3,2
  1180     0709  2F3B               	goto	l808
  1181     070A  01F6               	clrf	___lwdiv@counter
  1182     070B  0AF6               	incf	___lwdiv@counter,f
  1183     070C                     l796:
  1184     070C  1BF1               	btfsc	___lwdiv@divisor+1,7
  1185     070D  2F1A               	goto	l798
  1186     070E  3001               	movlw	1
  1187     070F                     u245:
  1188     070F  1003               	clrc
  1189     0710  0DF0               	rlf	___lwdiv@divisor,f
  1190     0711  0DF1               	rlf	___lwdiv@divisor+1,f
  1191     0712  3EFF               	addlw	-1
  1192     0713  1D03               	skipz
  1193     0714  2F0F               	goto	u245
  1194     0715  3001               	movlw	1
  1195     0716  00FF               	movwf	127
  1196     0717  087F               	movf	127,w
  1197     0718  07F6               	addwf	___lwdiv@counter,f
  1198     0719  2F0C               	goto	l796
  1199     071A                     l798:
  1200     071A  3001               	movlw	1
  1201     071B                     u265:
  1202     071B  1003               	clrc
  1203     071C  0DF4               	rlf	___lwdiv@quotient,f
  1204     071D  0DF5               	rlf	___lwdiv@quotient+1,f
  1205     071E  3EFF               	addlw	-1
  1206     071F  1D03               	skipz
  1207     0720  2F1B               	goto	u265
  1208     0721  0871               	movf	___lwdiv@divisor+1,w
  1209     0722  0273               	subwf	___lwdiv@dividend+1,w
  1210     0723  1D03               	skipz
  1211     0724  2F27               	goto	u275
  1212     0725  0870               	movf	___lwdiv@divisor,w
  1213     0726  0272               	subwf	___lwdiv@dividend,w
  1214     0727                     u275:
  1215     0727  1C03               	skipc
  1216     0728  2F30               	goto	l804
  1217     0729  0870               	movf	___lwdiv@divisor,w
  1218     072A  02F2               	subwf	___lwdiv@dividend,f
  1219     072B  0871               	movf	___lwdiv@divisor+1,w
  1220     072C  1C03               	skipc
  1221     072D  03F3               	decf	___lwdiv@dividend+1,f
  1222     072E  02F3               	subwf	___lwdiv@dividend+1,f
  1223     072F  1474               	bsf	___lwdiv@quotient,0
  1224     0730                     l804:
  1225     0730  3001               	movlw	1
  1226     0731                     u285:
  1227     0731  1003               	clrc
  1228     0732  0CF1               	rrf	___lwdiv@divisor+1,f
  1229     0733  0CF0               	rrf	___lwdiv@divisor,f
  1230     0734  3EFF               	addlw	-1
  1231     0735  1D03               	skipz
  1232     0736  2F31               	goto	u285
  1233     0737  3001               	movlw	1
  1234     0738  02F6               	subwf	___lwdiv@counter,f
  1235     0739  1D03               	btfss	3,2
  1236     073A  2F1A               	goto	l798
  1237     073B                     l808:
  1238     073B  0875               	movf	___lwdiv@quotient+1,w
  1239     073C  00F1               	movwf	?___lwdiv+1
  1240     073D  0874               	movf	___lwdiv@quotient,w
  1241     073E  00F0               	movwf	?___lwdiv
  1242     073F  0008               	return
  1243     0740                     __end_of___lwdiv:
  1244     007E                     btemp	set	126	;btemp
  1245     007E                     wtemp0	set	126
  1246                           
  1247                           	psect	config
  1248                           
  1249                           ;Config register CONFIG @ 0x2007
  1250                           ;	Oscillator Selection bits
  1251                           ;	FOSC = HS, HS oscillator
  1252                           ;	Watchdog Timer Enable bit
  1253                           ;	WDTE = OFF, WDT disabled
  1254                           ;	Power-up Timer Enable bit
  1255                           ;	PWRTE = 0x1, unprogrammed default
  1256                           ;	Brown-out Reset Enable bit
  1257                           ;	BOREN = 0x1, unprogrammed default
  1258                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1259                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1260                           ;	Data EEPROM Memory Code Protection bit
  1261                           ;	CPD = 0x1, unprogrammed default
  1262                           ;	Flash Program Memory Write Enable bits
  1263                           ;	WRT = 0x3, unprogrammed default
  1264                           ;	In-Circuit Debugger Mode bit
  1265                           ;	DEBUG = 0x1, unprogrammed default
  1266                           ;	Flash Program Memory Code Protection bit
  1267                           ;	CP = 0x1, unprogrammed default
  1268     2007                     	org	8199
  1269     2007  3F7A               	dw	16250

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ekrandaGoster@metin	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[11]), STR_3(CODE[13]), STR_4(CODE[4]), 
		 -> STR_5(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_adcOku
    _lcdBaslangic->_komut
    _adcOku->___lwmod
    _komut->_bekle
    _ekrandaGoster->_veri
    _veri->_bekle
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_adcOku

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3102
                             _adcOku
                              _bekle
                      _ekrandaGoster
                              _komut
                       _lcdBaslangic
 ---------------------------------------------------------------------------------
 (1) _lcdBaslangic                                         0     0      0     227
                              _komut
 ---------------------------------------------------------------------------------
 (1) _adcOku                                               4     4      0    2036
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                            ___lwdiv
                            ___lwmod
                      _ekrandaGoster
                              _komut
                               _veri
 ---------------------------------------------------------------------------------
 (2) _komut                                                1     1      0     227
                                              5 COMMON     1     1      0
                              _bekle
 ---------------------------------------------------------------------------------
 (1) _ekrandaGoster                                        1     1      0     407
                                              6 COMMON     1     1      0
                               _veri
 ---------------------------------------------------------------------------------
 (2) _veri                                                 1     1      0     227
                                              5 COMMON     1     1      0
                              _bekle
 ---------------------------------------------------------------------------------
 (3) _bekle                                                5     3      2     205
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     477
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     586
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcOku
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _ekrandaGoster
       _veri
         _bekle
     _komut
       _bekle
     _veri
   _bekle
   _ekrandaGoster
   _komut
   _lcdBaslangic
     _komut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 14 17:23:50 2023

                      pc 0002                       l70 07DB                       l80 0644  
                     l74 07F0                       l66 0746                       fsr 0004  
         ?_ekrandaGoster 0070                      l804 0730                      l820 069D  
                    l822 06AB                      l830 06C4                      l808 073B  
                    l826 06B9                      l772 065F                      l858 07E6  
                    l882 06F8                      l796 070C                      l798 071A  
                    _RA1 0029                      _RB0 0030                      _RA2 002A  
                    _RB1 0031                      _RB2 0032                      u215 064E  
                    u315 06A0                      u245 070F                      u335 06B1  
                    u265 071B                      u345 06BA                      u417 07E1  
                    u275 0727                      u427 07F6                      u285 0731  
                    u437 0652                      fsr0 0004                     STR_1 0009  
                   STR_2 0027                     STR_3 001A                     STR_4 0032  
                   STR_5 0036                     _main 06C9                     _veri 061E  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_veri 0070          __end_of___lwdiv 0740          __end_of___lwmod 06C9  
   __end_of_lcdBaslangic 0697                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _bekle 0642                    _komut 062F  
                  pclath 000A                    veri@b 0075                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0704  
           __end_of_veri 062F          ??_ekrandaGoster 0076                   ??_main 007E  
                 ??_veri 0075                   ?_bekle 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ?_komut 0070                   _TRISA0 0428                   _adcOku 0740  
              ??___lwdiv 0074                ??___lwmod 007B                   bekle@i 0073  
                 komut@a 0075  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_bekle 065E            __end_of_komut 0642                  ??_bekle 0072  
                ??_komut 0075             _lcdBaslangic 067A               __pmaintext 06C9  
                ?_adcOku 0070               __stringtab 0003                  ___lwdiv 0704  
                ___lwmod 0697                  __ptext1 067A                  __ptext2 0740  
                __ptext3 062F                  __ptext4 065E                  __ptext5 061E  
                __ptext6 0642                  __ptext7 0697                  __ptext8 0704  
   end_of_initialization 07FC    __end_of_ekrandaGoster 067A           __end_of_adcOku 07FC  
    start_initialization 07FC          bekle@milisaniye 0070                 ??_adcOku 007C  
              ___latbits 0002            __pcstackBANK0 0020       ekrandaGoster@metin 0076  
       ___lwdiv@dividend 0072           adcOku@adcDeger 0020                 ?___lwdiv 0070  
               ?___lwmod 0077                __pstrings 0003         ___lwdiv@quotient 0074  
               _GO_nDONE 00FA              __stringbase 0008       __end_of__stringtab 0009  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076            ?_lcdBaslangic 0070  
       ___lwmod@dividend 0079           ??_lcdBaslangic 0076                stringcode 0003  
          _ekrandaGoster 065E          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 0003                 stringtab 0003  
