

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 14 19:57:22 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 18/08/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178     0600                     __pidataBANK0:
   179                           
   180                           ;initializer for _yon
   181     0600  3442               	retlw	66
   182     0601  344F               	retlw	79
   183     0602  3453               	retlw	83
   184     0603  3400               	retlw	0
   185     001E                     _ADRESH	set	30
   186     001F                     _ADCON0	set	31
   187     0008                     _PORTD	set	8
   188     0006                     _PORTB	set	6
   189     00FA                     _GO_nDONE	set	250
   190     0032                     _RB2	set	50
   191     0031                     _RB1	set	49
   192     0030                     _RB0	set	48
   193     0037                     _RB7	set	55
   194     0039                     _RC1	set	57
   195     0036                     _RB6	set	54
   196     0038                     _RC0	set	56
   197     0035                     _RB5	set	53
   198     009E                     _ADRESL	set	158
   199     009F                     _ADCON1	set	159
   200     0087                     _TRISC	set	135
   201     0088                     _TRISD	set	136
   202     0086                     _TRISB	set	134
   203     0428                     _TRISA0	set	1064
   204                           
   205                           	psect	strings
   206     0003                     __pstrings:
   207     0003                     stringtab:
   208     0003                     __stringtab:
   209     0003                     stringcode:	
   210                           ;	String table - string pointers are 1 byte each
   211                           
   212     0003                     stringdir:
   213     0003  3000               	movlw	high stringdir
   214     0004  008A               	movwf	10
   215     0005  0804               	movf	4,w
   216     0006  0A84               	incf	4,f
   217     0007  0782               	addwf	2,f
   218     0008                     __stringbase:
   219     0008  3400               	retlw	0
   220     0009                     __end_of__stringtab:
   221     0009                     STR_1:
   222     0009  3446               	retlw	70	;'F'
   223     000A  3475               	retlw	117	;'u'
   224     000B  3472               	retlw	114	;'r'
   225     000C  346B               	retlw	107	;'k'
   226     000D  3461               	retlw	97	;'a'
   227     000E  346E               	retlw	110	;'n'
   228     000F  3420               	retlw	32	;' '
   229     0010  3454               	retlw	84	;'T'
   230     0011  342E               	retlw	46	;'.'
   231     0012  3442               	retlw	66	;'B'
   232     0013  3461               	retlw	97	;'a'
   233     0014  3464               	retlw	100	;'d'
   234     0015  3465               	retlw	101	;'e'
   235     0016  346D               	retlw	109	;'m'
   236     0017  3463               	retlw	99	;'c'
   237     0018  3469               	retlw	105	;'i'
   238     0019  3400               	retlw	0
   239     001A                     STR_3:
   240     001A  3441               	retlw	65	;'A'
   241     001B  3444               	retlw	68	;'D'
   242     001C  3443               	retlw	67	;'C'
   243     001D  3420               	retlw	32	;' '
   244     001E  3444               	retlw	68	;'D'
   245     001F  3445               	retlw	69	;'E'
   246     0020  3447               	retlw	71	;'G'
   247     0021  3445               	retlw	69	;'E'
   248     0022  3452               	retlw	82	;'R'
   249     0023  3449               	retlw	73	;'I'
   250     0024  3420               	retlw	32	;' '
   251     0025  343A               	retlw	58	;':'
   252     0026  3400               	retlw	0
   253     0027                     STR_2:
   254     0027  3447               	retlw	71	;'G'
   255     0028  3432               	retlw	50	;'2'
   256     0029  3431               	retlw	49	;'1'
   257     002A  3430               	retlw	48	;'0'
   258     002B  3431               	retlw	49	;'1'
   259     002C  3430               	retlw	48	;'0'
   260     002D  3434               	retlw	52	;'4'
   261     002E  3430               	retlw	48	;'0'
   262     002F  3431               	retlw	49	;'1'
   263     0030  3436               	retlw	54	;'6'
   264     0031  3400               	retlw	0
   265     0032                     STR_4:
   266     0032  3479               	retlw	121	;'y'
   267     0033  346F               	retlw	111	;'o'
   268     0034  346E               	retlw	110	;'n'
   269     0035  3420               	retlw	32	;' '
   270     0036  343A               	retlw	58	;':'
   271     0037  3420               	retlw	32	;' '
   272     0038  3400               	retlw	0
   273     0039                     STR_5:
   274     0039  3453               	retlw	83	;'S'
   275     003A  3441               	retlw	65	;'A'
   276     003B  3447               	retlw	71	;'G'
   277     003C  3400               	retlw	0
   278     003D                     STR_6:
   279     003D  3453               	retlw	83	;'S'
   280     003E  344F               	retlw	79	;'O'
   281     003F  344C               	retlw	76	;'L'
   282     0040  3400               	retlw	0
   283                           
   284                           	psect	cinit
   285     07E6                     start_initialization:	
   286                           ; #config settings
   287                           
   288     07E6                     __initialization:
   289                           
   290                           ; Initialize objects allocated to BANK0
   291     07E6  120A  118A  2600  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   292     07EB  00A0               	movwf	__pdataBANK0& (0+127)
   293     07EC  120A  118A  2601  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   294     07F1  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   295     07F2  120A  118A  2602  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   296     07F7  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   297     07F8  120A  118A  2603   	fcall	__pidataBANK0+3	;fetch initializer
   298     07FB  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   299     07FC                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302     07FC                     __end_of__initialization:
   303     07FC  0183               	clrf	3
   304     07FD  120A  118A  2EED   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	dataBANK0
   307     0020                     __pdataBANK0:
   308     0020                     _yon:
   309     0020                     	ds	4
   310                           
   311                           	psect	cstackCOMMON
   312     0070                     __pcstackCOMMON:
   313     0070                     ?_lcdBaslangic:
   314     0070                     ?_ekrandaGoster:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_komut:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ?_bekle:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ?_adcOku:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_veri:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?___lwdiv:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     bekle@milisaniye:	
   336                           ; 2 bytes @ 0x0
   337                           
   338     0070                     ___lwdiv@divisor:	
   339                           ; 2 bytes @ 0x0
   340                           
   341                           
   342                           ; 2 bytes @ 0x0
   343     0070                     	ds	2
   344     0072                     ??_bekle:
   345     0072                     ___lwdiv@dividend:	
   346                           ; 1 bytes @ 0x2
   347                           
   348                           
   349                           ; 2 bytes @ 0x2
   350     0072                     	ds	1
   351     0073                     bekle@i:
   352                           
   353                           ; 2 bytes @ 0x3
   354     0073                     	ds	1
   355     0074                     ??___lwdiv:
   356     0074                     ___lwdiv@quotient:	
   357                           ; 1 bytes @ 0x4
   358                           
   359                           
   360                           ; 2 bytes @ 0x4
   361     0074                     	ds	1
   362     0075                     ??_komut:
   363     0075                     ??_veri:	
   364                           ; 1 bytes @ 0x5
   365                           
   366     0075                     komut@a:	
   367                           ; 1 bytes @ 0x5
   368                           
   369     0075                     veri@b:	
   370                           ; 1 bytes @ 0x5
   371                           
   372                           
   373                           ; 1 bytes @ 0x5
   374     0075                     	ds	1
   375     0076                     ??_lcdBaslangic:
   376     0076                     ??_ekrandaGoster:	
   377                           ; 1 bytes @ 0x6
   378                           
   379     0076                     ekrandaGoster@metin:	
   380                           ; 1 bytes @ 0x6
   381                           
   382     0076                     ___lwdiv@counter:	
   383                           ; 1 bytes @ 0x6
   384                           
   385                           
   386                           ; 1 bytes @ 0x6
   387     0076                     	ds	1
   388     0077                     ?___lwmod:
   389     0077                     ___lwmod@divisor:	
   390                           ; 2 bytes @ 0x7
   391                           
   392                           
   393                           ; 2 bytes @ 0x7
   394     0077                     	ds	2
   395     0079                     ___lwmod@dividend:
   396                           
   397                           ; 2 bytes @ 0x9
   398     0079                     	ds	2
   399     007B                     ??___lwmod:
   400     007B                     ___lwmod@counter:	
   401                           ; 1 bytes @ 0xB
   402                           
   403                           
   404                           ; 1 bytes @ 0xB
   405     007B                     	ds	1
   406     007C                     ??_adcOku:
   407     007C                     adcOku@adcDeger:	
   408                           ; 1 bytes @ 0xC
   409                           
   410                           
   411                           ; 2 bytes @ 0xC
   412     007C                     	ds	2
   413                           
   414                           	psect	cstackBANK0
   415     0024                     __pcstackBANK0:
   416     0024                     ??_main:
   417                           
   418                           ; 1 bytes @ 0x0
   419     0024                     	ds	2
   420                           
   421                           	psect	maintext
   422     06ED                     __pmaintext:	
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 26 in file "newmain.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : B00/0
   439 ;;		On exit  : 300/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       2       0       0       0
   445 ;;      Totals:         0       2       0       0       0
   446 ;;Total ram usage:        2 bytes
   447 ;; Hardware stack levels required when called: 3
   448 ;; This function calls:
   449 ;;		_adcOku
   450 ;;		_bekle
   451 ;;		_ekrandaGoster
   452 ;;		_komut
   453 ;;		_lcdBaslangic
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     06ED                     _main:	
   460                           ;psect for function _main
   461                           
   462                           
   463                           ;newmain.c: 29: TRISB = 0;
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   467     06ED  1683               	bsf	3,5	;RP0=1, select bank1
   468     06EE  0186               	clrf	6	;volatile
   469                           
   470                           ;newmain.c: 30: TRISD = 0;
   471     06EF  0188               	clrf	8	;volatile
   472                           
   473                           ;newmain.c: 31: TRISC = 1;
   474     06F0  3001               	movlw	1
   475     06F1  0087               	movwf	7	;volatile
   476                           
   477                           ;newmain.c: 32: PORTB = 0;
   478     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   479     06F3  0186               	clrf	6	;volatile
   480                           
   481                           ;newmain.c: 34: TRISA0 = 1;
   482     06F4  1683               	bsf	3,5	;RP0=1, select bank1
   483     06F5  1405               	bsf	5,0	;volatile
   484                           
   485                           ;newmain.c: 37: lcdBaslangic();
   486     06F6  120A  118A  2662  120A  118A  	fcall	_lcdBaslangic
   487                           
   488                           ;newmain.c: 38: ekrandaGoster("Furkan T.Bademci");
   489     06FB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   490     06FC  120A  118A  2646  120A  118A  	fcall	_ekrandaGoster
   491                           
   492                           ;newmain.c: 39: komut(0xC0);
   493     0701  30C0               	movlw	192
   494     0702  120A  118A  2617  120A  118A  	fcall	_komut
   495                           
   496                           ;newmain.c: 40: ekrandaGoster("G210104016");
   497     0707  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   498     0708  120A  118A  2646  120A  118A  	fcall	_ekrandaGoster
   499                           
   500                           ;newmain.c: 41: bekle(500);
   501     070D  30F4               	movlw	244
   502     070E  00F0               	movwf	bekle@milisaniye
   503     070F  3001               	movlw	1
   504     0710  00F1               	movwf	bekle@milisaniye+1
   505     0711  120A  118A  262A  120A  118A  	fcall	_bekle
   506                           
   507                           ;newmain.c: 43: lcdBaslangic();
   508     0716  120A  118A  2662  120A  118A  	fcall	_lcdBaslangic
   509                           
   510                           ;newmain.c: 44: ekrandaGoster("ADC DEGERI :");
   511     071B  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   512     071C  120A  118A  2646  120A  118A  	fcall	_ekrandaGoster
   513     0721  2F35               	goto	l895
   514     0722                     l907:
   515                           
   516                           ;newmain.c: 56: {;newmain.c: 57: RB6 = 1;
   517     0722  1706               	bsf	6,6	;volatile
   518                           
   519                           ;newmain.c: 58: ekrandaGoster("SAG");
   520     0723  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   521     0724  120A  118A  2646  120A  118A  	fcall	_ekrandaGoster
   522     0729                     l59:	
   523                           ;newmain.c: 60: ;
   524                           
   525     0729  1807               	btfsc	7,0	;volatile
   526     072A  2F29               	goto	l59
   527     072B                     l911:
   528                           
   529                           ;newmain.c: 61: _delay((unsigned long)((100)*(4000000/4000.0)));
   530     072B  3082               	movlw	130
   531     072C  1283               	bcf	3,5	;RP0=0, select bank0
   532     072D  1303               	bcf	3,6	;RP1=0, select bank0
   533     072E  00A5               	movwf	??_main+1
   534     072F  30DD               	movlw	221
   535     0730  00A4               	movwf	??_main
   536     0731                     u417:
   537     0731  0BA4               	decfsz	??_main,f
   538     0732  2F31               	goto	u417
   539     0733  0BA5               	decfsz	??_main+1,f
   540     0734  2F31               	goto	u417
   541     0735                     l895:	
   542                           ;newmain.c: 62: }
   543                           
   544                           
   545                           ;newmain.c: 47: {;newmain.c: 49: komut(0x8C);
   546     0735  308C               	movlw	140
   547     0736  120A  118A  2617  120A  118A  	fcall	_komut
   548                           
   549                           ;newmain.c: 50: adcOku();
   550     073B  120A  118A  275B  120A  118A  	fcall	_adcOku
   551                           
   552                           ;newmain.c: 51: komut(0xC0);
   553     0740  30C0               	movlw	192
   554     0741  120A  118A  2617  120A  118A  	fcall	_komut
   555                           
   556                           ;newmain.c: 52: ekrandaGoster("yon : ");
   557     0746  302A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   558     0747  120A  118A  2646  120A  118A  	fcall	_ekrandaGoster
   559                           
   560                           ;newmain.c: 53: RB5 = 1;
   561     074C  1686               	bsf	6,5	;volatile
   562                           
   563                           ;newmain.c: 55: if (RC0)
   564     074D  1807               	btfsc	7,0	;volatile
   565     074E  2F22               	goto	l907
   566                           
   567                           ;newmain.c: 64: else if (RC1)
   568     074F  1C87               	btfss	7,1	;volatile
   569     0750  2F35               	goto	l895
   570                           
   571                           ;newmain.c: 65: {;newmain.c: 66: ekrandaGoster("SOL");
   572     0751  3035               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   573     0752  120A  118A  2646  120A  118A  	fcall	_ekrandaGoster
   574                           
   575                           ;newmain.c: 67: RB7 = 1;
   576     0757  1786               	bsf	6,7	;volatile
   577     0758                     l64:	
   578                           ;newmain.c: 69: ;
   579                           
   580     0758  1C87               	btfss	7,1	;volatile
   581     0759  2F2B               	goto	l911
   582     075A  2F58               	goto	l64
   583     075B                     __end_of_main:
   584                           
   585                           	psect	text1
   586     0662                     __ptext1:	
   587 ;; *************** function _lcdBaslangic *****************
   588 ;; Defined at:
   589 ;;		line 76 in file "newmain.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/100
   600 ;;		On exit  : 300/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 2
   610 ;; This function calls:
   611 ;;		_komut
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617     0662                     _lcdBaslangic:	
   618                           ;psect for function _lcdBaslangic
   619                           
   620                           
   621                           ;newmain.c: 79: komut(0x38);
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _lcdBaslangic: [wreg+status,2+status,0+pclath+cstack]
   625     0662  3038               	movlw	56
   626     0663  120A  118A  2617  120A  118A  	fcall	_komut
   627                           
   628                           ;newmain.c: 80: komut(0x0C);
   629     0668  300C               	movlw	12
   630     0669  120A  118A  2617  120A  118A  	fcall	_komut
   631                           
   632                           ;newmain.c: 81: komut(0x06);
   633     066E  3006               	movlw	6
   634     066F  120A  118A  2617  120A  118A  	fcall	_komut
   635                           
   636                           ;newmain.c: 82: komut(0x80);
   637     0674  3080               	movlw	128
   638     0675  120A  118A  2617  120A  118A  	fcall	_komut
   639                           
   640                           ;newmain.c: 83: komut(0x01);
   641     067A  3001               	movlw	1
   642     067B  120A  118A  2617   	fcall	_komut
   643     067E  0008               	return
   644     067F                     __end_of_lcdBaslangic:
   645                           
   646                           	psect	text2
   647     0617                     __ptext2:	
   648 ;; *************** function _komut *****************
   649 ;; Defined at:
   650 ;;		line 86 in file "newmain.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  a               1    wreg     unsigned char 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  a               1    5[COMMON] unsigned char 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 300/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         1       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0
   667 ;;      Totals:         1       0       0       0       0
   668 ;;Total ram usage:        1 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 1
   671 ;; This function calls:
   672 ;;		_bekle
   673 ;; This function is called by:
   674 ;;		_main
   675 ;;		_lcdBaslangic
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679     0617                     _komut:	
   680                           ;psect for function _komut
   681                           
   682                           
   683                           ;incstack = 0
   684                           ; Regs used in _komut: [wreg+status,2+status,0+pclath+cstack]
   685                           ;komut@a stored from wreg
   686     0617  00F5               	movwf	komut@a
   687                           
   688                           ;newmain.c: 89: PORTD = a;
   689     0618  0875               	movf	komut@a,w
   690     0619  1283               	bcf	3,5	;RP0=0, select bank0
   691     061A  1303               	bcf	3,6	;RP1=0, select bank0
   692     061B  0088               	movwf	8	;volatile
   693                           
   694                           ;newmain.c: 90: RB0 = 0;
   695     061C  1006               	bcf	6,0	;volatile
   696                           
   697                           ;newmain.c: 91: RB1 = 0;
   698     061D  1086               	bcf	6,1	;volatile
   699                           
   700                           ;newmain.c: 92: RB2 = 1;
   701     061E  1506               	bsf	6,2	;volatile
   702                           
   703                           ;newmain.c: 93: bekle(10);
   704     061F  300A               	movlw	10
   705     0620  00F0               	movwf	bekle@milisaniye
   706     0621  3000               	movlw	0
   707     0622  00F1               	movwf	bekle@milisaniye+1
   708     0623  120A  118A  262A   	fcall	_bekle
   709                           
   710                           ;newmain.c: 94: RB2 = 0;
   711     0626  1283               	bcf	3,5	;RP0=0, select bank0
   712     0627  1303               	bcf	3,6	;RP1=0, select bank0
   713     0628  1106               	bcf	6,2	;volatile
   714     0629  0008               	return
   715     062A                     __end_of_komut:
   716                           
   717                           	psect	text3
   718     0646                     __ptext3:	
   719 ;; *************** function _ekrandaGoster *****************
   720 ;; Defined at:
   721 ;;		line 108 in file "newmain.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  metin           1    wreg     PTR unsigned char 
   724 ;;		 -> STR_6(4), STR_5(4), STR_4(7), STR_3(13), 
   725 ;;		 -> STR_2(11), STR_1(17), 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  metin           1    6[COMMON] PTR unsigned char 
   728 ;;		 -> STR_6(4), STR_5(4), STR_4(7), STR_3(13), 
   729 ;;		 -> STR_2(11), STR_1(17), 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 300/0
   736 ;;		On exit  : 300/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         1       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         1       0       0       0       0
   743 ;;Total ram usage:        1 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 2
   746 ;; This function calls:
   747 ;;		_veri
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753     0646                     _ekrandaGoster:	
   754                           ;psect for function _ekrandaGoster
   755                           
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _ekrandaGoster: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   759                           ;ekrandaGoster@metin stored from wreg
   760     0646  00F6               	movwf	ekrandaGoster@metin
   761     0647                     l857:	
   762                           ;newmain.c: 111: while (*metin)
   763                           
   764     0647  0876               	movf	ekrandaGoster@metin,w
   765     0648  0084               	movwf	4
   766     0649  120A  118A  2003  120A  118A  	fcall	stringdir
   767     064E  3A00               	xorlw	0
   768     064F  1903               	btfsc	3,2
   769     0650  0008               	return
   770                           
   771                           ;newmain.c: 112: {;newmain.c: 113: veri(*metin++);
   772     0651  0876               	movf	ekrandaGoster@metin,w
   773     0652  0084               	movwf	4
   774     0653  120A  118A  2003  120A  118A  	fcall	stringdir
   775     0658  120A  118A  2604  120A  118A  	fcall	_veri
   776     065D  3001               	movlw	1
   777     065E  00FF               	movwf	127
   778     065F  087F               	movf	127,w
   779     0660  07F6               	addwf	ekrandaGoster@metin,f
   780     0661  2E47               	goto	l857
   781     0662                     __end_of_ekrandaGoster:
   782                           
   783                           	psect	text4
   784     075B                     __ptext4:	
   785 ;; *************** function _adcOku *****************
   786 ;; Defined at:
   787 ;;		line 117 in file "newmain.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  adcDeger        2   12[COMMON] unsigned int 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 300/0
   798 ;;		On exit  : 300/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         2       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         2       0       0       0       0
   805 ;;Total ram usage:        2 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 2
   808 ;; This function calls:
   809 ;;		___lwdiv
   810 ;;		___lwmod
   811 ;;		_veri
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817     075B                     _adcOku:	
   818                           ;psect for function _adcOku
   819                           
   820                           
   821                           ;newmain.c: 119: unsigned int adcDeger;;newmain.c: 122: ADCON1 = 0xc0;
   822                           
   823                           ;incstack = 0
   824                           ; Regs used in _adcOku: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   825     075B  30C0               	movlw	192
   826     075C  1683               	bsf	3,5	;RP0=1, select bank1
   827     075D  009F               	movwf	31	;volatile
   828                           
   829                           ;newmain.c: 123: ADCON0 = 0x85;
   830     075E  3085               	movlw	133
   831     075F  1283               	bcf	3,5	;RP0=0, select bank0
   832     0760  009F               	movwf	31	;volatile
   833     0761                     l87:	
   834                           ;newmain.c: 125: ;
   835                           
   836     0761  191F               	btfsc	31,2	;volatile
   837     0762  2F61               	goto	l87
   838                           
   839                           ;newmain.c: 126: adcDeger = ((ADRESH << 8) | (ADRESL));
   840     0763  081E               	movf	30,w	;volatile
   841     0764  00FD               	movwf	adcOku@adcDeger+1
   842     0765  1683               	bsf	3,5	;RP0=1, select bank1
   843     0766  081E               	movf	30,w	;volatile
   844     0767  00FC               	movwf	adcOku@adcDeger
   845                           
   846                           ;newmain.c: 127: adcDeger = (adcDeger / 3) - 1;
   847     0768  3003               	movlw	3
   848     0769  00F0               	movwf	___lwdiv@divisor
   849     076A  3000               	movlw	0
   850     076B  00F1               	movwf	___lwdiv@divisor+1
   851     076C  087D               	movf	adcOku@adcDeger+1,w
   852     076D  00F3               	movwf	___lwdiv@dividend+1
   853     076E  087C               	movf	adcOku@adcDeger,w
   854     076F  00F2               	movwf	___lwdiv@dividend
   855     0770  120A  118A  26B1  120A  118A  	fcall	___lwdiv
   856     0775  0870               	movf	?___lwdiv,w
   857     0776  3EFF               	addlw	255
   858     0777  00FC               	movwf	adcOku@adcDeger
   859     0778  0871               	movf	?___lwdiv+1,w
   860     0779  1803               	skipnc
   861     077A  3E01               	addlw	1
   862     077B  3EFF               	addlw	255
   863     077C  00FD               	movwf	adcOku@adcDeger+1
   864                           
   865                           ;newmain.c: 130: veri((adcDeger / 1000) + 48);
   866     077D  30E8               	movlw	232
   867     077E  00F0               	movwf	___lwdiv@divisor
   868     077F  3003               	movlw	3
   869     0780  00F1               	movwf	___lwdiv@divisor+1
   870     0781  087D               	movf	adcOku@adcDeger+1,w
   871     0782  00F3               	movwf	___lwdiv@dividend+1
   872     0783  087C               	movf	adcOku@adcDeger,w
   873     0784  00F2               	movwf	___lwdiv@dividend
   874     0785  120A  118A  26B1  120A  118A  	fcall	___lwdiv
   875     078A  0870               	movf	?___lwdiv,w
   876     078B  3E30               	addlw	48
   877     078C  120A  118A  2604  120A  118A  	fcall	_veri
   878                           
   879                           ;newmain.c: 131: veri(((adcDeger / 100) % 10) + 48);
   880     0791  300A               	movlw	10
   881     0792  00F7               	movwf	___lwmod@divisor
   882     0793  3000               	movlw	0
   883     0794  00F8               	movwf	___lwmod@divisor+1
   884     0795  3064               	movlw	100
   885     0796  00F0               	movwf	___lwdiv@divisor
   886     0797  3000               	movlw	0
   887     0798  00F1               	movwf	___lwdiv@divisor+1
   888     0799  087D               	movf	adcOku@adcDeger+1,w
   889     079A  00F3               	movwf	___lwdiv@dividend+1
   890     079B  087C               	movf	adcOku@adcDeger,w
   891     079C  00F2               	movwf	___lwdiv@dividend
   892     079D  120A  118A  26B1  120A  118A  	fcall	___lwdiv
   893     07A2  0871               	movf	?___lwdiv+1,w
   894     07A3  00FA               	movwf	___lwmod@dividend+1
   895     07A4  0870               	movf	?___lwdiv,w
   896     07A5  00F9               	movwf	___lwmod@dividend
   897     07A6  120A  118A  267F  120A  118A  	fcall	___lwmod
   898     07AB  0877               	movf	?___lwmod,w
   899     07AC  3E30               	addlw	48
   900     07AD  120A  118A  2604  120A  118A  	fcall	_veri
   901                           
   902                           ;newmain.c: 132: veri(((adcDeger / 10) % 10) + 48);
   903     07B2  300A               	movlw	10
   904     07B3  00F7               	movwf	___lwmod@divisor
   905     07B4  3000               	movlw	0
   906     07B5  00F8               	movwf	___lwmod@divisor+1
   907     07B6  300A               	movlw	10
   908     07B7  00F0               	movwf	___lwdiv@divisor
   909     07B8  3000               	movlw	0
   910     07B9  00F1               	movwf	___lwdiv@divisor+1
   911     07BA  087D               	movf	adcOku@adcDeger+1,w
   912     07BB  00F3               	movwf	___lwdiv@dividend+1
   913     07BC  087C               	movf	adcOku@adcDeger,w
   914     07BD  00F2               	movwf	___lwdiv@dividend
   915     07BE  120A  118A  26B1  120A  118A  	fcall	___lwdiv
   916     07C3  0871               	movf	?___lwdiv+1,w
   917     07C4  00FA               	movwf	___lwmod@dividend+1
   918     07C5  0870               	movf	?___lwdiv,w
   919     07C6  00F9               	movwf	___lwmod@dividend
   920     07C7  120A  118A  267F  120A  118A  	fcall	___lwmod
   921     07CC  0877               	movf	?___lwmod,w
   922     07CD  3E30               	addlw	48
   923     07CE  120A  118A  2604  120A  118A  	fcall	_veri
   924                           
   925                           ;newmain.c: 133: veri((adcDeger % 10) + 48);
   926     07D3  300A               	movlw	10
   927     07D4  00F7               	movwf	___lwmod@divisor
   928     07D5  3000               	movlw	0
   929     07D6  00F8               	movwf	___lwmod@divisor+1
   930     07D7  087D               	movf	adcOku@adcDeger+1,w
   931     07D8  00FA               	movwf	___lwmod@dividend+1
   932     07D9  087C               	movf	adcOku@adcDeger,w
   933     07DA  00F9               	movwf	___lwmod@dividend
   934     07DB  120A  118A  267F  120A  118A  	fcall	___lwmod
   935     07E0  0877               	movf	?___lwmod,w
   936     07E1  3E30               	addlw	48
   937     07E2  120A  118A  2604   	fcall	_veri
   938     07E5  0008               	return
   939     07E6                     __end_of_adcOku:
   940                           
   941                           	psect	text5
   942     0604                     __ptext5:	
   943 ;; *************** function _veri *****************
   944 ;; Defined at:
   945 ;;		line 97 in file "newmain.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  b               1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  b               1    5[COMMON] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 300/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         1       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0
   962 ;;      Totals:         1       0       0       0       0
   963 ;;Total ram usage:        1 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 1
   966 ;; This function calls:
   967 ;;		_bekle
   968 ;; This function is called by:
   969 ;;		_ekrandaGoster
   970 ;;		_adcOku
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974     0604                     _veri:	
   975                           ;psect for function _veri
   976                           
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in _veri: [wreg+status,2+status,0+pclath+cstack]
   980                           ;veri@b stored from wreg
   981     0604  00F5               	movwf	veri@b
   982                           
   983                           ;newmain.c: 100: PORTD = b;
   984     0605  0875               	movf	veri@b,w
   985     0606  1283               	bcf	3,5	;RP0=0, select bank0
   986     0607  1303               	bcf	3,6	;RP1=0, select bank0
   987     0608  0088               	movwf	8	;volatile
   988                           
   989                           ;newmain.c: 101: RB0 = 1;
   990     0609  1406               	bsf	6,0	;volatile
   991                           
   992                           ;newmain.c: 102: RB1 = 0;
   993     060A  1086               	bcf	6,1	;volatile
   994                           
   995                           ;newmain.c: 103: RB2 = 1;
   996     060B  1506               	bsf	6,2	;volatile
   997                           
   998                           ;newmain.c: 104: bekle(10);
   999     060C  300A               	movlw	10
  1000     060D  00F0               	movwf	bekle@milisaniye
  1001     060E  3000               	movlw	0
  1002     060F  00F1               	movwf	bekle@milisaniye+1
  1003     0610  120A  118A  262A   	fcall	_bekle
  1004                           
  1005                           ;newmain.c: 105: RB2 = 0;
  1006     0613  1283               	bcf	3,5	;RP0=0, select bank0
  1007     0614  1303               	bcf	3,6	;RP1=0, select bank0
  1008     0615  1106               	bcf	6,2	;volatile
  1009     0616  0008               	return
  1010     0617                     __end_of_veri:
  1011                           
  1012                           	psect	text6
  1013     062A                     __ptext6:	
  1014 ;; *************** function _bekle *****************
  1015 ;; Defined at:
  1016 ;;		line 136 in file "newmain.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  milisaniye      2    0[COMMON] int 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  i               2    3[COMMON] int 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2
  1025 ;; Tracked objects:
  1026 ;;		On entry : 300/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         2       0       0       0       0
  1031 ;;      Locals:         2       0       0       0       0
  1032 ;;      Temps:          1       0       0       0       0
  1033 ;;      Totals:         5       0       0       0       0
  1034 ;;Total ram usage:        5 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;;		_komut
  1041 ;;		_veri
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045     062A                     _bekle:	
  1046                           ;psect for function _bekle
  1047                           
  1048                           
  1049                           ;newmain.c: 138: int i;;newmain.c: 139: for (i = 0; i < milisaniye; i++)
  1050                           
  1051                           ;incstack = 0
  1052                           ; Regs used in _bekle: [wreg+status,2]
  1053     062A  01F3               	clrf	bekle@i
  1054     062B  01F4               	clrf	bekle@i+1
  1055     062C                     l93:
  1056     062C  0874               	movf	bekle@i+1,w
  1057     062D  3A80               	xorlw	128
  1058     062E  00F2               	movwf	??_bekle
  1059     062F  0871               	movf	bekle@milisaniye+1,w
  1060     0630  3A80               	xorlw	128
  1061     0631  0272               	subwf	??_bekle,w
  1062     0632  1D03               	skipz
  1063     0633  2E36               	goto	u215
  1064     0634  0870               	movf	bekle@milisaniye,w
  1065     0635  0273               	subwf	bekle@i,w
  1066     0636                     u215:
  1067     0636  1803               	btfsc	3,0
  1068     0637  0008               	return
  1069                           
  1070                           ;newmain.c: 140: {;newmain.c: 141: _delay((unsigned long)((1)*(4000000/4000.0)));
  1071     0638  30C7               	movlw	199
  1072     0639  00F2               	movwf	??_bekle
  1073     063A                     u427:
  1074     063A  2E3B               	nop2
  1075     063B  0BF2               	decfsz	??_bekle,f
  1076     063C  2E3A               	goto	u427
  1077     063D  2E3E               	nop2
  1078     063E  2E3F               	nop2
  1079     063F  3001               	movlw	1
  1080     0640  07F3               	addwf	bekle@i,f
  1081     0641  1803               	skipnc
  1082     0642  0AF4               	incf	bekle@i+1,f
  1083     0643  3000               	movlw	0
  1084     0644  07F4               	addwf	bekle@i+1,f
  1085     0645  2E2C               	goto	l93
  1086     0646                     __end_of_bekle:
  1087                           
  1088                           	psect	text7
  1089     067F                     __ptext7:	
  1090 ;; *************** function ___lwmod *****************
  1091 ;; Defined at:
  1092 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwmod.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  divisor         2    7[COMMON] unsigned int 
  1095 ;;  dividend        2    9[COMMON] unsigned int 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  counter         1   11[COMMON] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2    7[COMMON] unsigned int 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, btemp+1
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         4       0       0       0       0
  1108 ;;      Locals:         1       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0
  1110 ;;      Totals:         5       0       0       0       0
  1111 ;;Total ram usage:        5 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_adcOku
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120     067F                     ___lwmod:	
  1121                           ;psect for function ___lwmod
  1122                           
  1123                           
  1124                           ;incstack = 0
  1125                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1126     067F  0877               	movf	___lwmod@divisor,w
  1127     0680  0478               	iorwf	___lwmod@divisor+1,w
  1128     0681  1903               	btfsc	3,2
  1129     0682  2EAC               	goto	l845
  1130     0683  01FB               	clrf	___lwmod@counter
  1131     0684  0AFB               	incf	___lwmod@counter,f
  1132     0685                     l835:
  1133     0685  1BF8               	btfsc	___lwmod@divisor+1,7
  1134     0686  2E93               	goto	l837
  1135     0687  3001               	movlw	1
  1136     0688                     u305:
  1137     0688  1003               	clrc
  1138     0689  0DF7               	rlf	___lwmod@divisor,f
  1139     068A  0DF8               	rlf	___lwmod@divisor+1,f
  1140     068B  3EFF               	addlw	-1
  1141     068C  1D03               	skipz
  1142     068D  2E88               	goto	u305
  1143     068E  3001               	movlw	1
  1144     068F  00FF               	movwf	127
  1145     0690  087F               	movf	127,w
  1146     0691  07FB               	addwf	___lwmod@counter,f
  1147     0692  2E85               	goto	l835
  1148     0693                     l837:
  1149     0693  0878               	movf	___lwmod@divisor+1,w
  1150     0694  027A               	subwf	___lwmod@dividend+1,w
  1151     0695  1D03               	skipz
  1152     0696  2E99               	goto	u325
  1153     0697  0877               	movf	___lwmod@divisor,w
  1154     0698  0279               	subwf	___lwmod@dividend,w
  1155     0699                     u325:
  1156     0699  1C03               	skipc
  1157     069A  2EA1               	goto	l841
  1158     069B  0877               	movf	___lwmod@divisor,w
  1159     069C  02F9               	subwf	___lwmod@dividend,f
  1160     069D  0878               	movf	___lwmod@divisor+1,w
  1161     069E  1C03               	skipc
  1162     069F  03FA               	decf	___lwmod@dividend+1,f
  1163     06A0  02FA               	subwf	___lwmod@dividend+1,f
  1164     06A1                     l841:
  1165     06A1  3001               	movlw	1
  1166     06A2                     u335:
  1167     06A2  1003               	clrc
  1168     06A3  0CF8               	rrf	___lwmod@divisor+1,f
  1169     06A4  0CF7               	rrf	___lwmod@divisor,f
  1170     06A5  3EFF               	addlw	-1
  1171     06A6  1D03               	skipz
  1172     06A7  2EA2               	goto	u335
  1173     06A8  3001               	movlw	1
  1174     06A9  02FB               	subwf	___lwmod@counter,f
  1175     06AA  1D03               	btfss	3,2
  1176     06AB  2E93               	goto	l837
  1177     06AC                     l845:
  1178     06AC  087A               	movf	___lwmod@dividend+1,w
  1179     06AD  00F8               	movwf	?___lwmod+1
  1180     06AE  0879               	movf	___lwmod@dividend,w
  1181     06AF  00F7               	movwf	?___lwmod
  1182     06B0  0008               	return
  1183     06B1                     __end_of___lwmod:
  1184                           
  1185                           	psect	text8
  1186     06B1                     __ptext8:	
  1187 ;; *************** function ___lwdiv *****************
  1188 ;; Defined at:
  1189 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwdiv.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  divisor         2    0[COMMON] unsigned int 
  1192 ;;  dividend        2    2[COMMON] unsigned int 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  quotient        2    4[COMMON] unsigned int 
  1195 ;;  counter         1    6[COMMON] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2    0[COMMON] unsigned int 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, btemp+1
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/100
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1205 ;;      Params:         4       0       0       0       0
  1206 ;;      Locals:         3       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0
  1208 ;;      Totals:         7       0       0       0       0
  1209 ;;Total ram usage:        7 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_adcOku
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218     06B1                     ___lwdiv:	
  1219                           ;psect for function ___lwdiv
  1220                           
  1221                           
  1222                           ;incstack = 0
  1223                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1224     06B1  01F4               	clrf	___lwdiv@quotient
  1225     06B2  01F5               	clrf	___lwdiv@quotient+1
  1226     06B3  0870               	movf	___lwdiv@divisor,w
  1227     06B4  0471               	iorwf	___lwdiv@divisor+1,w
  1228     06B5  1903               	btfsc	3,2
  1229     06B6  2EE8               	goto	l823
  1230     06B7  01F6               	clrf	___lwdiv@counter
  1231     06B8  0AF6               	incf	___lwdiv@counter,f
  1232     06B9                     l811:
  1233     06B9  1BF1               	btfsc	___lwdiv@divisor+1,7
  1234     06BA  2EC7               	goto	l813
  1235     06BB  3001               	movlw	1
  1236     06BC                     u235:
  1237     06BC  1003               	clrc
  1238     06BD  0DF0               	rlf	___lwdiv@divisor,f
  1239     06BE  0DF1               	rlf	___lwdiv@divisor+1,f
  1240     06BF  3EFF               	addlw	-1
  1241     06C0  1D03               	skipz
  1242     06C1  2EBC               	goto	u235
  1243     06C2  3001               	movlw	1
  1244     06C3  00FF               	movwf	127
  1245     06C4  087F               	movf	127,w
  1246     06C5  07F6               	addwf	___lwdiv@counter,f
  1247     06C6  2EB9               	goto	l811
  1248     06C7                     l813:
  1249     06C7  3001               	movlw	1
  1250     06C8                     u255:
  1251     06C8  1003               	clrc
  1252     06C9  0DF4               	rlf	___lwdiv@quotient,f
  1253     06CA  0DF5               	rlf	___lwdiv@quotient+1,f
  1254     06CB  3EFF               	addlw	-1
  1255     06CC  1D03               	skipz
  1256     06CD  2EC8               	goto	u255
  1257     06CE  0871               	movf	___lwdiv@divisor+1,w
  1258     06CF  0273               	subwf	___lwdiv@dividend+1,w
  1259     06D0  1D03               	skipz
  1260     06D1  2ED4               	goto	u265
  1261     06D2  0870               	movf	___lwdiv@divisor,w
  1262     06D3  0272               	subwf	___lwdiv@dividend,w
  1263     06D4                     u265:
  1264     06D4  1C03               	skipc
  1265     06D5  2EDD               	goto	l819
  1266     06D6  0870               	movf	___lwdiv@divisor,w
  1267     06D7  02F2               	subwf	___lwdiv@dividend,f
  1268     06D8  0871               	movf	___lwdiv@divisor+1,w
  1269     06D9  1C03               	skipc
  1270     06DA  03F3               	decf	___lwdiv@dividend+1,f
  1271     06DB  02F3               	subwf	___lwdiv@dividend+1,f
  1272     06DC  1474               	bsf	___lwdiv@quotient,0
  1273     06DD                     l819:
  1274     06DD  3001               	movlw	1
  1275     06DE                     u275:
  1276     06DE  1003               	clrc
  1277     06DF  0CF1               	rrf	___lwdiv@divisor+1,f
  1278     06E0  0CF0               	rrf	___lwdiv@divisor,f
  1279     06E1  3EFF               	addlw	-1
  1280     06E2  1D03               	skipz
  1281     06E3  2EDE               	goto	u275
  1282     06E4  3001               	movlw	1
  1283     06E5  02F6               	subwf	___lwdiv@counter,f
  1284     06E6  1D03               	btfss	3,2
  1285     06E7  2EC7               	goto	l813
  1286     06E8                     l823:
  1287     06E8  0875               	movf	___lwdiv@quotient+1,w
  1288     06E9  00F1               	movwf	?___lwdiv+1
  1289     06EA  0874               	movf	___lwdiv@quotient,w
  1290     06EB  00F0               	movwf	?___lwdiv
  1291     06EC  0008               	return
  1292     06ED                     __end_of___lwdiv:
  1293     007E                     btemp	set	126	;btemp
  1294     007E                     wtemp0	set	126
  1295                           
  1296                           	psect	config
  1297                           
  1298                           ;Config register CONFIG @ 0x2007
  1299                           ;	Oscillator Selection bits
  1300                           ;	FOSC = HS, HS oscillator
  1301                           ;	Watchdog Timer Enable bit
  1302                           ;	WDTE = OFF, WDT disabled
  1303                           ;	Power-up Timer Enable bit
  1304                           ;	PWRTE = 0x1, unprogrammed default
  1305                           ;	Brown-out Reset Enable bit
  1306                           ;	BOREN = 0x1, unprogrammed default
  1307                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1308                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1309                           ;	Data EEPROM Memory Code Protection bit
  1310                           ;	CPD = 0x1, unprogrammed default
  1311                           ;	Flash Program Memory Write Enable bits
  1312                           ;	WRT = 0x3, unprogrammed default
  1313                           ;	In-Circuit Debugger Mode bit
  1314                           ;	DEBUG = 0x1, unprogrammed default
  1315                           ;	Flash Program Memory Code Protection bit
  1316                           ;	CP = 0x1, unprogrammed default
  1317     2007                     	org	8199
  1318     2007  3F7A               	dw	16250

Data Sizes:
    Strings     56
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ekrandaGoster@metin	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[11]), STR_3(CODE[13]), STR_4(CODE[7]), 
		 -> STR_5(CODE[4]), STR_6(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_adcOku
    _lcdBaslangic->_komut
    _komut->_bekle
    _ekrandaGoster->_veri
    _adcOku->___lwmod
    _veri->_bekle
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2495
                                              0 BANK0      2     2      0
                             _adcOku
                              _bekle
                      _ekrandaGoster
                              _komut
                       _lcdBaslangic
 ---------------------------------------------------------------------------------
 (1) _lcdBaslangic                                         0     0      0     227
                              _komut
 ---------------------------------------------------------------------------------
 (2) _komut                                                1     1      0     227
                                              5 COMMON     1     1      0
                              _bekle
 ---------------------------------------------------------------------------------
 (1) _ekrandaGoster                                        1     1      0     434
                                              6 COMMON     1     1      0
                               _veri
 ---------------------------------------------------------------------------------
 (1) _adcOku                                               2     2      0    1402
                                             12 COMMON     2     2      0
                            ___lwdiv
                            ___lwmod
                               _veri
 ---------------------------------------------------------------------------------
 (2) _veri                                                 1     1      0     227
                                              5 COMMON     1     1      0
                              _bekle
 ---------------------------------------------------------------------------------
 (3) _bekle                                                5     3      2     205
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     477
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     586
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcOku
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _veri
       _bekle
   _bekle
   _ekrandaGoster
     _veri
   _komut
     _bekle
   _lcdBaslangic
     _komut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       6       5        7.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14      12        0.0%
ABS                  0      0      14       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 14 19:57:22 2023

                      pc 0002                       l64 0758                       l59 0729  
                     l93 062C                       l87 0761                       fsr 0004  
         ?_ekrandaGoster 0070                      l811 06B9                      l813 06C7  
                    l823 06E8                      l911 072B                      l841 06A1  
                    l819 06DD                      l835 0685                      l907 0722  
                    l837 0693                      l845 06AC                      l857 0647  
                    l895 0735                      _RB0 0030                      _RB1 0031  
                    _RC0 0038                      _RB2 0032                      _RC1 0039  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    u215 0636                      u305 0688                      u235 06BC  
                    u325 0699                      u255 06C8                      u335 06A2  
                    u265 06D4                      u417 0731                      u275 06DE  
                    u427 063A                      fsr0 0004                      _yon 0020  
                   STR_1 0009                     STR_2 0027                     STR_3 001A  
                   STR_4 0032                     STR_5 0039                     STR_6 003D  
                   _main 06ED                     _veri 0604                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_veri 0070  
        __end_of___lwdiv 06ED          __end_of___lwmod 06B1     __end_of_lcdBaslangic 067F  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _bekle 062A  
                  _komut 0617                    pclath 000A                    veri@b 0075  
                  status 0003                    wtemp0 007E          __initialization 07E6  
           __end_of_main 075B             __end_of_veri 0617          ??_ekrandaGoster 0076  
                 ??_main 0024                   ??_veri 0075                   ?_bekle 0070  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   ?_komut 0070                   _TRISA0 0428  
                 _adcOku 075B                ??___lwdiv 0074                ??___lwmod 007B  
                 bekle@i 0073                   komut@a 0075  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0600            __end_of_bekle 0646  
          __end_of_komut 062A                  ??_bekle 0072                  ??_komut 0075  
           _lcdBaslangic 0662               __pmaintext 06ED                  ?_adcOku 0070  
             __stringtab 0003                  ___lwdiv 06B1                  ___lwmod 067F  
                __ptext1 0662                  __ptext2 0617                  __ptext3 0646  
                __ptext4 075B                  __ptext5 0604                  __ptext6 062A  
                __ptext7 067F                  __ptext8 06B1     end_of_initialization 07FC  
  __end_of_ekrandaGoster 0662           __end_of_adcOku 07E6      start_initialization 07E6  
        bekle@milisaniye 0070                 ??_adcOku 007C              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 0024       ekrandaGoster@metin 0076  
       ___lwdiv@dividend 0072           adcOku@adcDeger 007C                 ?___lwdiv 0070  
               ?___lwmod 0077                __pstrings 0003         ___lwdiv@quotient 0074  
               _GO_nDONE 00FA              __stringbase 0008       __end_of__stringtab 0009  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076            ?_lcdBaslangic 0070  
       ___lwmod@dividend 0079           ??_lcdBaslangic 0076                stringcode 0003  
          _ekrandaGoster 0646          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 0003                 stringtab 0003  
