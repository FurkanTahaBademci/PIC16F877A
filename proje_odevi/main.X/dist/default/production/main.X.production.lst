

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 14 15:47:45 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 18/08/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     001E                     _ADRESH	set	30
   174     001F                     _ADCON0	set	31
   175     0008                     _PORTD	set	8
   176     00FA                     _GO_nDONE	set	250
   177     0032                     _RB2	set	50
   178     0031                     _RB1	set	49
   179     0030                     _RB0	set	48
   180     009E                     _ADRESL	set	158
   181     009F                     _ADCON1	set	159
   182     0088                     _TRISD	set	136
   183     0086                     _TRISB	set	134
   184     0428                     _TRISA0	set	1064
   185                           
   186                           	psect	strings
   187     0003                     __pstrings:
   188     0003                     stringtab:
   189     0003                     __stringtab:
   190     0003                     stringcode:	
   191                           ;	String table - string pointers are 1 byte each
   192                           
   193     0003                     stringdir:
   194     0003  3000               	movlw	high stringdir
   195     0004  008A               	movwf	10
   196     0005  0804               	movf	4,w
   197     0006  0A84               	incf	4,f
   198     0007  0782               	addwf	2,f
   199     0008                     __stringbase:
   200     0008  3400               	retlw	0
   201     0009                     __end_of__stringtab:
   202     0009                     STR_1:
   203     0009  3441               	retlw	65	;'A'
   204     000A  3444               	retlw	68	;'D'
   205     000B  3443               	retlw	67	;'C'
   206     000C  3420               	retlw	32	;' '
   207     000D  3444               	retlw	68	;'D'
   208     000E  3465               	retlw	101	;'e'
   209     000F  3467               	retlw	103	;'g'
   210     0010  3465               	retlw	101	;'e'
   211     0011  3472               	retlw	114	;'r'
   212     0012  3469               	retlw	105	;'i'
   213     0013  3420               	retlw	32	;' '
   214     0014  343A               	retlw	58	;':'
   215     0015  3400               	retlw	0
   216                           
   217                           	psect	cinit
   218     07F8                     start_initialization:	
   219                           ; #config settings
   220                           
   221     07F8                     __initialization:
   222                           
   223                           ; Clear objects allocated to BANK0
   224     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   225     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   226     07FA  01A0               	clrf	__pbssBANK0& (0+127)
   227     07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2E85   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssBANK0
   236     0020                     __pbssBANK0:
   237     0020                     _i:
   238     0020                     	ds	2
   239                           
   240                           	psect	cstackCOMMON
   241     0070                     __pcstackCOMMON:
   242     0070                     ?_lcdBaslangic:
   243     0070                     ?_ekrandaGoster:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?_komut:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ??_komut:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?_adcOku:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ?_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ?_veri:	
   259                           ; 1 bytes @ 0x0
   260                           
   261     0070                     ??_veri:	
   262                           ; 1 bytes @ 0x0
   263                           
   264     0070                     ?___lwdiv:	
   265                           ; 1 bytes @ 0x0
   266                           
   267     0070                     komut@a:	
   268                           ; 2 bytes @ 0x0
   269                           
   270     0070                     veri@b:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     ___lwdiv@divisor:	
   274                           ; 1 bytes @ 0x0
   275                           
   276                           
   277                           ; 2 bytes @ 0x0
   278     0070                     	ds	1
   279     0071                     ??_lcdBaslangic:
   280     0071                     ??_ekrandaGoster:	
   281                           ; 1 bytes @ 0x1
   282                           
   283     0071                     ekrandaGoster@metin:	
   284                           ; 1 bytes @ 0x1
   285                           
   286                           
   287                           ; 1 bytes @ 0x1
   288     0071                     	ds	1
   289     0072                     ___lwdiv@dividend:
   290                           
   291                           ; 2 bytes @ 0x2
   292     0072                     	ds	2
   293     0074                     ??___lwdiv:
   294     0074                     ___lwdiv@quotient:	
   295                           ; 1 bytes @ 0x4
   296                           
   297                           
   298                           ; 2 bytes @ 0x4
   299     0074                     	ds	2
   300     0076                     ___lwdiv@counter:
   301                           
   302                           ; 1 bytes @ 0x6
   303     0076                     	ds	1
   304     0077                     ?___lwmod:
   305     0077                     ___lwmod@divisor:	
   306                           ; 2 bytes @ 0x7
   307                           
   308                           
   309                           ; 2 bytes @ 0x7
   310     0077                     	ds	2
   311     0079                     ___lwmod@dividend:
   312                           
   313                           ; 2 bytes @ 0x9
   314     0079                     	ds	2
   315     007B                     ??___lwmod:
   316     007B                     ___lwmod@counter:	
   317                           ; 1 bytes @ 0xB
   318                           
   319                           
   320                           ; 1 bytes @ 0xB
   321     007B                     	ds	1
   322     007C                     ??_adcOku:
   323     007C                     adcOku@adcDeger:	
   324                           ; 1 bytes @ 0xC
   325                           
   326                           
   327                           ; 2 bytes @ 0xC
   328     007C                     	ds	2
   329     007E                     ??_main:
   330                           
   331                           	psect	maintext
   332     0685                     __pmaintext:	
   333                           ; 1 bytes @ 0xE
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 21 in file "newmain.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 300/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels required when called: 2
   359 ;; This function calls:
   360 ;;		_adcOku
   361 ;;		_ekrandaGoster
   362 ;;		_komut
   363 ;;		_lcdBaslangic
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369     0685                     _main:	
   370                           ;psect for function _main
   371                           
   372                           
   373                           ;newmain.c: 24: TRISB = 0;
   374                           
   375                           ;incstack = 0
   376                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   377     0685  1683               	bsf	3,5	;RP0=1, select bank1
   378     0686  0186               	clrf	6	;volatile
   379                           
   380                           ;newmain.c: 25: TRISD = 0;
   381     0687  0188               	clrf	8	;volatile
   382                           
   383                           ;newmain.c: 26: TRISA0 = 1;
   384     0688  1405               	bsf	5,0	;volatile
   385                           
   386                           ;newmain.c: 29: lcdBaslangic();
   387     0689  120A  118A  266E  120A  118A  	fcall	_lcdBaslangic
   388                           
   389                           ;newmain.c: 30: ekrandaGoster("ADC Degeri :");
   390     068E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   391     068F  120A  118A  26A0  120A  118A  	fcall	_ekrandaGoster
   392     0694                     l834:
   393                           
   394                           ;newmain.c: 33: {;newmain.c: 35: komut(0x8C);
   395     0694  308C               	movlw	140
   396     0695  120A  118A  26BC  120A  118A  	fcall	_komut
   397                           
   398                           ;newmain.c: 36: adcOku();
   399     069A  120A  118A  276D  120A  118A  	fcall	_adcOku
   400     069F  2E94               	goto	l834
   401     06A0                     __end_of_main:
   402                           
   403                           	psect	text1
   404     066E                     __ptext1:	
   405 ;; *************** function _lcdBaslangic *****************
   406 ;; Defined at:
   407 ;;		line 40 in file "newmain.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : B00/100
   418 ;;		On exit  : 300/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0
   424 ;;      Totals:         0       0       0       0       0
   425 ;;Total ram usage:        0 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; Hardware stack levels required when called: 1
   428 ;; This function calls:
   429 ;;		_komut
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435     066E                     _lcdBaslangic:	
   436                           ;psect for function _lcdBaslangic
   437                           
   438                           
   439                           ;newmain.c: 43: komut(0x38);
   440                           
   441                           ;incstack = 0
   442                           ; Regs used in _lcdBaslangic: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   443     066E  3038               	movlw	56
   444     066F  120A  118A  26BC  120A  118A  	fcall	_komut
   445                           
   446                           ;newmain.c: 44: komut(0x0C);
   447     0674  300C               	movlw	12
   448     0675  120A  118A  26BC  120A  118A  	fcall	_komut
   449                           
   450                           ;newmain.c: 45: komut(0x06);
   451     067A  3006               	movlw	6
   452     067B  120A  118A  26BC  120A  118A  	fcall	_komut
   453                           
   454                           ;newmain.c: 46: komut(0x80);
   455     0680  3080               	movlw	128
   456     0681  120A  118A  26BC   	fcall	_komut
   457     0684  0008               	return
   458     0685                     __end_of_lcdBaslangic:
   459                           
   460                           	psect	text2
   461     06BC                     __ptext2:	
   462 ;; *************** function _komut *****************
   463 ;; Defined at:
   464 ;;		line 49 in file "newmain.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;  a               1    wreg     unsigned char 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  a               1    0[COMMON] unsigned char 
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2, btemp+1
   473 ;; Tracked objects:
   474 ;;		On entry : 200/0
   475 ;;		On exit  : 300/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         1       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0
   481 ;;      Totals:         1       0       0       0       0
   482 ;;Total ram usage:        1 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;;		_lcdBaslangic
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492     06BC                     _komut:	
   493                           ;psect for function _komut
   494                           
   495                           
   496                           ;incstack = 0
   497                           ; Regs used in _komut: [wreg+status,2+btemp+1]
   498                           ;komut@a stored from wreg
   499     06BC  00F0               	movwf	komut@a
   500                           
   501                           ;newmain.c: 52: PORTD = a;
   502     06BD  0870               	movf	komut@a,w
   503     06BE  1283               	bcf	3,5	;RP0=0, select bank0
   504     06BF  0088               	movwf	8	;volatile
   505                           
   506                           ;newmain.c: 53: RB0 = 0;
   507     06C0  1006               	bcf	6,0	;volatile
   508                           
   509                           ;newmain.c: 54: RB1 = 0;
   510     06C1  1086               	bcf	6,1	;volatile
   511                           
   512                           ;newmain.c: 55: RB2 = 1;
   513     06C2  1506               	bsf	6,2	;volatile
   514                           
   515                           ;newmain.c: 56: for (i = 0; i <= 1000; i++);
   516     06C3  01A0               	clrf	_i
   517     06C4  01A1               	clrf	_i+1
   518     06C5                     l728:
   519     06C5  0821               	movf	_i+1,w
   520     06C6  3A80               	xorlw	128
   521     06C7  00FF               	movwf	127
   522     06C8  3083               	movlw	131
   523     06C9  027F               	subwf	127,w
   524     06CA  1D03               	skipz
   525     06CB  2ECE               	goto	u185
   526     06CC  30E9               	movlw	233
   527     06CD  0220               	subwf	_i,w
   528     06CE                     u185:
   529     06CE  1803               	btfsc	3,0
   530     06CF  2ED9               	goto	l49
   531     06D0  3001               	movlw	1
   532     06D1  1283               	bcf	3,5	;RP0=0, select bank0
   533     06D2  1303               	bcf	3,6	;RP1=0, select bank0
   534     06D3  07A0               	addwf	_i,f
   535     06D4  1803               	skipnc
   536     06D5  0AA1               	incf	_i+1,f
   537     06D6  3000               	movlw	0
   538     06D7  07A1               	addwf	_i+1,f
   539     06D8  2EC5               	goto	l728
   540     06D9                     l49:
   541                           
   542                           ;newmain.c: 57: RB2 = 0;
   543     06D9  1283               	bcf	3,5	;RP0=0, select bank0
   544     06DA  1303               	bcf	3,6	;RP1=0, select bank0
   545     06DB  1106               	bcf	6,2	;volatile
   546     06DC  0008               	return
   547     06DD                     __end_of_komut:
   548                           
   549                           	psect	text3
   550     06A0                     __ptext3:	
   551 ;; *************** function _ekrandaGoster *****************
   552 ;; Defined at:
   553 ;;		line 71 in file "newmain.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  metin           1    wreg     PTR unsigned char 
   556 ;;		 -> STR_1(13), 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  metin           1    1[COMMON] PTR unsigned char 
   559 ;;		 -> STR_1(13), 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 300/0
   566 ;;		On exit  : 300/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         1       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0
   572 ;;      Totals:         1       0       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 1
   576 ;; This function calls:
   577 ;;		_veri
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583     06A0                     _ekrandaGoster:	
   584                           ;psect for function _ekrandaGoster
   585                           
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _ekrandaGoster: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   589                           ;ekrandaGoster@metin stored from wreg
   590     06A0  00F1               	movwf	ekrandaGoster@metin
   591     06A1                     l810:	
   592                           ;newmain.c: 74: while (*metin)
   593                           
   594     06A1  0871               	movf	ekrandaGoster@metin,w
   595     06A2  0084               	movwf	4
   596     06A3  120A  118A  2003  120A  118A  	fcall	stringdir
   597     06A8  3A00               	xorlw	0
   598     06A9  1903               	btfsc	3,2
   599     06AA  0008               	return
   600                           
   601                           ;newmain.c: 75: {;newmain.c: 76: veri(*metin++);
   602     06AB  0871               	movf	ekrandaGoster@metin,w
   603     06AC  0084               	movwf	4
   604     06AD  120A  118A  2003  120A  118A  	fcall	stringdir
   605     06B2  120A  118A  26DD  120A  118A  	fcall	_veri
   606     06B7  3001               	movlw	1
   607     06B8  00FF               	movwf	127
   608     06B9  087F               	movf	127,w
   609     06BA  07F1               	addwf	ekrandaGoster@metin,f
   610     06BB  2EA1               	goto	l810
   611     06BC                     __end_of_ekrandaGoster:
   612                           
   613                           	psect	text4
   614     076D                     __ptext4:	
   615 ;; *************** function _adcOku *****************
   616 ;; Defined at:
   617 ;;		line 80 in file "newmain.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  adcDeger        2   12[COMMON] unsigned int 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 300/0
   628 ;;		On exit  : 300/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         2       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0
   634 ;;      Totals:         2       0       0       0       0
   635 ;;Total ram usage:        2 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 1
   638 ;; This function calls:
   639 ;;		___lwdiv
   640 ;;		___lwmod
   641 ;;		_veri
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647     076D                     _adcOku:	
   648                           ;psect for function _adcOku
   649                           
   650                           
   651                           ;newmain.c: 82: unsigned int adcDeger;;newmain.c: 85: ADCON1 = 0xc0;
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _adcOku: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   655     076D  30C0               	movlw	192
   656     076E  1683               	bsf	3,5	;RP0=1, select bank1
   657     076F  009F               	movwf	31	;volatile
   658                           
   659                           ;newmain.c: 86: ADCON0 = 0x85;
   660     0770  3085               	movlw	133
   661     0771  1283               	bcf	3,5	;RP0=0, select bank0
   662     0772  009F               	movwf	31	;volatile
   663     0773                     l64:	
   664                           ;newmain.c: 88: ;
   665                           
   666     0773  191F               	btfsc	31,2	;volatile
   667     0774  2F73               	goto	l64
   668                           
   669                           ;newmain.c: 89: adcDeger = ((ADRESH << 8) | (ADRESL));
   670     0775  081E               	movf	30,w	;volatile
   671     0776  00FD               	movwf	adcOku@adcDeger+1
   672     0777  1683               	bsf	3,5	;RP0=1, select bank1
   673     0778  081E               	movf	30,w	;volatile
   674     0779  00FC               	movwf	adcOku@adcDeger
   675                           
   676                           ;newmain.c: 90: adcDeger = (adcDeger / 3) - 1;
   677     077A  3003               	movlw	3
   678     077B  00F0               	movwf	___lwdiv@divisor
   679     077C  3000               	movlw	0
   680     077D  00F1               	movwf	___lwdiv@divisor+1
   681     077E  087D               	movf	adcOku@adcDeger+1,w
   682     077F  00F3               	movwf	___lwdiv@dividend+1
   683     0780  087C               	movf	adcOku@adcDeger,w
   684     0781  00F2               	movwf	___lwdiv@dividend
   685     0782  120A  118A  2731  120A  118A  	fcall	___lwdiv
   686     0787  0870               	movf	?___lwdiv,w
   687     0788  3EFF               	addlw	255
   688     0789  00FC               	movwf	adcOku@adcDeger
   689     078A  0871               	movf	?___lwdiv+1,w
   690     078B  1803               	skipnc
   691     078C  3E01               	addlw	1
   692     078D  3EFF               	addlw	255
   693     078E  00FD               	movwf	adcOku@adcDeger+1
   694                           
   695                           ;newmain.c: 93: veri((adcDeger / 1000) + 48);
   696     078F  30E8               	movlw	232
   697     0790  00F0               	movwf	___lwdiv@divisor
   698     0791  3003               	movlw	3
   699     0792  00F1               	movwf	___lwdiv@divisor+1
   700     0793  087D               	movf	adcOku@adcDeger+1,w
   701     0794  00F3               	movwf	___lwdiv@dividend+1
   702     0795  087C               	movf	adcOku@adcDeger,w
   703     0796  00F2               	movwf	___lwdiv@dividend
   704     0797  120A  118A  2731  120A  118A  	fcall	___lwdiv
   705     079C  0870               	movf	?___lwdiv,w
   706     079D  3E30               	addlw	48
   707     079E  120A  118A  26DD  120A  118A  	fcall	_veri
   708                           
   709                           ;newmain.c: 94: veri(((adcDeger / 100) % 10) + 48);
   710     07A3  300A               	movlw	10
   711     07A4  00F7               	movwf	___lwmod@divisor
   712     07A5  3000               	movlw	0
   713     07A6  00F8               	movwf	___lwmod@divisor+1
   714     07A7  3064               	movlw	100
   715     07A8  00F0               	movwf	___lwdiv@divisor
   716     07A9  3000               	movlw	0
   717     07AA  00F1               	movwf	___lwdiv@divisor+1
   718     07AB  087D               	movf	adcOku@adcDeger+1,w
   719     07AC  00F3               	movwf	___lwdiv@dividend+1
   720     07AD  087C               	movf	adcOku@adcDeger,w
   721     07AE  00F2               	movwf	___lwdiv@dividend
   722     07AF  120A  118A  2731  120A  118A  	fcall	___lwdiv
   723     07B4  0871               	movf	?___lwdiv+1,w
   724     07B5  00FA               	movwf	___lwmod@dividend+1
   725     07B6  0870               	movf	?___lwdiv,w
   726     07B7  00F9               	movwf	___lwmod@dividend
   727     07B8  120A  118A  26FF  120A  118A  	fcall	___lwmod
   728     07BD  0877               	movf	?___lwmod,w
   729     07BE  3E30               	addlw	48
   730     07BF  120A  118A  26DD  120A  118A  	fcall	_veri
   731                           
   732                           ;newmain.c: 95: veri(((adcDeger / 10) % 10) + 48);
   733     07C4  300A               	movlw	10
   734     07C5  00F7               	movwf	___lwmod@divisor
   735     07C6  3000               	movlw	0
   736     07C7  00F8               	movwf	___lwmod@divisor+1
   737     07C8  300A               	movlw	10
   738     07C9  00F0               	movwf	___lwdiv@divisor
   739     07CA  3000               	movlw	0
   740     07CB  00F1               	movwf	___lwdiv@divisor+1
   741     07CC  087D               	movf	adcOku@adcDeger+1,w
   742     07CD  00F3               	movwf	___lwdiv@dividend+1
   743     07CE  087C               	movf	adcOku@adcDeger,w
   744     07CF  00F2               	movwf	___lwdiv@dividend
   745     07D0  120A  118A  2731  120A  118A  	fcall	___lwdiv
   746     07D5  0871               	movf	?___lwdiv+1,w
   747     07D6  00FA               	movwf	___lwmod@dividend+1
   748     07D7  0870               	movf	?___lwdiv,w
   749     07D8  00F9               	movwf	___lwmod@dividend
   750     07D9  120A  118A  26FF  120A  118A  	fcall	___lwmod
   751     07DE  0877               	movf	?___lwmod,w
   752     07DF  3E30               	addlw	48
   753     07E0  120A  118A  26DD  120A  118A  	fcall	_veri
   754                           
   755                           ;newmain.c: 96: veri((adcDeger % 10) + 48);
   756     07E5  300A               	movlw	10
   757     07E6  00F7               	movwf	___lwmod@divisor
   758     07E7  3000               	movlw	0
   759     07E8  00F8               	movwf	___lwmod@divisor+1
   760     07E9  087D               	movf	adcOku@adcDeger+1,w
   761     07EA  00FA               	movwf	___lwmod@dividend+1
   762     07EB  087C               	movf	adcOku@adcDeger,w
   763     07EC  00F9               	movwf	___lwmod@dividend
   764     07ED  120A  118A  26FF  120A  118A  	fcall	___lwmod
   765     07F2  0877               	movf	?___lwmod,w
   766     07F3  3E30               	addlw	48
   767     07F4  120A  118A  26DD   	fcall	_veri
   768     07F7  0008               	return
   769     07F8                     __end_of_adcOku:
   770                           
   771                           	psect	text5
   772     06DD                     __ptext5:	
   773 ;; *************** function _veri *****************
   774 ;; Defined at:
   775 ;;		line 60 in file "newmain.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  b               1    wreg     unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  b               1    0[COMMON] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, btemp+1
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 300/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0
   792 ;;      Totals:         1       0       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_ekrandaGoster
   799 ;;		_adcOku
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803     06DD                     _veri:	
   804                           ;psect for function _veri
   805                           
   806                           
   807                           ;incstack = 0
   808                           ; Regs used in _veri: [wreg+status,2+btemp+1]
   809                           ;veri@b stored from wreg
   810     06DD  00F0               	movwf	veri@b
   811                           
   812                           ;newmain.c: 63: PORTD = b;
   813     06DE  0870               	movf	veri@b,w
   814     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   815     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   816     06E1  0088               	movwf	8	;volatile
   817                           
   818                           ;newmain.c: 64: RB0 = 1;
   819     06E2  1406               	bsf	6,0	;volatile
   820                           
   821                           ;newmain.c: 65: RB1 = 0;
   822     06E3  1086               	bcf	6,1	;volatile
   823                           
   824                           ;newmain.c: 66: RB2 = 1;
   825     06E4  1506               	bsf	6,2	;volatile
   826                           
   827                           ;newmain.c: 67: for (i = 0; i <= 1000; i++);
   828     06E5  01A0               	clrf	_i
   829     06E6  01A1               	clrf	_i+1
   830     06E7                     l746:
   831     06E7  0821               	movf	_i+1,w
   832     06E8  3A80               	xorlw	128
   833     06E9  00FF               	movwf	127
   834     06EA  3083               	movlw	131
   835     06EB  027F               	subwf	127,w
   836     06EC  1D03               	skipz
   837     06ED  2EF0               	goto	u195
   838     06EE  30E9               	movlw	233
   839     06EF  0220               	subwf	_i,w
   840     06F0                     u195:
   841     06F0  1803               	btfsc	3,0
   842     06F1  2EFB               	goto	l54
   843     06F2  3001               	movlw	1
   844     06F3  1283               	bcf	3,5	;RP0=0, select bank0
   845     06F4  1303               	bcf	3,6	;RP1=0, select bank0
   846     06F5  07A0               	addwf	_i,f
   847     06F6  1803               	skipnc
   848     06F7  0AA1               	incf	_i+1,f
   849     06F8  3000               	movlw	0
   850     06F9  07A1               	addwf	_i+1,f
   851     06FA  2EE7               	goto	l746
   852     06FB                     l54:
   853                           
   854                           ;newmain.c: 68: RB2 = 0;
   855     06FB  1283               	bcf	3,5	;RP0=0, select bank0
   856     06FC  1303               	bcf	3,6	;RP1=0, select bank0
   857     06FD  1106               	bcf	6,2	;volatile
   858     06FE  0008               	return
   859     06FF                     __end_of_veri:
   860                           
   861                           	psect	text6
   862     06FF                     __ptext6:	
   863 ;; *************** function ___lwmod *****************
   864 ;; Defined at:
   865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwmod.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  divisor         2    7[COMMON] unsigned int 
   868 ;;  dividend        2    9[COMMON] unsigned int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  counter         1   11[COMMON] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  2    7[COMMON] unsigned int 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, btemp+1
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         4       0       0       0       0
   881 ;;      Locals:         1       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         5       0       0       0       0
   884 ;;Total ram usage:        5 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_adcOku
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     06FF                     ___lwmod:	
   894                           ;psect for function ___lwmod
   895                           
   896                           
   897                           ;incstack = 0
   898                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   899     06FF  0877               	movf	___lwmod@divisor,w
   900     0700  0478               	iorwf	___lwmod@divisor+1,w
   901     0701  1903               	btfsc	3,2
   902     0702  2F2C               	goto	l798
   903     0703  01FB               	clrf	___lwmod@counter
   904     0704  0AFB               	incf	___lwmod@counter,f
   905     0705                     l788:
   906     0705  1BF8               	btfsc	___lwmod@divisor+1,7
   907     0706  2F13               	goto	l790
   908     0707  3001               	movlw	1
   909     0708                     u285:
   910     0708  1003               	clrc
   911     0709  0DF7               	rlf	___lwmod@divisor,f
   912     070A  0DF8               	rlf	___lwmod@divisor+1,f
   913     070B  3EFF               	addlw	-1
   914     070C  1D03               	skipz
   915     070D  2F08               	goto	u285
   916     070E  3001               	movlw	1
   917     070F  00FF               	movwf	127
   918     0710  087F               	movf	127,w
   919     0711  07FB               	addwf	___lwmod@counter,f
   920     0712  2F05               	goto	l788
   921     0713                     l790:
   922     0713  0878               	movf	___lwmod@divisor+1,w
   923     0714  027A               	subwf	___lwmod@dividend+1,w
   924     0715  1D03               	skipz
   925     0716  2F19               	goto	u305
   926     0717  0877               	movf	___lwmod@divisor,w
   927     0718  0279               	subwf	___lwmod@dividend,w
   928     0719                     u305:
   929     0719  1C03               	skipc
   930     071A  2F21               	goto	l794
   931     071B  0877               	movf	___lwmod@divisor,w
   932     071C  02F9               	subwf	___lwmod@dividend,f
   933     071D  0878               	movf	___lwmod@divisor+1,w
   934     071E  1C03               	skipc
   935     071F  03FA               	decf	___lwmod@dividend+1,f
   936     0720  02FA               	subwf	___lwmod@dividend+1,f
   937     0721                     l794:
   938     0721  3001               	movlw	1
   939     0722                     u315:
   940     0722  1003               	clrc
   941     0723  0CF8               	rrf	___lwmod@divisor+1,f
   942     0724  0CF7               	rrf	___lwmod@divisor,f
   943     0725  3EFF               	addlw	-1
   944     0726  1D03               	skipz
   945     0727  2F22               	goto	u315
   946     0728  3001               	movlw	1
   947     0729  02FB               	subwf	___lwmod@counter,f
   948     072A  1D03               	btfss	3,2
   949     072B  2F13               	goto	l790
   950     072C                     l798:
   951     072C  087A               	movf	___lwmod@dividend+1,w
   952     072D  00F8               	movwf	?___lwmod+1
   953     072E  0879               	movf	___lwmod@dividend,w
   954     072F  00F7               	movwf	?___lwmod
   955     0730  0008               	return
   956     0731                     __end_of___lwmod:
   957                           
   958                           	psect	text7
   959     0731                     __ptext7:	
   960 ;; *************** function ___lwdiv *****************
   961 ;; Defined at:
   962 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwdiv.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  divisor         2    0[COMMON] unsigned int 
   965 ;;  dividend        2    2[COMMON] unsigned int 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  quotient        2    4[COMMON] unsigned int 
   968 ;;  counter         1    6[COMMON] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  2    0[COMMON] unsigned int 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, btemp+1
   973 ;; Tracked objects:
   974 ;;		On entry : 0/100
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         4       0       0       0       0
   979 ;;      Locals:         3       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0
   981 ;;      Totals:         7       0       0       0       0
   982 ;;Total ram usage:        7 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_adcOku
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991     0731                     ___lwdiv:	
   992                           ;psect for function ___lwdiv
   993                           
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   997     0731  01F4               	clrf	___lwdiv@quotient
   998     0732  01F5               	clrf	___lwdiv@quotient+1
   999     0733  0870               	movf	___lwdiv@divisor,w
  1000     0734  0471               	iorwf	___lwdiv@divisor+1,w
  1001     0735  1903               	btfsc	3,2
  1002     0736  2F68               	goto	l776
  1003     0737  01F6               	clrf	___lwdiv@counter
  1004     0738  0AF6               	incf	___lwdiv@counter,f
  1005     0739                     l764:
  1006     0739  1BF1               	btfsc	___lwdiv@divisor+1,7
  1007     073A  2F47               	goto	l766
  1008     073B  3001               	movlw	1
  1009     073C                     u215:
  1010     073C  1003               	clrc
  1011     073D  0DF0               	rlf	___lwdiv@divisor,f
  1012     073E  0DF1               	rlf	___lwdiv@divisor+1,f
  1013     073F  3EFF               	addlw	-1
  1014     0740  1D03               	skipz
  1015     0741  2F3C               	goto	u215
  1016     0742  3001               	movlw	1
  1017     0743  00FF               	movwf	127
  1018     0744  087F               	movf	127,w
  1019     0745  07F6               	addwf	___lwdiv@counter,f
  1020     0746  2F39               	goto	l764
  1021     0747                     l766:
  1022     0747  3001               	movlw	1
  1023     0748                     u235:
  1024     0748  1003               	clrc
  1025     0749  0DF4               	rlf	___lwdiv@quotient,f
  1026     074A  0DF5               	rlf	___lwdiv@quotient+1,f
  1027     074B  3EFF               	addlw	-1
  1028     074C  1D03               	skipz
  1029     074D  2F48               	goto	u235
  1030     074E  0871               	movf	___lwdiv@divisor+1,w
  1031     074F  0273               	subwf	___lwdiv@dividend+1,w
  1032     0750  1D03               	skipz
  1033     0751  2F54               	goto	u245
  1034     0752  0870               	movf	___lwdiv@divisor,w
  1035     0753  0272               	subwf	___lwdiv@dividend,w
  1036     0754                     u245:
  1037     0754  1C03               	skipc
  1038     0755  2F5D               	goto	l772
  1039     0756  0870               	movf	___lwdiv@divisor,w
  1040     0757  02F2               	subwf	___lwdiv@dividend,f
  1041     0758  0871               	movf	___lwdiv@divisor+1,w
  1042     0759  1C03               	skipc
  1043     075A  03F3               	decf	___lwdiv@dividend+1,f
  1044     075B  02F3               	subwf	___lwdiv@dividend+1,f
  1045     075C  1474               	bsf	___lwdiv@quotient,0
  1046     075D                     l772:
  1047     075D  3001               	movlw	1
  1048     075E                     u255:
  1049     075E  1003               	clrc
  1050     075F  0CF1               	rrf	___lwdiv@divisor+1,f
  1051     0760  0CF0               	rrf	___lwdiv@divisor,f
  1052     0761  3EFF               	addlw	-1
  1053     0762  1D03               	skipz
  1054     0763  2F5E               	goto	u255
  1055     0764  3001               	movlw	1
  1056     0765  02F6               	subwf	___lwdiv@counter,f
  1057     0766  1D03               	btfss	3,2
  1058     0767  2F47               	goto	l766
  1059     0768                     l776:
  1060     0768  0875               	movf	___lwdiv@quotient+1,w
  1061     0769  00F1               	movwf	?___lwdiv+1
  1062     076A  0874               	movf	___lwdiv@quotient,w
  1063     076B  00F0               	movwf	?___lwdiv
  1064     076C  0008               	return
  1065     076D                     __end_of___lwdiv:
  1066     007E                     btemp	set	126	;btemp
  1067     007E                     wtemp0	set	126
  1068                           
  1069                           	psect	config
  1070                           
  1071                           ;Config register CONFIG @ 0x2007
  1072                           ;	Oscillator Selection bits
  1073                           ;	FOSC = HS, HS oscillator
  1074                           ;	Watchdog Timer Enable bit
  1075                           ;	WDTE = OFF, WDT disabled
  1076                           ;	Power-up Timer Enable bit
  1077                           ;	PWRTE = 0x1, unprogrammed default
  1078                           ;	Brown-out Reset Enable bit
  1079                           ;	BOREN = 0x1, unprogrammed default
  1080                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1081                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1082                           ;	Data EEPROM Memory Code Protection bit
  1083                           ;	CPD = 0x1, unprogrammed default
  1084                           ;	Flash Program Memory Write Enable bits
  1085                           ;	WRT = 0x3, unprogrammed default
  1086                           ;	In-Circuit Debugger Mode bit
  1087                           ;	DEBUG = 0x1, unprogrammed default
  1088                           ;	Flash Program Memory Code Protection bit
  1089                           ;	CP = 0x1, unprogrammed default
  1090     2007                     	org	8199
  1091     2007  3F7A               	dw	16250

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ekrandaGoster@metin	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_adcOku
    _lcdBaslangic->_komut
    _ekrandaGoster->_veri
    _adcOku->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1335
                             _adcOku
                      _ekrandaGoster
                              _komut
                       _lcdBaslangic
 ---------------------------------------------------------------------------------
 (1) _lcdBaslangic                                         0     0      0      22
                              _komut
 ---------------------------------------------------------------------------------
 (2) _komut                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ekrandaGoster                                        1     1      0      94
                                              1 COMMON     1     1      0
                               _veri
 ---------------------------------------------------------------------------------
 (1) _adcOku                                               2     2      0    1197
                                             12 COMMON     2     2      0
                            ___lwdiv
                            ___lwmod
                               _veri
 ---------------------------------------------------------------------------------
 (2) _veri                                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     477
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     586
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcOku
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _veri
   _ekrandaGoster
     _veri
   _komut
   _lcdBaslangic
     _komut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 14 15:47:45 2023

                      _i 0020                        pc 0002                       l54 06FB  
                     l64 0773                       l49 06D9                       fsr 0004  
         ?_ekrandaGoster 0070                      l810 06A1                      l728 06C5  
                    l746 06E7                      l834 0694                      l772 075D  
                    l764 0739                      l766 0747                      l790 0713  
                    l776 0768                      l794 0721                      l788 0705  
                    l798 072C                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      u215 073C                      u305 0719  
                    u235 0748                      u315 0722                      u245 0754  
                    u255 075E                      u185 06CE                      u195 06F0  
                    u285 0708                      fsr0 0004                     STR_1 0009  
                   _main 0685                     _veri 06DD                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_veri 0070  
        __end_of___lwdiv 076D          __end_of___lwmod 0731     __end_of_lcdBaslangic 0685  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _komut 06BC                    pclath 000A                    veri@b 0070  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 06A0             __end_of_veri 06FF          ??_ekrandaGoster 0071  
                 ??_main 007E                   ??_veri 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ?_komut 0070                   _TRISA0 0428                   _adcOku 076D  
              ??___lwdiv 0074                ??___lwmod 007B                   komut@a 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_komut 06DD  
                ??_komut 0070               __pbssBANK0 0020             _lcdBaslangic 066E  
             __pmaintext 0685                  ?_adcOku 0070               __stringtab 0003  
                ___lwdiv 0731                  ___lwmod 06FF                  __ptext1 066E  
                __ptext2 06BC                  __ptext3 06A0                  __ptext4 076D  
                __ptext5 06DD                  __ptext6 06FF                  __ptext7 0731  
   end_of_initialization 07FC    __end_of_ekrandaGoster 06BC           __end_of_adcOku 07F8  
    start_initialization 07F8                 ??_adcOku 007C                ___latbits 0002  
     ekrandaGoster@metin 0071         ___lwdiv@dividend 0072           adcOku@adcDeger 007C  
               ?___lwdiv 0070                 ?___lwmod 0077                __pstrings 0003  
       ___lwdiv@quotient 0074                 _GO_nDONE 00FA              __stringbase 0008  
     __end_of__stringtab 0009          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
          ?_lcdBaslangic 0070         ___lwmod@dividend 0079           ??_lcdBaslangic 0071  
              stringcode 0003            _ekrandaGoster 06A0          ___lwmod@divisor 0077  
        ___lwmod@counter 007B                 stringdir 0003                 stringtab 0003  
